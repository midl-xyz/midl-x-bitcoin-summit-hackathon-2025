"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+presence@1.21.9";
exports.ids = ["vendor-chunks/@zag-js+presence@1.21.9"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zag-js+presence@1.21.9/node_modules/@zag-js/presence/dist/index.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zag-js+presence@1.21.9/node_modules/@zag-js/presence/dist/index.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/.pnpm/@zag-js+dom-query@1.21.9/node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/.pnpm/@zag-js+core@1.21.9/node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/.pnpm/@zag-js+types@1.21.9/node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n// src/presence.connect.ts\nfunction connect(service, _normalize) {\n  const { state, send, context } = service;\n  const present = state.matches(\"mounted\", \"unmountSuspended\");\n  return {\n    skip: !context.get(\"initial\"),\n    present,\n    setNode(node) {\n      if (!node) return;\n      send({ type: \"NODE.SET\", node });\n    },\n    unmount() {\n      send({ type: \"UNMOUNT\" });\n    }\n  };\n}\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.createMachine)({\n  props({ props: props2 }) {\n    return { ...props2, present: !!props2.present };\n  },\n  initialState({ prop }) {\n    return prop(\"present\") ? \"mounted\" : \"unmounted\";\n  },\n  refs() {\n    return {\n      node: null,\n      styles: null\n    };\n  },\n  context({ bindable }) {\n    return {\n      unmountAnimationName: bindable(() => ({ defaultValue: null })),\n      prevAnimationName: bindable(() => ({ defaultValue: null })),\n      present: bindable(() => ({ defaultValue: false })),\n      initial: bindable(() => ({\n        sync: true,\n        defaultValue: false\n      }))\n    };\n  },\n  exit: [\"clearInitial\", \"cleanupNode\"],\n  watch({ track, prop, send }) {\n    track([() => prop(\"present\")], () => {\n      send({ type: \"PRESENCE.CHANGED\" });\n    });\n  },\n  on: {\n    \"NODE.SET\": {\n      actions: [\"setupNode\"]\n    },\n    \"PRESENCE.CHANGED\": {\n      actions: [\"setInitial\", \"syncPresence\"]\n    }\n  },\n  states: {\n    mounted: {\n      on: {\n        UNMOUNT: {\n          target: \"unmounted\",\n          actions: [\"clearPrevAnimationName\", \"invokeOnExitComplete\"]\n        },\n        \"UNMOUNT.SUSPEND\": {\n          target: \"unmountSuspended\"\n        }\n      }\n    },\n    unmountSuspended: {\n      effects: [\"trackAnimationEvents\"],\n      on: {\n        MOUNT: {\n          target: \"mounted\",\n          actions: [\"setPrevAnimationName\"]\n        },\n        UNMOUNT: {\n          target: \"unmounted\",\n          actions: [\"clearPrevAnimationName\", \"invokeOnExitComplete\"]\n        }\n      }\n    },\n    unmounted: {\n      on: {\n        MOUNT: {\n          target: \"mounted\",\n          actions: [\"setPrevAnimationName\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      setInitial: ({ context }) => {\n        if (context.get(\"initial\")) return;\n        queueMicrotask(() => {\n          context.set(\"initial\", true);\n        });\n      },\n      clearInitial: ({ context }) => {\n        context.set(\"initial\", false);\n      },\n      invokeOnExitComplete: ({ prop }) => {\n        prop(\"onExitComplete\")?.();\n      },\n      setupNode: ({ refs, event }) => {\n        if (refs.get(\"node\") === event.node) return;\n        refs.set(\"node\", event.node);\n        refs.set(\"styles\", (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(event.node));\n      },\n      cleanupNode: ({ refs }) => {\n        refs.set(\"node\", null);\n        refs.set(\"styles\", null);\n      },\n      syncPresence: ({ context, refs, send, prop }) => {\n        const presentProp = prop(\"present\");\n        if (presentProp) {\n          return send({ type: \"MOUNT\", src: \"presence.changed\" });\n        }\n        const node = refs.get(\"node\");\n        if (!presentProp && node?.ownerDocument.visibilityState === \"hidden\") {\n          return send({ type: \"UNMOUNT\", src: \"visibilitychange\" });\n        }\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          const animationName = getAnimationName(refs.get(\"styles\"));\n          context.set(\"unmountAnimationName\", animationName);\n          if (animationName === \"none\" || animationName === context.get(\"prevAnimationName\") || refs.get(\"styles\")?.display === \"none\" || refs.get(\"styles\")?.animationDuration === \"0s\") {\n            send({ type: \"UNMOUNT\", src: \"presence.changed\" });\n          } else {\n            send({ type: \"UNMOUNT.SUSPEND\" });\n          }\n        });\n      },\n      setPrevAnimationName: ({ context, refs }) => {\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n          context.set(\"prevAnimationName\", getAnimationName(refs.get(\"styles\")));\n        });\n      },\n      clearPrevAnimationName: ({ context }) => {\n        context.set(\"prevAnimationName\", null);\n      }\n    },\n    effects: {\n      trackAnimationEvents: ({ context, refs, send }) => {\n        const node = refs.get(\"node\");\n        if (!node) return;\n        const onStart = (event) => {\n          const target = event.composedPath?.()?.[0] ?? event.target;\n          if (target === node) {\n            context.set(\"prevAnimationName\", getAnimationName(refs.get(\"styles\")));\n          }\n        };\n        const onEnd = (event) => {\n          const animationName = getAnimationName(refs.get(\"styles\"));\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === node && animationName === context.get(\"unmountAnimationName\")) {\n            send({ type: \"UNMOUNT\", src: \"animationend\" });\n          }\n        };\n        node.addEventListener(\"animationstart\", onStart);\n        node.addEventListener(\"animationcancel\", onEnd);\n        node.addEventListener(\"animationend\", onEnd);\n        const cleanupStyles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setStyle)(node, { animationFillMode: \"forwards\" });\n        return () => {\n          node.removeEventListener(\"animationstart\", onStart);\n          node.removeEventListener(\"animationcancel\", onEnd);\n          node.removeEventListener(\"animationend\", onEnd);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => cleanupStyles());\n        };\n      }\n    }\n  }\n});\nfunction getAnimationName(styles) {\n  return styles?.animationName || \"none\";\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_2__.createProps)()([\"onExitComplete\", \"present\", \"immediate\"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHphZy1qcytwcmVzZW5jZUAxLjIxLjkvbm9kZV9tb2R1bGVzL0B6YWctanMvcHJlc2VuY2UvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThGO0FBQ2pEO0FBQ0Q7O0FBRTVDO0FBQ0E7QUFDQSxVQUFVLHVCQUF1QjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQyxLQUFLO0FBQ0w7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFhO0FBQzNCLFVBQVUsZUFBZTtBQUN6QixhQUFhO0FBQ2IsR0FBRztBQUNILGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsWUFBWSxVQUFVO0FBQ3RCO0FBQ0EsOENBQThDLG9CQUFvQjtBQUNsRSwyQ0FBMkMsb0JBQW9CO0FBQy9ELGlDQUFpQyxxQkFBcUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0EsVUFBVSxtQkFBbUI7QUFDN0I7QUFDQSxhQUFhLDBCQUEwQjtBQUN2QyxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsdUJBQXVCLFNBQVM7QUFDaEM7QUFDQSxPQUFPO0FBQ1AsK0JBQStCLE1BQU07QUFDckM7QUFDQSxPQUFPO0FBQ1Asb0JBQW9CLGFBQWE7QUFDakM7QUFDQTtBQUNBLDJCQUEyQixtRUFBZ0I7QUFDM0MsT0FBTztBQUNQLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsdUJBQXVCLDJCQUEyQjtBQUNsRDtBQUNBO0FBQ0Esd0JBQXdCLHdDQUF3QztBQUNoRTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMENBQTBDO0FBQ2xFO0FBQ0EsUUFBUSxzREFBRztBQUNYO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwwQ0FBMEM7QUFDN0QsWUFBWTtBQUNaLG1CQUFtQix5QkFBeUI7QUFDNUM7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLCtCQUErQixlQUFlO0FBQzlDLFFBQVEsc0RBQUc7QUFDWDtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsaUNBQWlDLFNBQVM7QUFDMUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLCtCQUErQixxQkFBcUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaUVBQWM7QUFDdkM7QUFDQSxtQkFBbUIsc0NBQXNDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsMkRBQVEsU0FBUywrQkFBK0I7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDJEQUFRO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQVc7O0FBRVkiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9AemFnLWpzK3ByZXNlbmNlQDEuMjEuOS9ub2RlX21vZHVsZXMvQHphZy1qcy9wcmVzZW5jZS9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZXRTdHlsZSwgbmV4dFRpY2ssIHJhZiwgZ2V0Q29tcHV0ZWRTdHlsZSwgZ2V0RXZlbnRUYXJnZXQgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5pbXBvcnQgeyBjcmVhdGVNYWNoaW5lIH0gZnJvbSAnQHphZy1qcy9jb3JlJztcbmltcG9ydCB7IGNyZWF0ZVByb3BzIH0gZnJvbSAnQHphZy1qcy90eXBlcyc7XG5cbi8vIHNyYy9wcmVzZW5jZS5jb25uZWN0LnRzXG5mdW5jdGlvbiBjb25uZWN0KHNlcnZpY2UsIF9ub3JtYWxpemUpIHtcbiAgY29uc3QgeyBzdGF0ZSwgc2VuZCwgY29udGV4dCB9ID0gc2VydmljZTtcbiAgY29uc3QgcHJlc2VudCA9IHN0YXRlLm1hdGNoZXMoXCJtb3VudGVkXCIsIFwidW5tb3VudFN1c3BlbmRlZFwiKTtcbiAgcmV0dXJuIHtcbiAgICBza2lwOiAhY29udGV4dC5nZXQoXCJpbml0aWFsXCIpLFxuICAgIHByZXNlbnQsXG4gICAgc2V0Tm9kZShub2RlKSB7XG4gICAgICBpZiAoIW5vZGUpIHJldHVybjtcbiAgICAgIHNlbmQoeyB0eXBlOiBcIk5PREUuU0VUXCIsIG5vZGUgfSk7XG4gICAgfSxcbiAgICB1bm1vdW50KCkge1xuICAgICAgc2VuZCh7IHR5cGU6IFwiVU5NT1VOVFwiIH0pO1xuICAgIH1cbiAgfTtcbn1cbnZhciBtYWNoaW5lID0gY3JlYXRlTWFjaGluZSh7XG4gIHByb3BzKHsgcHJvcHM6IHByb3BzMiB9KSB7XG4gICAgcmV0dXJuIHsgLi4ucHJvcHMyLCBwcmVzZW50OiAhIXByb3BzMi5wcmVzZW50IH07XG4gIH0sXG4gIGluaXRpYWxTdGF0ZSh7IHByb3AgfSkge1xuICAgIHJldHVybiBwcm9wKFwicHJlc2VudFwiKSA/IFwibW91bnRlZFwiIDogXCJ1bm1vdW50ZWRcIjtcbiAgfSxcbiAgcmVmcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbm9kZTogbnVsbCxcbiAgICAgIHN0eWxlczogbnVsbFxuICAgIH07XG4gIH0sXG4gIGNvbnRleHQoeyBiaW5kYWJsZSB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVubW91bnRBbmltYXRpb25OYW1lOiBiaW5kYWJsZSgoKSA9PiAoeyBkZWZhdWx0VmFsdWU6IG51bGwgfSkpLFxuICAgICAgcHJldkFuaW1hdGlvbk5hbWU6IGJpbmRhYmxlKCgpID0+ICh7IGRlZmF1bHRWYWx1ZTogbnVsbCB9KSksXG4gICAgICBwcmVzZW50OiBiaW5kYWJsZSgoKSA9PiAoeyBkZWZhdWx0VmFsdWU6IGZhbHNlIH0pKSxcbiAgICAgIGluaXRpYWw6IGJpbmRhYmxlKCgpID0+ICh7XG4gICAgICAgIHN5bmM6IHRydWUsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZmFsc2VcbiAgICAgIH0pKVxuICAgIH07XG4gIH0sXG4gIGV4aXQ6IFtcImNsZWFySW5pdGlhbFwiLCBcImNsZWFudXBOb2RlXCJdLFxuICB3YXRjaCh7IHRyYWNrLCBwcm9wLCBzZW5kIH0pIHtcbiAgICB0cmFjayhbKCkgPT4gcHJvcChcInByZXNlbnRcIildLCAoKSA9PiB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJQUkVTRU5DRS5DSEFOR0VEXCIgfSk7XG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgXCJOT0RFLlNFVFwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJzZXR1cE5vZGVcIl1cbiAgICB9LFxuICAgIFwiUFJFU0VOQ0UuQ0hBTkdFRFwiOiB7XG4gICAgICBhY3Rpb25zOiBbXCJzZXRJbml0aWFsXCIsIFwic3luY1ByZXNlbmNlXCJdXG4gICAgfVxuICB9LFxuICBzdGF0ZXM6IHtcbiAgICBtb3VudGVkOiB7XG4gICAgICBvbjoge1xuICAgICAgICBVTk1PVU5UOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcInVubW91bnRlZFwiLFxuICAgICAgICAgIGFjdGlvbnM6IFtcImNsZWFyUHJldkFuaW1hdGlvbk5hbWVcIiwgXCJpbnZva2VPbkV4aXRDb21wbGV0ZVwiXVxuICAgICAgICB9LFxuICAgICAgICBcIlVOTU9VTlQuU1VTUEVORFwiOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcInVubW91bnRTdXNwZW5kZWRcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB1bm1vdW50U3VzcGVuZGVkOiB7XG4gICAgICBlZmZlY3RzOiBbXCJ0cmFja0FuaW1hdGlvbkV2ZW50c1wiXSxcbiAgICAgIG9uOiB7XG4gICAgICAgIE1PVU5UOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcIm1vdW50ZWRcIixcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRQcmV2QW5pbWF0aW9uTmFtZVwiXVxuICAgICAgICB9LFxuICAgICAgICBVTk1PVU5UOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcInVubW91bnRlZFwiLFxuICAgICAgICAgIGFjdGlvbnM6IFtcImNsZWFyUHJldkFuaW1hdGlvbk5hbWVcIiwgXCJpbnZva2VPbkV4aXRDb21wbGV0ZVwiXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB1bm1vdW50ZWQ6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIE1PVU5UOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcIm1vdW50ZWRcIixcbiAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRQcmV2QW5pbWF0aW9uTmFtZVwiXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBpbXBsZW1lbnRhdGlvbnM6IHtcbiAgICBhY3Rpb25zOiB7XG4gICAgICBzZXRJbml0aWFsOiAoeyBjb250ZXh0IH0pID0+IHtcbiAgICAgICAgaWYgKGNvbnRleHQuZ2V0KFwiaW5pdGlhbFwiKSkgcmV0dXJuO1xuICAgICAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgICAgY29udGV4dC5zZXQoXCJpbml0aWFsXCIsIHRydWUpO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBjbGVhckluaXRpYWw6ICh7IGNvbnRleHQgfSkgPT4ge1xuICAgICAgICBjb250ZXh0LnNldChcImluaXRpYWxcIiwgZmFsc2UpO1xuICAgICAgfSxcbiAgICAgIGludm9rZU9uRXhpdENvbXBsZXRlOiAoeyBwcm9wIH0pID0+IHtcbiAgICAgICAgcHJvcChcIm9uRXhpdENvbXBsZXRlXCIpPy4oKTtcbiAgICAgIH0sXG4gICAgICBzZXR1cE5vZGU6ICh7IHJlZnMsIGV2ZW50IH0pID0+IHtcbiAgICAgICAgaWYgKHJlZnMuZ2V0KFwibm9kZVwiKSA9PT0gZXZlbnQubm9kZSkgcmV0dXJuO1xuICAgICAgICByZWZzLnNldChcIm5vZGVcIiwgZXZlbnQubm9kZSk7XG4gICAgICAgIHJlZnMuc2V0KFwic3R5bGVzXCIsIGdldENvbXB1dGVkU3R5bGUoZXZlbnQubm9kZSkpO1xuICAgICAgfSxcbiAgICAgIGNsZWFudXBOb2RlOiAoeyByZWZzIH0pID0+IHtcbiAgICAgICAgcmVmcy5zZXQoXCJub2RlXCIsIG51bGwpO1xuICAgICAgICByZWZzLnNldChcInN0eWxlc1wiLCBudWxsKTtcbiAgICAgIH0sXG4gICAgICBzeW5jUHJlc2VuY2U6ICh7IGNvbnRleHQsIHJlZnMsIHNlbmQsIHByb3AgfSkgPT4ge1xuICAgICAgICBjb25zdCBwcmVzZW50UHJvcCA9IHByb3AoXCJwcmVzZW50XCIpO1xuICAgICAgICBpZiAocHJlc2VudFByb3ApIHtcbiAgICAgICAgICByZXR1cm4gc2VuZCh7IHR5cGU6IFwiTU9VTlRcIiwgc3JjOiBcInByZXNlbmNlLmNoYW5nZWRcIiB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBub2RlID0gcmVmcy5nZXQoXCJub2RlXCIpO1xuICAgICAgICBpZiAoIXByZXNlbnRQcm9wICYmIG5vZGU/Lm93bmVyRG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSBcImhpZGRlblwiKSB7XG4gICAgICAgICAgcmV0dXJuIHNlbmQoeyB0eXBlOiBcIlVOTU9VTlRcIiwgc3JjOiBcInZpc2liaWxpdHljaGFuZ2VcIiB9KTtcbiAgICAgICAgfVxuICAgICAgICByYWYoKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGFuaW1hdGlvbk5hbWUgPSBnZXRBbmltYXRpb25OYW1lKHJlZnMuZ2V0KFwic3R5bGVzXCIpKTtcbiAgICAgICAgICBjb250ZXh0LnNldChcInVubW91bnRBbmltYXRpb25OYW1lXCIsIGFuaW1hdGlvbk5hbWUpO1xuICAgICAgICAgIGlmIChhbmltYXRpb25OYW1lID09PSBcIm5vbmVcIiB8fCBhbmltYXRpb25OYW1lID09PSBjb250ZXh0LmdldChcInByZXZBbmltYXRpb25OYW1lXCIpIHx8IHJlZnMuZ2V0KFwic3R5bGVzXCIpPy5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fCByZWZzLmdldChcInN0eWxlc1wiKT8uYW5pbWF0aW9uRHVyYXRpb24gPT09IFwiMHNcIikge1xuICAgICAgICAgICAgc2VuZCh7IHR5cGU6IFwiVU5NT1VOVFwiLCBzcmM6IFwicHJlc2VuY2UuY2hhbmdlZFwiIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZW5kKHsgdHlwZTogXCJVTk1PVU5ULlNVU1BFTkRcIiB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHNldFByZXZBbmltYXRpb25OYW1lOiAoeyBjb250ZXh0LCByZWZzIH0pID0+IHtcbiAgICAgICAgcmFmKCgpID0+IHtcbiAgICAgICAgICBjb250ZXh0LnNldChcInByZXZBbmltYXRpb25OYW1lXCIsIGdldEFuaW1hdGlvbk5hbWUocmVmcy5nZXQoXCJzdHlsZXNcIikpKTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgY2xlYXJQcmV2QW5pbWF0aW9uTmFtZTogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgIGNvbnRleHQuc2V0KFwicHJldkFuaW1hdGlvbk5hbWVcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBlZmZlY3RzOiB7XG4gICAgICB0cmFja0FuaW1hdGlvbkV2ZW50czogKHsgY29udGV4dCwgcmVmcywgc2VuZCB9KSA9PiB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSByZWZzLmdldChcIm5vZGVcIik7XG4gICAgICAgIGlmICghbm9kZSkgcmV0dXJuO1xuICAgICAgICBjb25zdCBvblN0YXJ0ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQuY29tcG9zZWRQYXRoPy4oKT8uWzBdID8/IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICBpZiAodGFyZ2V0ID09PSBub2RlKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldChcInByZXZBbmltYXRpb25OYW1lXCIsIGdldEFuaW1hdGlvbk5hbWUocmVmcy5nZXQoXCJzdHlsZXNcIikpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uRW5kID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgYW5pbWF0aW9uTmFtZSA9IGdldEFuaW1hdGlvbk5hbWUocmVmcy5nZXQoXCJzdHlsZXNcIikpO1xuICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50KTtcbiAgICAgICAgICBpZiAodGFyZ2V0ID09PSBub2RlICYmIGFuaW1hdGlvbk5hbWUgPT09IGNvbnRleHQuZ2V0KFwidW5tb3VudEFuaW1hdGlvbk5hbWVcIikpIHtcbiAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIlVOTU9VTlRcIiwgc3JjOiBcImFuaW1hdGlvbmVuZFwiIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uc3RhcnRcIiwgb25TdGFydCk7XG4gICAgICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmNhbmNlbFwiLCBvbkVuZCk7XG4gICAgICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBvbkVuZCk7XG4gICAgICAgIGNvbnN0IGNsZWFudXBTdHlsZXMgPSBzZXRTdHlsZShub2RlLCB7IGFuaW1hdGlvbkZpbGxNb2RlOiBcImZvcndhcmRzXCIgfSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uc3RhcnRcIiwgb25TdGFydCk7XG4gICAgICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uY2FuY2VsXCIsIG9uRW5kKTtcbiAgICAgICAgICBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgb25FbmQpO1xuICAgICAgICAgIG5leHRUaWNrKCgpID0+IGNsZWFudXBTdHlsZXMoKSk7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbmZ1bmN0aW9uIGdldEFuaW1hdGlvbk5hbWUoc3R5bGVzKSB7XG4gIHJldHVybiBzdHlsZXM/LmFuaW1hdGlvbk5hbWUgfHwgXCJub25lXCI7XG59XG52YXIgcHJvcHMgPSBjcmVhdGVQcm9wcygpKFtcIm9uRXhpdENvbXBsZXRlXCIsIFwicHJlc2VudFwiLCBcImltbWVkaWF0ZVwiXSk7XG5cbmV4cG9ydCB7IGNvbm5lY3QsIG1hY2hpbmUsIHByb3BzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zag-js+presence@1.21.9/node_modules/@zag-js/presence/dist/index.mjs\n");

/***/ })

};
;