"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sats-connect+ui@0.0.6";
exports.ids = ["vendor-chunks/@sats-connect+ui@0.0.6"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@sats-connect+ui@0.0.6/node_modules/@sats-connect/ui/dist/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sats-connect+ui@0.0.6/node_modules/@sats-connect/ui/dist/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanup: () => (/* binding */ zn),\n/* harmony export */   close: () => (/* binding */ Mn),\n/* harmony export */   elementId: () => (/* binding */ Ee),\n/* harmony export */   elementName: () => (/* binding */ ge),\n/* harmony export */   getWalletProviderSelectorElement: () => (/* binding */ He),\n/* harmony export */   hasInstallPrompt: () => (/* binding */ ke),\n/* harmony export */   isInstalled: () => (/* binding */ jn),\n/* harmony export */   loadSelector: () => (/* binding */ Nn),\n/* harmony export */   selectWalletProvider: () => (/* binding */ Rn),\n/* harmony export */   walletClose: () => (/* binding */ Fn),\n/* harmony export */   walletOpen: () => (/* binding */ In)\n/* harmony export */ });\nfunction st(e) {\n  return Object.keys(e).reduce((n, i) => {\n    const r = e[i];\n    return n[i] = Object.assign({}, r), ze(r.value) && !ut(r.value) && !Array.isArray(r.value) && (n[i].value = Object.assign({}, r.value)), Array.isArray(r.value) && (n[i].value = r.value.slice(0)), n;\n  }, {});\n}\nfunction ot(e) {\n  return e ? Object.keys(e).reduce((n, i) => {\n    const r = e[i];\n    return n[i] = ze(r) && \"value\" in r ? r : {\n      value: r\n    }, n[i].attribute || (n[i].attribute = ct(i)), n[i].parse = \"parse\" in n[i] ? n[i].parse : typeof n[i].value != \"string\", n;\n  }, {}) : {};\n}\nfunction lt(e) {\n  return Object.keys(e).reduce((n, i) => (n[i] = e[i].value, n), {});\n}\nfunction at(e, t) {\n  const n = st(t);\n  return Object.keys(t).forEach((r) => {\n    const s = n[r], l = e.getAttribute(s.attribute), o = e[r];\n    l && (s.value = s.parse ? Ne(l) : l), o != null && (s.value = Array.isArray(o) ? o.slice(0) : o), s.reflect && $e(e, s.attribute, s.value), Object.defineProperty(e, r, {\n      get() {\n        return s.value;\n      },\n      set(c) {\n        const f = s.value;\n        s.value = c, s.reflect && $e(this, s.attribute, s.value);\n        for (let a = 0, u = this.__propertyChangedCallbacks.length; a < u; a++)\n          this.__propertyChangedCallbacks[a](r, c, f);\n      },\n      enumerable: !0,\n      configurable: !0\n    });\n  }), n;\n}\nfunction Ne(e) {\n  if (e)\n    try {\n      return JSON.parse(e);\n    } catch {\n      return e;\n    }\n}\nfunction $e(e, t, n) {\n  if (n == null || n === !1)\n    return e.removeAttribute(t);\n  let i = JSON.stringify(n);\n  e.__updating[t] = !0, i === \"true\" && (i = \"\"), e.setAttribute(t, i), Promise.resolve().then(() => delete e.__updating[t]);\n}\nfunction ct(e) {\n  return e.replace(/\\.?([A-Z]+)/g, (t, n) => \"-\" + n.toLowerCase()).replace(\"_\", \"-\").replace(/^-/, \"\");\n}\nfunction ze(e) {\n  return e != null && (typeof e == \"object\" || typeof e == \"function\");\n}\nfunction ut(e) {\n  return Object.prototype.toString.call(e) === \"[object Function]\";\n}\nfunction dt(e) {\n  return typeof e == \"function\" && e.toString().indexOf(\"class\") === 0;\n}\nlet ue;\nfunction ft(e, t) {\n  const n = Object.keys(t);\n  return class extends e {\n    static get observedAttributes() {\n      return n.map((r) => t[r].attribute);\n    }\n    constructor() {\n      super(), this.__initialized = !1, this.__released = !1, this.__releaseCallbacks = [], this.__propertyChangedCallbacks = [], this.__updating = {}, this.props = {};\n    }\n    connectedCallback() {\n      if (this.__initialized)\n        return;\n      this.__releaseCallbacks = [], this.__propertyChangedCallbacks = [], this.__updating = {}, this.props = at(this, t);\n      const r = lt(this.props), s = this.Component, l = ue;\n      try {\n        ue = this, this.__initialized = !0, dt(s) ? new s(r, {\n          element: this\n        }) : s(r, {\n          element: this\n        });\n      } finally {\n        ue = l;\n      }\n    }\n    async disconnectedCallback() {\n      if (await Promise.resolve(), this.isConnected)\n        return;\n      this.__propertyChangedCallbacks.length = 0;\n      let r = null;\n      for (; r = this.__releaseCallbacks.pop(); )\n        r(this);\n      delete this.__initialized, this.__released = !0;\n    }\n    attributeChangedCallback(r, s, l) {\n      if (this.__initialized && !this.__updating[r] && (r = this.lookupProp(r), r in t)) {\n        if (l == null && !this[r])\n          return;\n        this[r] = t[r].parse ? Ne(l) : l;\n      }\n    }\n    lookupProp(r) {\n      if (t)\n        return n.find((s) => r === s || r === t[s].attribute);\n    }\n    get renderRoot() {\n      return this.shadowRoot || this.attachShadow({\n        mode: \"open\"\n      });\n    }\n    addReleaseCallback(r) {\n      this.__releaseCallbacks.push(r);\n    }\n    addPropertyChangedCallback(r) {\n      this.__propertyChangedCallbacks.push(r);\n    }\n  };\n}\nfunction ht(e, t = {}, n = {}) {\n  const {\n    BaseElement: i = HTMLElement,\n    extension: r\n  } = n;\n  return (s) => {\n    if (!e)\n      throw new Error(\"tag is required to register a Component\");\n    let l = customElements.get(e);\n    return l ? (l.prototype.Component = s, l) : (l = ft(i, ot(t)), l.prototype.Component = s, l.prototype.registeredTag = e, customElements.define(e, l, r), l);\n  };\n}\nconst pt = (e, t) => e === t, me = Symbol(\"solid-proxy\"), yt = Symbol(\"solid-track\"), J = {\n  equals: pt\n};\nlet Re = De;\nconst M = 1, Q = 2, Ie = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nvar w = null;\nlet de = null, gt = null, m = null, S = null, I = null, ne = 0;\nfunction Z(e, t) {\n  const n = m, i = w, r = e.length === 0, s = t === void 0 ? i : t, l = r ? Ie : {\n    owned: null,\n    cleanups: null,\n    context: s ? s.context : null,\n    owner: s\n  }, o = r ? e : () => e(() => T(() => ie(l)));\n  w = l, m = null;\n  try {\n    return V(o, !0);\n  } finally {\n    m = n, w = i;\n  }\n}\nfunction j(e, t) {\n  t = t ? Object.assign({}, J, t) : J;\n  const n = {\n    value: e,\n    observers: null,\n    observerSlots: null,\n    comparator: t.equals || void 0\n  }, i = (r) => (typeof r == \"function\" && (r = r(n.value)), Be(n, r));\n  return [Ke.bind(n), i];\n}\nfunction A(e, t, n) {\n  const i = _e(e, t, !1, M);\n  q(i);\n}\nfunction Fe(e, t, n) {\n  Re = Ct;\n  const i = _e(e, t, !1, M);\n  (!n || !n.render) && (i.user = !0), I ? I.push(i) : q(i);\n}\nfunction F(e, t, n) {\n  n = n ? Object.assign({}, J, n) : J;\n  const i = _e(e, t, !0, 0);\n  return i.observers = null, i.observerSlots = null, i.comparator = n.equals || void 0, q(i), Ke.bind(i);\n}\nfunction mt(e) {\n  return V(e, !1);\n}\nfunction T(e) {\n  if (m === null)\n    return e();\n  const t = m;\n  m = null;\n  try {\n    return e();\n  } finally {\n    m = t;\n  }\n}\nfunction bt(e) {\n  Fe(() => T(e));\n}\nfunction Me(e) {\n  return w === null || (w.cleanups === null ? w.cleanups = [e] : w.cleanups.push(e)), e;\n}\nfunction wt(e) {\n  const t = F(e), n = F(() => be(t()));\n  return n.toArray = () => {\n    const i = n();\n    return Array.isArray(i) ? i : i != null ? [i] : [];\n  }, n;\n}\nfunction Ke() {\n  if (this.sources && this.state)\n    if (this.state === M)\n      q(this);\n    else {\n      const e = S;\n      S = null, V(() => te(this), !1), S = e;\n    }\n  if (m) {\n    const e = this.observers ? this.observers.length : 0;\n    m.sources ? (m.sources.push(this), m.sourceSlots.push(e)) : (m.sources = [this], m.sourceSlots = [e]), this.observers ? (this.observers.push(m), this.observerSlots.push(m.sources.length - 1)) : (this.observers = [m], this.observerSlots = [m.sources.length - 1]);\n  }\n  return this.value;\n}\nfunction Be(e, t, n) {\n  let i = e.value;\n  return (!e.comparator || !e.comparator(i, t)) && (e.value = t, e.observers && e.observers.length && V(() => {\n    for (let r = 0; r < e.observers.length; r += 1) {\n      const s = e.observers[r], l = de && de.running;\n      l && de.disposed.has(s), (l ? !s.tState : !s.state) && (s.pure ? S.push(s) : I.push(s), s.observers && Ue(s)), l || (s.state = M);\n    }\n    if (S.length > 1e6)\n      throw S = [], new Error();\n  }, !1)), t;\n}\nfunction q(e) {\n  if (!e.fn)\n    return;\n  ie(e);\n  const t = ne;\n  vt(\n    e,\n    e.value,\n    t\n  );\n}\nfunction vt(e, t, n) {\n  let i;\n  const r = w, s = m;\n  m = w = e;\n  try {\n    i = e.fn(t);\n  } catch (l) {\n    return e.pure && (e.state = M, e.owned && e.owned.forEach(ie), e.owned = null), e.updatedAt = n + 1, We(l);\n  } finally {\n    m = s, w = r;\n  }\n  (!e.updatedAt || e.updatedAt <= n) && (e.updatedAt != null && \"observers\" in e ? Be(e, i) : e.value = i, e.updatedAt = n);\n}\nfunction _e(e, t, n, i = M, r) {\n  const s = {\n    fn: e,\n    state: i,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: t,\n    owner: w,\n    context: w ? w.context : null,\n    pure: n\n  };\n  return w === null || w !== Ie && (w.owned ? w.owned.push(s) : w.owned = [s]), s;\n}\nfunction ee(e) {\n  if (e.state === 0)\n    return;\n  if (e.state === Q)\n    return te(e);\n  if (e.suspense && T(e.suspense.inFallback))\n    return e.suspense.effects.push(e);\n  const t = [e];\n  for (; (e = e.owner) && (!e.updatedAt || e.updatedAt < ne); )\n    e.state && t.push(e);\n  for (let n = t.length - 1; n >= 0; n--)\n    if (e = t[n], e.state === M)\n      q(e);\n    else if (e.state === Q) {\n      const i = S;\n      S = null, V(() => te(e, t[0]), !1), S = i;\n    }\n}\nfunction V(e, t) {\n  if (S)\n    return e();\n  let n = !1;\n  t || (S = []), I ? n = !0 : I = [], ne++;\n  try {\n    const i = e();\n    return xt(n), i;\n  } catch (i) {\n    n || (I = null), S = null, We(i);\n  }\n}\nfunction xt(e) {\n  if (S && (De(S), S = null), e)\n    return;\n  const t = I;\n  I = null, t.length && V(() => Re(t), !1);\n}\nfunction De(e) {\n  for (let t = 0; t < e.length; t++)\n    ee(e[t]);\n}\nfunction Ct(e) {\n  let t, n = 0;\n  for (t = 0; t < e.length; t++) {\n    const i = e[t];\n    i.user ? e[n++] = i : ee(i);\n  }\n  for (t = 0; t < n; t++)\n    ee(e[t]);\n}\nfunction te(e, t) {\n  e.state = 0;\n  for (let n = 0; n < e.sources.length; n += 1) {\n    const i = e.sources[n];\n    if (i.sources) {\n      const r = i.state;\n      r === M ? i !== t && (!i.updatedAt || i.updatedAt < ne) && ee(i) : r === Q && te(i, t);\n    }\n  }\n}\nfunction Ue(e) {\n  for (let t = 0; t < e.observers.length; t += 1) {\n    const n = e.observers[t];\n    n.state || (n.state = Q, n.pure ? S.push(n) : I.push(n), n.observers && Ue(n));\n  }\n}\nfunction ie(e) {\n  let t;\n  if (e.sources)\n    for (; e.sources.length; ) {\n      const n = e.sources.pop(), i = e.sourceSlots.pop(), r = n.observers;\n      if (r && r.length) {\n        const s = r.pop(), l = n.observerSlots.pop();\n        i < r.length && (s.sourceSlots[l] = i, r[i] = s, n.observerSlots[i] = l);\n      }\n    }\n  if (e.owned) {\n    for (t = e.owned.length - 1; t >= 0; t--)\n      ie(e.owned[t]);\n    e.owned = null;\n  }\n  if (e.cleanups) {\n    for (t = e.cleanups.length - 1; t >= 0; t--)\n      e.cleanups[t]();\n    e.cleanups = null;\n  }\n  e.state = 0;\n}\nfunction Pt(e) {\n  return e instanceof Error ? e : new Error(typeof e == \"string\" ? e : \"Unknown error\", {\n    cause: e\n  });\n}\nfunction We(e, t = w) {\n  throw Pt(e);\n}\nfunction be(e) {\n  if (typeof e == \"function\" && !e.length)\n    return be(e());\n  if (Array.isArray(e)) {\n    const t = [];\n    for (let n = 0; n < e.length; n++) {\n      const i = be(e[n]);\n      Array.isArray(i) ? t.push.apply(t, i) : t.push(i);\n    }\n    return t;\n  }\n  return e;\n}\nconst St = Symbol(\"fallback\");\nfunction Ae(e) {\n  for (let t = 0; t < e.length; t++)\n    e[t]();\n}\nfunction _t(e, t, n = {}) {\n  let i = [], r = [], s = [], l = 0, o = t.length > 1 ? [] : null;\n  return Me(() => Ae(s)), () => {\n    let c = e() || [], f, a;\n    return c[yt], T(() => {\n      let d = c.length, h, v, y, z, $, P, _, E, R;\n      if (d === 0)\n        l !== 0 && (Ae(s), s = [], i = [], r = [], l = 0, o && (o = [])), n.fallback && (i = [St], r[0] = Z((se) => (s[0] = se, n.fallback())), l = 1);\n      else if (l === 0) {\n        for (r = new Array(d), a = 0; a < d; a++)\n          i[a] = c[a], r[a] = Z(u);\n        l = d;\n      } else {\n        for (y = new Array(d), z = new Array(d), o && ($ = new Array(d)), P = 0, _ = Math.min(l, d); P < _ && i[P] === c[P]; P++)\n          ;\n        for (_ = l - 1, E = d - 1; _ >= P && E >= P && i[_] === c[E]; _--, E--)\n          y[E] = r[_], z[E] = s[_], o && ($[E] = o[_]);\n        for (h = /* @__PURE__ */ new Map(), v = new Array(E + 1), a = E; a >= P; a--)\n          R = c[a], f = h.get(R), v[a] = f === void 0 ? -1 : f, h.set(R, a);\n        for (f = P; f <= _; f++)\n          R = i[f], a = h.get(R), a !== void 0 && a !== -1 ? (y[a] = r[f], z[a] = s[f], o && ($[a] = o[f]), a = v[a], h.set(R, a)) : s[f]();\n        for (a = P; a < d; a++)\n          a in y ? (r[a] = y[a], s[a] = z[a], o && (o[a] = $[a], o[a](a))) : r[a] = Z(u);\n        r = r.slice(0, l = d), i = c.slice(0);\n      }\n      return r;\n    });\n    function u(d) {\n      if (s[a] = d, o) {\n        const [h, v] = j(a);\n        return o[a] = v, t(c[a], h);\n      }\n      return t(c[a]);\n    }\n  };\n}\nfunction g(e, t) {\n  return T(() => e(t || {}));\n}\nfunction Y() {\n  return !0;\n}\nconst Et = {\n  get(e, t, n) {\n    return t === me ? n : e.get(t);\n  },\n  has(e, t) {\n    return t === me ? !0 : e.has(t);\n  },\n  set: Y,\n  deleteProperty: Y,\n  getOwnPropertyDescriptor(e, t) {\n    return {\n      configurable: !0,\n      enumerable: !0,\n      get() {\n        return e.get(t);\n      },\n      set: Y,\n      deleteProperty: Y\n    };\n  },\n  ownKeys(e) {\n    return e.keys();\n  }\n};\nfunction fe(e) {\n  return (e = typeof e == \"function\" ? e() : e) ? e : {};\n}\nfunction kt() {\n  for (let e = 0, t = this.length; e < t; ++e) {\n    const n = this[e]();\n    if (n !== void 0)\n      return n;\n  }\n}\nfunction $t(...e) {\n  let t = !1;\n  for (let l = 0; l < e.length; l++) {\n    const o = e[l];\n    t = t || !!o && me in o, e[l] = typeof o == \"function\" ? (t = !0, F(o)) : o;\n  }\n  if (t)\n    return new Proxy(\n      {\n        get(l) {\n          for (let o = e.length - 1; o >= 0; o--) {\n            const c = fe(e[o])[l];\n            if (c !== void 0)\n              return c;\n          }\n        },\n        has(l) {\n          for (let o = e.length - 1; o >= 0; o--)\n            if (l in fe(e[o]))\n              return !0;\n          return !1;\n        },\n        keys() {\n          const l = [];\n          for (let o = 0; o < e.length; o++)\n            l.push(...Object.keys(fe(e[o])));\n          return [...new Set(l)];\n        }\n      },\n      Et\n    );\n  const n = {}, i = /* @__PURE__ */ Object.create(null);\n  for (let l = e.length - 1; l >= 0; l--) {\n    const o = e[l];\n    if (!o)\n      continue;\n    const c = Object.getOwnPropertyNames(o);\n    for (let f = c.length - 1; f >= 0; f--) {\n      const a = c[f];\n      if (a === \"__proto__\" || a === \"constructor\")\n        continue;\n      const u = Object.getOwnPropertyDescriptor(o, a);\n      if (!i[a])\n        i[a] = u.get ? {\n          enumerable: !0,\n          configurable: !0,\n          get: kt.bind(n[a] = [u.get.bind(o)])\n        } : u.value !== void 0 ? u : void 0;\n      else {\n        const d = n[a];\n        d && (u.get ? d.push(u.get.bind(o)) : u.value !== void 0 && d.push(() => u.value));\n      }\n    }\n  }\n  const r = {}, s = Object.keys(i);\n  for (let l = s.length - 1; l >= 0; l--) {\n    const o = s[l], c = i[o];\n    c && c.get ? Object.defineProperty(r, o, c) : r[o] = c ? c.value : void 0;\n  }\n  return r;\n}\nconst Ve = (e) => `Stale read from <${e}>.`;\nfunction At(e) {\n  const t = \"fallback\" in e && {\n    fallback: () => e.fallback\n  };\n  return F(_t(() => e.each, e.children, t || void 0));\n}\nfunction he(e) {\n  const t = e.keyed, n = F(() => e.when, void 0, {\n    equals: (i, r) => t ? i === r : !i == !r\n  });\n  return F(\n    () => {\n      const i = n();\n      if (i) {\n        const r = e.children;\n        return typeof r == \"function\" && r.length > 0 ? T(\n          () => r(\n            t ? i : () => {\n              if (!T(n))\n                throw Ve(\"Show\");\n              return e.when;\n            }\n          )\n        ) : r;\n      }\n      return e.fallback;\n    },\n    void 0,\n    void 0\n  );\n}\nfunction Lt(e) {\n  let t = !1;\n  const n = (s, l) => (t ? s[1] === l[1] : !s[1] == !l[1]) && s[2] === l[2], i = wt(() => e.children), r = F(\n    () => {\n      let s = i();\n      Array.isArray(s) || (s = [s]);\n      for (let l = 0; l < s.length; l++) {\n        const o = s[l].when;\n        if (o)\n          return t = !!s[l].keyed, [l, o, s[l]];\n      }\n      return [-1];\n    },\n    void 0,\n    {\n      equals: n\n    }\n  );\n  return F(\n    () => {\n      const [s, l, o] = r();\n      if (s < 0)\n        return e.fallback;\n      const c = o.children;\n      return typeof c == \"function\" && c.length > 0 ? T(\n        () => c(\n          t ? l : () => {\n            if (T(r)[0] !== s)\n              throw Ve(\"Match\");\n            return o.when;\n          }\n        )\n      ) : c;\n    },\n    void 0,\n    void 0\n  );\n}\nfunction pe(e) {\n  return e;\n}\nconst Ot = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n], jt = /* @__PURE__ */ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...Ot\n]), Tt = /* @__PURE__ */ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]), Nt = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n}), zt = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction Rt(e, t) {\n  const n = zt[e];\n  return typeof n == \"object\" ? n[t] ? n.$ : void 0 : n;\n}\nconst It = /* @__PURE__ */ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]), Ft = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nfunction Mt(e, t, n) {\n  let i = n.length, r = t.length, s = i, l = 0, o = 0, c = t[r - 1].nextSibling, f = null;\n  for (; l < r || o < s; ) {\n    if (t[l] === n[o]) {\n      l++, o++;\n      continue;\n    }\n    for (; t[r - 1] === n[s - 1]; )\n      r--, s--;\n    if (r === l) {\n      const a = s < i ? o ? n[o - 1].nextSibling : n[s - o] : c;\n      for (; o < s; )\n        e.insertBefore(n[o++], a);\n    } else if (s === o)\n      for (; l < r; )\n        (!f || !f.has(t[l])) && t[l].remove(), l++;\n    else if (t[l] === n[s - 1] && n[o] === t[r - 1]) {\n      const a = t[--r].nextSibling;\n      e.insertBefore(n[o++], t[l++].nextSibling), e.insertBefore(n[--s], a), t[r] = n[s];\n    } else {\n      if (!f) {\n        f = /* @__PURE__ */ new Map();\n        let u = o;\n        for (; u < s; )\n          f.set(n[u], u++);\n      }\n      const a = f.get(t[l]);\n      if (a != null)\n        if (o < a && a < s) {\n          let u = l, d = 1, h;\n          for (; ++u < r && u < s && !((h = f.get(t[u])) == null || h !== a + d); )\n            d++;\n          if (d > a - o) {\n            const v = t[l];\n            for (; o < a; )\n              e.insertBefore(n[o++], v);\n          } else\n            e.replaceChild(n[o++], t[l++]);\n        } else\n          l++;\n      else\n        t[l++].remove();\n    }\n  }\n}\nconst Le = \"_$DX_DELEGATE\";\nfunction C(e, t, n) {\n  let i;\n  const r = () => {\n    const l = document.createElement(\"template\");\n    return l.innerHTML = e, n ? l.content.firstChild.firstChild : l.content.firstChild;\n  }, s = t ? () => T(() => document.importNode(i || (i = r()), !0)) : () => (i || (i = r())).cloneNode(!0);\n  return s.cloneNode = s, s;\n}\nfunction Kt(e, t = window.document) {\n  const n = t[Le] || (t[Le] = /* @__PURE__ */ new Set());\n  for (let i = 0, r = e.length; i < r; i++) {\n    const s = e[i];\n    n.has(s) || (n.add(s), t.addEventListener(s, Ht));\n  }\n}\nfunction N(e, t, n) {\n  n == null ? e.removeAttribute(t) : e.setAttribute(t, n);\n}\nfunction Bt(e, t, n, i) {\n  i == null ? e.removeAttributeNS(t, n) : e.setAttributeNS(t, n, i);\n}\nfunction Dt(e, t) {\n  t == null ? e.removeAttribute(\"class\") : e.className = t;\n}\nfunction Ut(e, t, n, i) {\n  if (i)\n    Array.isArray(n) ? (e[`$$${t}`] = n[0], e[`$$${t}Data`] = n[1]) : e[`$$${t}`] = n;\n  else if (Array.isArray(n)) {\n    const r = n[0];\n    e.addEventListener(t, n[0] = (s) => r.call(e, n[1], s));\n  } else\n    e.addEventListener(t, n);\n}\nfunction Wt(e, t, n = {}) {\n  const i = Object.keys(t || {}), r = Object.keys(n);\n  let s, l;\n  for (s = 0, l = r.length; s < l; s++) {\n    const o = r[s];\n    !o || o === \"undefined\" || t[o] || (Oe(e, o, !1), delete n[o]);\n  }\n  for (s = 0, l = i.length; s < l; s++) {\n    const o = i[s], c = !!t[o];\n    !o || o === \"undefined\" || n[o] === c || !c || (Oe(e, o, !0), n[o] = c);\n  }\n  return n;\n}\nfunction L(e, t, n) {\n  if (!t)\n    return n ? N(e, \"style\") : t;\n  const i = e.style;\n  if (typeof t == \"string\")\n    return i.cssText = t;\n  typeof n == \"string\" && (i.cssText = n = void 0), n || (n = {}), t || (t = {});\n  let r, s;\n  for (s in n)\n    t[s] == null && i.removeProperty(s), delete n[s];\n  for (s in t)\n    r = t[s], r !== n[s] && (i.setProperty(s, r), n[s] = r);\n  return n;\n}\nfunction Vt(e, t = {}, n, i) {\n  const r = {};\n  return i || A(\n    () => r.children = U(e, t.children, r.children)\n  ), A(() => t.ref && t.ref(e)), A(() => Xt(e, t, n, !0, r, !0)), r;\n}\nfunction ye(e, t, n) {\n  return T(() => e(t, n));\n}\nfunction b(e, t, n, i) {\n  if (n !== void 0 && !i && (i = []), typeof t != \"function\")\n    return U(e, t, i, n);\n  A((r) => U(e, t(), r, n), i);\n}\nfunction Xt(e, t, n, i, r = {}, s = !1) {\n  t || (t = {});\n  for (const l in r)\n    if (!(l in t)) {\n      if (l === \"children\")\n        continue;\n      r[l] = je(e, l, null, r[l], n, s);\n    }\n  for (const l in t) {\n    if (l === \"children\") {\n      i || U(e, t.children);\n      continue;\n    }\n    const o = t[l];\n    r[l] = je(e, l, o, r[l], n, s);\n  }\n}\nfunction qt(e) {\n  return e.toLowerCase().replace(/-([a-z])/g, (t, n) => n.toUpperCase());\n}\nfunction Oe(e, t, n) {\n  const i = t.trim().split(/\\s+/);\n  for (let r = 0, s = i.length; r < s; r++)\n    e.classList.toggle(i[r], n);\n}\nfunction je(e, t, n, i, r, s) {\n  let l, o, c, f, a;\n  if (t === \"style\")\n    return L(e, n, i);\n  if (t === \"classList\")\n    return Wt(e, n, i);\n  if (n === i)\n    return i;\n  if (t === \"ref\")\n    s || n(e);\n  else if (t.slice(0, 3) === \"on:\") {\n    const u = t.slice(3);\n    i && e.removeEventListener(u, i), n && e.addEventListener(u, n);\n  } else if (t.slice(0, 10) === \"oncapture:\") {\n    const u = t.slice(10);\n    i && e.removeEventListener(u, i, !0), n && e.addEventListener(u, n, !0);\n  } else if (t.slice(0, 2) === \"on\") {\n    const u = t.slice(2).toLowerCase(), d = It.has(u);\n    if (!d && i) {\n      const h = Array.isArray(i) ? i[0] : i;\n      e.removeEventListener(u, h);\n    }\n    (d || n) && (Ut(e, u, n, d), d && Kt([u]));\n  } else if (t.slice(0, 5) === \"attr:\")\n    N(e, t.slice(5), n);\n  else if ((a = t.slice(0, 5) === \"prop:\") || (c = Tt.has(t)) || !r && ((f = Rt(t, e.tagName)) || (o = jt.has(t))) || (l = e.nodeName.includes(\"-\")))\n    a && (t = t.slice(5), o = !0), t === \"class\" || t === \"className\" ? Dt(e, n) : l && !o && !c ? e[qt(t)] = n : e[f || t] = n;\n  else {\n    const u = r && t.indexOf(\":\") > -1 && Ft[t.split(\":\")[0]];\n    u ? Bt(e, u, t, n) : N(e, Nt[t] || t, n);\n  }\n  return n;\n}\nfunction Ht(e) {\n  const t = `$$${e.type}`;\n  let n = e.composedPath && e.composedPath()[0] || e.target;\n  for (e.target !== n && Object.defineProperty(e, \"target\", {\n    configurable: !0,\n    value: n\n  }), Object.defineProperty(e, \"currentTarget\", {\n    configurable: !0,\n    get() {\n      return n || document;\n    }\n  }); n; ) {\n    const i = n[t];\n    if (i && !n.disabled) {\n      const r = n[`${t}Data`];\n      if (r !== void 0 ? i.call(n, r, e) : i.call(n, e), e.cancelBubble)\n        return;\n    }\n    n = n._$host || n.parentNode || n.host;\n  }\n}\nfunction U(e, t, n, i, r) {\n  for (; typeof n == \"function\"; )\n    n = n();\n  if (t === n)\n    return n;\n  const s = typeof t, l = i !== void 0;\n  if (e = l && n[0] && n[0].parentNode || e, s === \"string\" || s === \"number\")\n    if (s === \"number\" && (t = t.toString()), l) {\n      let o = n[0];\n      o && o.nodeType === 3 ? o.data !== t && (o.data = t) : o = document.createTextNode(t), n = D(e, n, i, o);\n    } else\n      n !== \"\" && typeof n == \"string\" ? n = e.firstChild.data = t : n = e.textContent = t;\n  else if (t == null || s === \"boolean\")\n    n = D(e, n, i);\n  else {\n    if (s === \"function\")\n      return A(() => {\n        let o = t();\n        for (; typeof o == \"function\"; )\n          o = o();\n        n = U(e, o, n, i);\n      }), () => n;\n    if (Array.isArray(t)) {\n      const o = [], c = n && Array.isArray(n);\n      if (we(o, t, n, r))\n        return A(() => n = U(e, o, n, i, !0)), () => n;\n      if (o.length === 0) {\n        if (n = D(e, n, i), l)\n          return n;\n      } else\n        c ? n.length === 0 ? Te(e, o, i) : Mt(e, n, o) : (n && D(e), Te(e, o));\n      n = o;\n    } else if (t.nodeType) {\n      if (Array.isArray(n)) {\n        if (l)\n          return n = D(e, n, i, t);\n        D(e, n, null, t);\n      } else\n        n == null || n === \"\" || !e.firstChild ? e.appendChild(t) : e.replaceChild(t, e.firstChild);\n      n = t;\n    }\n  }\n  return n;\n}\nfunction we(e, t, n, i) {\n  let r = !1;\n  for (let s = 0, l = t.length; s < l; s++) {\n    let o = t[s], c = n && n[e.length], f;\n    if (!(o == null || o === !0 || o === !1))\n      if ((f = typeof o) == \"object\" && o.nodeType)\n        e.push(o);\n      else if (Array.isArray(o))\n        r = we(e, o, c) || r;\n      else if (f === \"function\")\n        if (i) {\n          for (; typeof o == \"function\"; )\n            o = o();\n          r = we(\n            e,\n            Array.isArray(o) ? o : [o],\n            Array.isArray(c) ? c : [c]\n          ) || r;\n        } else\n          e.push(o), r = !0;\n      else {\n        const a = String(o);\n        c && c.nodeType === 3 && c.data === a ? e.push(c) : e.push(document.createTextNode(a));\n      }\n  }\n  return r;\n}\nfunction Te(e, t, n = null) {\n  for (let i = 0, r = t.length; i < r; i++)\n    e.insertBefore(t[i], n);\n}\nfunction D(e, t, n, i) {\n  if (n === void 0)\n    return e.textContent = \"\";\n  const r = i || document.createTextNode(\"\");\n  if (t.length) {\n    let s = !1;\n    for (let l = t.length - 1; l >= 0; l--) {\n      const o = t[l];\n      if (r !== o) {\n        const c = o.parentNode === e;\n        !s && !l ? c ? e.replaceChild(r, o) : e.insertBefore(r, n) : c && o.remove();\n      } else\n        s = !0;\n    }\n  } else\n    e.insertBefore(r, n);\n  return [r];\n}\nfunction Yt(e) {\n  const t = Object.keys(e), n = {};\n  for (let i = 0; i < t.length; i++) {\n    const [r, s] = j(e[t[i]]);\n    Object.defineProperty(n, t[i], {\n      get: r,\n      set(l) {\n        s(() => l);\n      }\n    });\n  }\n  return n;\n}\nfunction Gt(e) {\n  if (e.assignedSlot && e.assignedSlot._$owner)\n    return e.assignedSlot._$owner;\n  let t = e.parentNode;\n  for (; t && !t._$owner && !(t.assignedSlot && t.assignedSlot._$owner); )\n    t = t.parentNode;\n  return t && t.assignedSlot ? t.assignedSlot._$owner : e._$owner;\n}\nfunction Zt(e) {\n  return (t, n) => {\n    const { element: i } = n;\n    return Z((r) => {\n      const s = Yt(t);\n      i.addPropertyChangedCallback((o, c) => s[o] = c), i.addReleaseCallback(() => {\n        i.renderRoot.textContent = \"\", r();\n      });\n      const l = e(s, n);\n      return b(i.renderRoot, l);\n    }, Gt(i));\n  };\n}\nfunction Jt(e, t, n) {\n  return arguments.length === 2 && (n = t, t = {}), ht(e, t)(Zt(n));\n}\nconst ve = \"sats-connect_wallet-provider-selector_select\", xe = \"sats-connect_wallet-provider-selector_cancel\", Ce = \"sats-connect_wallet-provider-selector_open\", Pe = \"sats-connect_wallet-provider-selector_close\", Xe = \"sats-connect_wallet-provider-selector_walletOpen\", qe = \"sats-connect_wallet-provider-selector_walletClose\", re = {\n  color: \"#181818\",\n  \"font-size\": \"18px\",\n  \"font-weight\": \"700\",\n  \"line-height\": \"1.4\"\n}, W = {\n  color: \"#181818\",\n  \"font-size\": \"14px\",\n  \"font-weight\": \"400\",\n  \"line-height\": \"1.4\"\n}, Qt = {\n  color: \"#181818\",\n  \"font-size\": \"14px\",\n  \"font-weight\": \"500\"\n};\nvar en = /* @__PURE__ */ C('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><g id=XCircle><path id=Vector d=\"M12 2.25C10.0716 2.25 8.18657 2.82183 6.58319 3.89317C4.97982 4.96451 3.73013 6.48726 2.99218 8.26884C2.25422 10.0504 2.06114 12.0108 2.43735 13.9021C2.81355 15.7934 3.74215 17.5307 5.10571 18.8943C6.46928 20.2579 8.20656 21.1865 10.0979 21.5627C11.9892 21.9389 13.9496 21.7458 15.7312 21.0078C17.5127 20.2699 19.0355 19.0202 20.1068 17.4168C21.1782 15.8134 21.75 13.9284 21.75 12C21.745 9.41566 20.7162 6.93859 18.8888 5.11118C17.0614 3.28378 14.5843 2.25496 12 2.25ZM15.5344 14.4656C15.6752 14.6078 15.7542 14.7999 15.7542 15C15.7542 15.2001 15.6752 15.3922 15.5344 15.5344C15.391 15.673 15.1994 15.7505 15 15.7505C14.8006 15.7505 14.609 15.673 14.4656 15.5344L12 13.0594L9.53438 15.5344C9.39102 15.673 9.19942 15.7505 9 15.7505C8.80059 15.7505 8.60898 15.673 8.46563 15.5344C8.32479 15.3922 8.24578 15.2001 8.24578 15C8.24578 14.7999 8.32479 14.6078 8.46563 14.4656L10.9406 12L8.46563 9.53437C8.34603 9.38865 8.28491 9.20366 8.29416 9.01537C8.30341 8.82708 8.38236 8.64896 8.51566 8.51566C8.64896 8.38236 8.82708 8.3034 9.01537 8.29416C9.20366 8.28491 9.38866 8.34603 9.53438 8.46563L12 10.9406L14.4656 8.46563C14.6114 8.34603 14.7963 8.28491 14.9846 8.29416C15.1729 8.3034 15.351 8.38236 15.4843 8.51566C15.6176 8.64896 15.6966 8.82708 15.7058 9.01537C15.7151 9.20366 15.654 9.38865 15.5344 9.53437L13.0594 12L15.5344 14.4656Z\"fill=black fill-opacity=0.3>'), tn = /* @__PURE__ */ C(`<style>\n          .close-selector-button:focus-visible {\n            outline: 2px solid #181818;\n            outline-offset: -0.25px;\n          }\n        `), nn = /* @__PURE__ */ C(\"<div role=button tabindex=0 class=close-selector-button>\");\nfunction rn(e) {\n  return (() => {\n    var t = en();\n    return t.style.setProperty(\"display\", \"block\"), Vt(t, e, !0, !0), t;\n  })();\n}\nfunction sn(e) {\n  function t(n) {\n    (n.key === \"Enter\" || n.key === \" \") && e.onClose();\n  }\n  return [tn(), (() => {\n    var n = nn();\n    return n.style.setProperty(\"position\", \"absolute\"), n.style.setProperty(\"top\", \"16px\"), n.style.setProperty(\"right\", \"16px\"), n.style.setProperty(\"background\", \"none\"), n.style.setProperty(\"border\", \"none\"), n.style.setProperty(\"cursor\", \"pointer\"), n.style.setProperty(\"padding\", \"0\"), n.style.setProperty(\"margin\", \"0\"), n.style.setProperty(\"border-radius\", \"50%\"), n.addEventListener(\"click\", e.onClose), n.addEventListener(\"keydown\", t), b(n, g(rn, {})), n;\n  })()];\n}\nvar on = /* @__PURE__ */ C(`<style>\n/*! modern-normalize v2.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n\tmargin: 0; /* Remove all margins from everywhere. */\n}\n\n:host {\n\t/* Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3) */\n\tfont-family:\n\t\t'DM Sans', /* Note: not part of modern-normalize, added specifically for this project. */\n\t\tsystem-ui,\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n\tline-height: 1.15; /* 1. Correct the line height in all browsers. */\n\t-webkit-text-size-adjust: 100%; /* 2. Prevent adjustments of font size after orientation changes in iOS. */\n\t-moz-tab-size: 4; /* 3. Use a more readable tab size (opinionated). */\n\ttab-size: 4; /* 3 */\n}\n\n/*\nSections\n========\n*/\n\n:host {\n\tmargin: 0; /* Remove the margin in all browsers. */\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\ttext-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n`);\nfunction ln() {\n  return on();\n}\nvar an = /* @__PURE__ */ C(\"<div class=divider><div>\");\nfunction cn() {\n  return (() => {\n    var e = an(), t = e.firstChild;\n    return t.style.setProperty(\"height\", \"100%\"), t.style.setProperty(\"width\", \"1px\"), t.style.setProperty(\"background\", \"#dcdcdc\"), e;\n  })();\n}\nvar un = /* @__PURE__ */ C(\"<div>\");\nfunction dn(e) {\n  return (() => {\n    var t = un();\n    return t.style.setProperty(\"padding\", \"24px\"), t.style.setProperty(\"height\", \"100%\"), b(t, () => e.children), t;\n  })();\n}\nvar fn = /* @__PURE__ */ C(\"<div>\");\nfunction hn(e) {\n  return (() => {\n    var t = fn();\n    return t.style.setProperty(\"display\", \"flex\"), t.style.setProperty(\"flex-direction\", \"column\"), t.style.setProperty(\"justify-content\", \"center\"), t.style.setProperty(\"align-items\", \"center\"), t.style.setProperty(\"height\", \"100%\"), b(t, () => e.children), t;\n  })();\n}\nvar pn = /* @__PURE__ */ C(\"<div><div>🤔</div><div>What is a wallet?</div><p>Wallets let you send, receive, store and display digital assets like Bitcoin, Stacks, Ordinals & NFTs.</p><p>Explore Bitcoin apps by connecting your wallet.\");\nfunction yn() {\n  return (() => {\n    var e = pn(), t = e.firstChild, n = t.nextSibling, i = n.nextSibling, r = i.nextSibling;\n    return e.style.setProperty(\"display\", \"flex\"), e.style.setProperty(\"flex-direction\", \"column\"), e.style.setProperty(\"row-gap\", \"8px\"), e.style.setProperty(\"justify-content\", \"center\"), e.style.setProperty(\"align-items\", \"center\"), t.style.setProperty(\"font-size\", \"50px\"), t.style.setProperty(\"line-height\", \"140%\"), A((s) => {\n      var l = re, o = W, c = W;\n      return s.e = L(n, l, s.e), s.t = L(i, o, s.t), s.a = L(r, c, s.a), s;\n    }, {\n      e: void 0,\n      t: void 0,\n      a: void 0\n    }), e;\n  })();\n}\nfunction Se(e) {\n  var n;\n  const t = (n = e.installPrompt) == null ? void 0 : n.url;\n  if (!t) {\n    console.error(\"No install prompt URL found for\", e.id);\n    return;\n  }\n  window.open(t, \"_blank\");\n}\nvar gn = /* @__PURE__ */ C(`<style>\n          .install-prompt-button:focus-visible {\n            outline: 2px solid #181818;\n            outline-offset: 2px;\n          }\n        `), mn = /* @__PURE__ */ C(\"<div><img><h1>Don't have <!>?</h1><p>Download it on the Chrome web store.</p><div class=install-prompt-button role=button tabindex=0>Get\");\nfunction bn(e) {\n  function t(i) {\n    (i.key === \"Enter\" || i.key === \" \") && Se(e.option);\n  }\n  function n() {\n    Se(e.option);\n  }\n  return [gn(), (() => {\n    var i = mn(), r = i.firstChild, s = r.nextSibling, l = s.firstChild, o = l.nextSibling;\n    o.nextSibling;\n    var c = s.nextSibling, f = c.nextSibling;\n    return i.style.setProperty(\"display\", \"flex\"), i.style.setProperty(\"flex-direction\", \"column\"), i.style.setProperty(\"align-items\", \"center\"), i.style.setProperty(\"row-gap\", \"16px\"), r.style.setProperty(\"border-radius\", \"12px\"), r.style.setProperty(\"height\", \"64px\"), r.style.setProperty(\"width\", \"64px\"), r.style.setProperty(\"object-fit\", \"cover\"), b(s, () => e.option.name, o), f.addEventListener(\"click\", n), f.addEventListener(\"keydown\", t), A((a) => {\n      var u = e.option.icon, d = e.option.name, h = {\n        ...re,\n        \"text-align\": \"center\"\n      }, v = W, y = {\n        ...Qt,\n        cursor: \"pointer\",\n        \"border-radius\": \"12px\",\n        background: \"#181818\",\n        color: \"white\",\n        padding: \"12px 16px\"\n      };\n      return u !== a.e && N(r, \"src\", a.e = u), d !== a.t && N(r, \"alt\", a.t = d), a.a = L(s, h, a.a), a.o = L(c, v, a.o), a.i = L(f, y, a.i), a;\n    }, {\n      e: void 0,\n      t: void 0,\n      a: void 0,\n      o: void 0,\n      i: void 0\n    }), i;\n  })()];\n}\nvar wn = /* @__PURE__ */ C('<svg width=20 height=20 viewBox=\"0 0 20 20\"xmlns=http://www.w3.org/2000/svg><circle cx=10 cy=10 r=9.05 stroke=black stroke-width=1.9 fill=none stroke-dasharray=\"42.65 14.22\"stroke-dashoffset=0><animateTransform attributeName=transform attributeType=XML type=rotate from=\"0 10 10\"to=\"360 10 10\"dur=0.75s repeatCount=indefinite>'), vn = /* @__PURE__ */ C(\"<div>\");\nconst xn = () => wn();\nfunction Cn() {\n  return (() => {\n    var e = vn();\n    return e.style.setProperty(\"display\", \"flex\"), e.style.setProperty(\"justify-content\", \"center\"), e.style.setProperty(\"align-items\", \"center\"), e.style.setProperty(\"height\", \"100%\"), e.style.setProperty(\"animation\", \"spin 1s linear infinite\"), b(e, g(xn, {})), e;\n  })();\n}\nvar Pn = /* @__PURE__ */ C(\"<div><img><h1>Opening <!>...</h1><p>Confirm the operation in \");\nfunction Sn(e) {\n  return (() => {\n    var t = Pn(), n = t.firstChild, i = n.nextSibling, r = i.firstChild, s = r.nextSibling;\n    s.nextSibling;\n    var l = i.nextSibling;\n    return l.firstChild, t.style.setProperty(\"display\", \"flex\"), t.style.setProperty(\"flex-direction\", \"column\"), t.style.setProperty(\"align-items\", \"center\"), t.style.setProperty(\"row-gap\", \"16px\"), n.style.setProperty(\"border-radius\", \"12px\"), n.style.setProperty(\"height\", \"64px\"), n.style.setProperty(\"width\", \"64px\"), n.style.setProperty(\"object-fit\", \"cover\"), b(i, () => e.option.name, s), b(l, () => e.option.name, null), b(t, g(Cn, {}), null), A((o) => {\n      var c = e.option.icon, f = e.option.name, a = {\n        ...re,\n        \"text-align\": \"center\"\n      }, u = W;\n      return c !== o.e && N(n, \"src\", o.e = c), f !== o.t && N(n, \"alt\", o.t = f), o.a = L(i, a, o.a), o.o = L(l, u, o.o), o;\n    }, {\n      e: void 0,\n      t: void 0,\n      a: void 0,\n      o: void 0\n    }), t;\n  })();\n}\nvar _n = /* @__PURE__ */ C(\"<div><div tabindex=0><img><div>\");\nfunction En(e) {\n  function t() {\n    e.onProviderSelected(e.id);\n  }\n  const n = F(() => ke(e) ? \"button\" : \"link\");\n  function i(u) {\n    if (n() === \"link\") {\n      u.key === \"Enter\" && t();\n      return;\n    }\n    if (n() === \"button\") {\n      (u.key === \"Enter\" || u.key === \" \") && t();\n      return;\n    }\n  }\n  const [r, s] = j(!1), [l, o] = j(!1), c = () => r() || l(), f = \"rgba(24, 24, 24, 0.20)\", a = \"rgba(24, 24, 24, 0.60)\";\n  return (() => {\n    var u = _n(), d = u.firstChild, h = d.firstChild, v = h.nextSibling;\n    return u.style.setProperty(\"aspect-ratio\", \"1 / 1\"), u.style.setProperty(\"overflow\", \"hidden\"), d.style.setProperty(\"display\", \"flex\"), d.style.setProperty(\"flex-direction\", \"column\"), d.style.setProperty(\"row-gap\", \"12px\"), d.style.setProperty(\"align-items\", \"center\"), d.style.setProperty(\"cursor\", \"pointer\"), d.style.setProperty(\"outline\", \"none\"), d.style.setProperty(\"padding-top\", \"10px\"), d.addEventListener(\"click\", t), d.addEventListener(\"keydown\", i), d.addEventListener(\"mouseenter\", () => s(!0)), d.addEventListener(\"mouseleave\", () => s(!1)), d.addEventListener(\"focus\", () => o(!0)), d.addEventListener(\"blur\", () => o(!1)), h.style.setProperty(\"width\", \"56px\"), h.style.setProperty(\"height\", \"56px\"), h.style.setProperty(\"object-fit\", \"cover\"), h.style.setProperty(\"border-radius\", \"12px\"), b(v, () => e.name), A((y) => {\n      var z = n(), $ = c() ? `6px solid ${f}` : \"none\", P = e.icon, _ = e.name, E = {\n        ...W,\n        color: c() ? a : void 0,\n        \"text-align\": \"center\"\n      };\n      return z !== y.e && N(d, \"role\", y.e = z), $ !== y.t && ((y.t = $) != null ? h.style.setProperty(\"outline\", $) : h.style.removeProperty(\"outline\")), P !== y.a && N(h, \"src\", y.a = P), _ !== y.o && N(h, \"alt\", y.o = _), y.i = L(v, E, y.i), y;\n    }, {\n      e: void 0,\n      t: void 0,\n      a: void 0,\n      o: void 0,\n      i: void 0\n    }), u;\n  })();\n}\nvar kn = /* @__PURE__ */ C('<link href=\"https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&amp;display=swap\"rel=stylesheet>'), $n = /* @__PURE__ */ C(\"<div class=side-panel>\"), An = /* @__PURE__ */ C('<div><div></div><div><div class=card-width-container><div class=card-height-container><div class=card><div class=card-grid><div class=main-panel><div></div><div></div><div class=wallets-grid-container data-desc=\"wallet grid container for padding\"><div class=wallets-grid data-desc=\"wallet grid container\">'), Ln = /* @__PURE__ */ C(`<div><style>\n        @keyframes wallet-selector-fade-in {\n          from {opacity: 0; transform: translateY(40px);}\n          to {opacity: 1; transform: translateY(0);}\n        }\n\n        @keyframes wallet-selector-fade-out {\n          from {opacity: 1; transform: translateY(0);}\n          to {opacity: 0; transform: translateY(40px);}\n        }\n        @keyframes wallet-selector-blur-in {\n          from {opacity: 0; backdrop-filter: blur(0px);}\n          to {opacity: 1; backdrop-filter: blur(10px);}\n        }\n\n        @keyframes wallet-selector-blur-out {\n          from {opacity: 1; backdrop-filter: blur(10px);}\n          to {opacity: 0; backdrop-filter: blur(0px);}\n        }\n      </style><style>`);\nconst G = \"24px\";\nfunction On() {\n  const [e, t] = j(), [n, i] = j(), [r, s] = j();\n  function l() {\n    const p = e(), x = r();\n    return !(!p || !x || !p.contains(x) || getComputedStyle(x).display === \"none\");\n  }\n  const [o, c] = j(!1), [f, a] = j(!1), [u, d] = j([]), [h, v] = j({\n    type: \"none\"\n  }), y = () => u().some((p) => jn(p)), z = () => c(!1);\n  function $() {\n    const p = new CustomEvent(xe, {\n      bubbles: !0,\n      composed: !0\n    });\n    window.dispatchEvent(p), z();\n  }\n  function P(p) {\n    p.key === \"Escape\" && $();\n  }\n  Fe(() => {\n    if (o()) {\n      window.addEventListener(\"keydown\", P);\n      return;\n    }\n    window.removeEventListener(\"keydown\", P);\n  });\n  function _(p) {\n    const x = u().find((K) => K.id === p);\n    if (ke(x)) {\n      l() ? v({\n        type: \"install-wallet-prompt\",\n        option: x\n      }) : Se(x);\n      return;\n    }\n    const O = new CustomEvent(ve, {\n      detail: p,\n      bubbles: !0,\n      composed: !0\n    });\n    window.dispatchEvent(O);\n  }\n  function E(p) {\n    mt(() => {\n      c(!0), a(!0);\n      const x = p.detail.options;\n      d(x), x.some((O) => !O.installPrompt) ? v({\n        type: \"explainer\"\n      }) : v({\n        type: \"none\"\n      });\n    });\n  }\n  function R() {\n    c(!1);\n  }\n  const se = () => {\n    o() || a(!1);\n  };\n  function Ye(p) {\n    const x = p.detail;\n    v({\n      type: \"opening-wallet\",\n      option: u().find((O) => O.id === x)\n    });\n  }\n  function Ge() {\n    v({\n      type: \"explainer\"\n    });\n  }\n  bt(() => {\n    window.addEventListener(Ce, E), window.addEventListener(Pe, R), window.addEventListener(Xe, Ye), window.addEventListener(qe, Ge), document.head.appendChild(kn());\n  }), Me(() => {\n    window.removeEventListener(Ce, E), window.removeEventListener(Pe, R);\n  });\n  function Ze(p) {\n    const x = p.target;\n    if (!x)\n      return;\n    const O = n();\n    O && (O.contains(x) || $());\n  }\n  return (() => {\n    var p = Ln(), x = p.firstChild, O = x.nextSibling;\n    return ye(t, p), p.style.setProperty(\"inset\", \"0\"), p.addEventListener(\"click\", Ze), p.addEventListener(\"keydown\", () => {\n      console.log(\"Inside root keydown\");\n    }), b(p, g(ln, {}), x), b(O, () => `\n        .card-width-container {\n          container: card-width-container / inline-size;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100%;\n          width: 740px;\n        }\n\n        .card-height-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-end;\n          height: 100%;\n          width: 100%;\n        }\n\n        .card {\n          min-height: 340px;\n          max-height: calc(100vh - 8rem);\n          width: 100%;\n          border-top-left-radius: ${G};\n          border-top-right-radius: ${G};\n\n          background: rgb(196, 177, 217);\n          overflow: hidden;\n\n          display: flex;\n          flex-direction: column;\n\n          position: \"relative\"; /* For the close button */\n          background-color: #ffffff;\n          display: ${f() ? \"block\" : \"none\"};\n\n          box-shadow: 0px 8px 64px 0px rgba(0, 0, 0, 0.25);\n          animation: ${o() ? \"wallet-selector-fade-in 0.4s cubic-bezier(.05, .7, .1, 1) forwards\" : \"wallet-selector-fade-out 0.2s cubic-bezier(.3, 0, .8, .15) forwards\"};\n        }\n\n        .card-grid {\n          flex-grow: 1;\n          height: 100%;\n          \n          display: grid;\n          grid-template-columns: 1fr;\n          grid-template-areas: \"mainPanel\";\n        }\n\n        .main-panel {\n          height: 100%;\n          overflow: hidden;\n          display: flex;\n          flex-direction: column;\n          grid-area: mainPanel;\n        }\n\n        .wallets-grid-container {\n          overflow: auto;\n          flex-grow: 1;\n        }\n\n        .wallets-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n          align-content: start;\n\n          padding-left: 24px;\n          padding-right: 24px;\n          padding-bottom: 40px;\n        }\n\n        .divider {\n          display: none;\n          grid-area: divider;\n        }\n\n        .side-panel {\n          display: none;\n          grid-area: sidePanel;\n        }\n\n        @container card-width-container (width > 400px) {\n          .card-height-container {\n            justify-content: center;\n          }\n\n          .card {\n            max-width: calc(100vw - 2rem);\n            max-height: 460px;\n            ${y() ? \"\" : \"width: 360px;\"}\n            border-bottom-left-radius: ${G};\n            border-bottom-right-radius: ${G};\n          }\n\n          .card-grid {\n            grid-template-columns: ${y() ? \"5fr auto 4fr\" : \"1fr\"};\n            grid-template-areas: ${y() ? '\"mainPanel divider sidePanel\"' : '\"mainPanel\"'};\n          }\n\n          .divider {\n            display: block;\n          }\n\n          .side-panel {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n          }\n        }\n      `), b(p, g(he, {\n      get when() {\n        return f();\n      },\n      get children() {\n        var K = An(), B = K.firstChild, X = B.nextSibling, Je = X.firstChild, Qe = Je.firstChild, H = Qe.firstChild, oe = H.firstChild, et = oe.firstChild, le = et.firstChild, ae = le.nextSibling, tt = ae.nextSibling, nt = tt.firstChild;\n        return K.style.setProperty(\"position\", \"fixed\"), K.style.setProperty(\"inset\", \"0\"), B.style.setProperty(\"background-color\", \"#FFFFFF80\"), B.style.setProperty(\"position\", \"absolute\"), B.style.setProperty(\"inset\", \"0\"), X.style.setProperty(\"display\", \"flex\"), X.style.setProperty(\"justify-content\", \"center\"), X.style.setProperty(\"align-items\", \"center\"), X.style.setProperty(\"height\", \"100%\"), ye(i, H), H.addEventListener(\"animationend\", se), b(le, () => y() ? \"Choose wallet to connect\" : \"Don't have a wallet?\"), b(ae, () => y() ? \"Start by selecting with one of the wallets below and confirming the connection.\" : \"Start by installing one of the wallets below.\"), b(nt, g(At, {\n          get each() {\n            return u();\n          },\n          children: (k) => g(En, $t(k, {\n            onProviderSelected: _\n          }))\n        })), b(oe, g(he, {\n          get when() {\n            return h().type !== \"none\";\n          },\n          get children() {\n            return g(cn, {});\n          }\n        }), null), b(oe, g(he, {\n          get when() {\n            return h().type !== \"none\";\n          },\n          get children() {\n            var k = $n();\n            return ye(s, k), b(k, g(dn, {\n              get children() {\n                return g(hn, {\n                  get children() {\n                    return g(Lt, {\n                      fallback: null,\n                      get children() {\n                        return [g(pe, {\n                          get when() {\n                            return h().type === \"install-wallet-prompt\";\n                          },\n                          get children() {\n                            return g(bn, {\n                              get option() {\n                                return h().option;\n                              }\n                            });\n                          }\n                        }), g(pe, {\n                          get when() {\n                            return h().type === \"explainer\";\n                          },\n                          get children() {\n                            return g(yn, {});\n                          }\n                        }), g(pe, {\n                          get when() {\n                            return h().type === \"opening-wallet\";\n                          },\n                          get children() {\n                            return g(Sn, {\n                              get option() {\n                                return h().option;\n                              }\n                            });\n                          }\n                        })];\n                      }\n                    });\n                  }\n                });\n              }\n            })), k;\n          }\n        }), null), b(H, g(sn, {\n          onClose: $\n        }), null), A((k) => {\n          var ce = o() ? \"wallet-selector-blur-in 0.2s cubic-bezier(.05, .7, .1, 1) forwards\" : \"wallet-selector-blur-out 0.2s cubic-bezier(.3, 0, .8, .15) forwards\", it = {\n            ...re,\n            margin: \"0\",\n            \"padding-top\": \"24px\",\n            \"padding-left\": \"24px\",\n            \"padding-right\": \"24px\",\n            \"padding-bottom\": \"16px\"\n          }, rt = {\n            ...W,\n            \"padding-left\": \"24px\",\n            \"padding-right\": \"24px\",\n            \"padding-bottom\": \"30px\"\n          };\n          return ce !== k.e && ((k.e = ce) != null ? B.style.setProperty(\"animation\", ce) : B.style.removeProperty(\"animation\")), k.t = L(le, it, k.t), k.a = L(ae, rt, k.a), k;\n        }, {\n          e: void 0,\n          t: void 0,\n          a: void 0\n        }), K;\n      }\n    }), null), A(() => (f() ? \"fixed\" : \"static\") != null ? p.style.setProperty(\"position\", f() ? \"fixed\" : \"static\") : p.style.removeProperty(\"position\")), p;\n  })();\n}\nconst Ee = \"sats-connect-wallet-provider-selector\", ge = Ee;\nfunction He() {\n  return document.getElementById(Ee);\n}\nfunction Nn() {\n  if (customElements.get(ge))\n    return;\n  Jt(ge, On);\n  const e = document.createElement(ge);\n  e.id = Ee, e.style.position = \"relative\", e.style.zIndex = \"999999\", document.body.appendChild(e);\n}\nfunction zn() {\n  const e = He();\n  e && e.remove();\n}\nfunction ke(e) {\n  return !!e.installPrompt;\n}\nfunction jn(e) {\n  return !ke(e);\n}\nfunction Rn(e) {\n  return new Promise((t, n) => {\n    if (!He()) {\n      n(\"Failed to detect the wallet provider selector.\");\n      return;\n    }\n    function r() {\n      window.removeEventListener(ve, s), window.removeEventListener(xe, l);\n    }\n    function s(c) {\n      t(c.detail), r();\n    }\n    function l() {\n      n(), r();\n    }\n    window.addEventListener(ve, s), window.addEventListener(xe, l);\n    const o = new CustomEvent(Ce, {\n      detail: e\n    });\n    window.dispatchEvent(o);\n  });\n}\nfunction In(e) {\n  const t = new CustomEvent(Xe, {\n    detail: e\n  });\n  window.dispatchEvent(t);\n}\nfunction Fn() {\n  const e = new CustomEvent(qe);\n  window.dispatchEvent(e);\n}\nfunction Mn() {\n  const e = new CustomEvent(Pe);\n  window.dispatchEvent(e);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sats-connect+ui@0.0.6/node_modules/@sats-connect/ui/dist/index.js\n");

/***/ })

};
;