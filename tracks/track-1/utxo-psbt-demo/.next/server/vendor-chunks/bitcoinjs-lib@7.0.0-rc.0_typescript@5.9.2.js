"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2";
exports.ids = ["vendor-chunks/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase58Check: () => (/* binding */ fromBase58Check),\n/* harmony export */   fromBech32: () => (/* binding */ fromBech32),\n/* harmony export */   fromOutputScript: () => (/* binding */ fromOutputScript),\n/* harmony export */   toBase58Check: () => (/* binding */ toBase58Check),\n/* harmony export */   toBech32: () => (/* binding */ toBech32),\n/* harmony export */   toOutputScript: () => (/* binding */ toOutputScript)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payments/index.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(ssr)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 2;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\n/**\n * Converts an output buffer to a future segwit address.\n * @param output - The output buffer.\n * @param network - The network object.\n * @returns The future segwit address.\n * @throws {TypeError} If the program length or version is invalid for segwit address.\n */\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\n/**\n * Decodes a base58check encoded Bitcoin address and returns the version and hash.\n *\n * @param address - The base58check encoded Bitcoin address to decode.\n * @returns An object containing the version and hash of the decoded address.\n * @throws {TypeError} If the address is too short or too long.\n */\nfunction fromBase58Check(address) {\n  const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\n/**\n * Converts a Bech32 or Bech32m encoded address to its corresponding data representation.\n * @param address - The Bech32 or Bech32m encoded address.\n * @returns An object containing the version, prefix, and data of the address.\n * @throws {TypeError} If the address uses the wrong encoding.\n */\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Uint8Array.from(data),\n  };\n}\n/**\n * Converts a hash to a Base58Check-encoded string.\n * @param hash - The hash to be encoded.\n * @param version - The version byte to be prepended to the encoded string.\n * @returns The Base58Check-encoded string.\n */\nfunction toBase58Check(hash, version) {\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.Hash160bitSchema, _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt8Schema]), [hash, version]);\n  const payload = new Uint8Array(21);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, version);\n  payload.set(hash, 1);\n  return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n}\n/**\n * Converts a buffer to a Bech32 or Bech32m encoded string.\n * @param data - The buffer to be encoded.\n * @param version - The version number to be used in the encoding.\n * @param prefix - The prefix string to be used in the encoding.\n * @returns The Bech32 or Bech32m encoded string.\n */\nfunction toBech32(data, version, prefix) {\n  const words = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.encode(prefix, words)\n    : bech32__WEBPACK_IMPORTED_MODULE_4__.bech32m.encode(prefix, words);\n}\n/**\n * Converts an output script to a Bitcoin address.\n * @param output - The output script as a Buffer.\n * @param network - The Bitcoin network (optional).\n * @returns The Bitcoin address corresponding to the output script.\n * @throws If the output script has no matching address.\n */\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2tr({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(_script_js__WEBPACK_IMPORTED_MODULE_2__.toASM(output) + ' has no matching Address');\n}\n/**\n * Converts a Bitcoin address to its corresponding output script.\n * @param address - The Bitcoin address to convert.\n * @param network - The Bitcoin network to use. Defaults to the Bitcoin network.\n * @returns The corresponding output script as a Buffer.\n * @throws If the address has an invalid prefix or no matching script.\n */\nfunction toOutputScript(address, network) {\n  network = network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (decodeBech32.version === 1) {\n        if (decodeBech32.data.length === 32)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2tr({ pubkey: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n/**\n * Checks if the given buffer is a valid BIP66-encoded signature.\n *\n * @param buffer - The buffer to check.\n * @returns A boolean indicating whether the buffer is a valid BIP66-encoded signature.\n */\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\n/**\n * Decodes a DER-encoded signature buffer and returns the R and S values.\n * @param buffer - The DER-encoded signature buffer.\n * @returns An object containing the R and S values.\n * @throws {Error} If the DER sequence length is too short, too long, or invalid.\n * @throws {Error} If the R or S length is zero or invalid.\n * @throws {Error} If the R or S value is negative or excessively padded.\n */\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = new Uint8Array(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  signature.set(r, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  signature.set(s, 6 + lenR);\n  return signature;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9iaXA2Ni5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9iaXA2Ni5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZWZlcmVuY2UgaHR0cHM6Ly9naXRodWIuY29tL2JpdGNvaW4vYmlwcy9ibG9iL21hc3Rlci9iaXAtMDA2Ni5tZWRpYXdpa2lcbi8vIEZvcm1hdDogMHgzMCBbdG90YWwtbGVuZ3RoXSAweDAyIFtSLWxlbmd0aF0gW1JdIDB4MDIgW1MtbGVuZ3RoXSBbU11cbi8vIE5PVEU6IFNJR0hBU0ggYnl0ZSBpZ25vcmVkIEFORCByZXN0cmljdGVkLCB0cnVuY2F0ZSBiZWZvcmUgdXNlXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gYnVmZmVyIGlzIGEgdmFsaWQgQklQNjYtZW5jb2RlZCBzaWduYXR1cmUuXG4gKlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBidWZmZXIgaXMgYSB2YWxpZCBCSVA2Ni1lbmNvZGVkIHNpZ25hdHVyZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKGJ1ZmZlcikge1xuICBpZiAoYnVmZmVyLmxlbmd0aCA8IDgpIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlci5sZW5ndGggPiA3MikgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmZmVyWzBdICE9PSAweDMwKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWZmZXJbMV0gIT09IGJ1ZmZlci5sZW5ndGggLSAyKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWZmZXJbMl0gIT09IDB4MDIpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgbGVuUiA9IGJ1ZmZlclszXTtcbiAgaWYgKGxlblIgPT09IDApIHJldHVybiBmYWxzZTtcbiAgaWYgKDUgKyBsZW5SID49IGJ1ZmZlci5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlcls0ICsgbGVuUl0gIT09IDB4MDIpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgbGVuUyA9IGJ1ZmZlcls1ICsgbGVuUl07XG4gIGlmIChsZW5TID09PSAwKSByZXR1cm4gZmFsc2U7XG4gIGlmICg2ICsgbGVuUiArIGxlblMgIT09IGJ1ZmZlci5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlcls0XSAmIDB4ODApIHJldHVybiBmYWxzZTtcbiAgaWYgKGxlblIgPiAxICYmIGJ1ZmZlcls0XSA9PT0gMHgwMCAmJiAhKGJ1ZmZlcls1XSAmIDB4ODApKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWZmZXJbbGVuUiArIDZdICYgMHg4MCkgcmV0dXJuIGZhbHNlO1xuICBpZiAobGVuUyA+IDEgJiYgYnVmZmVyW2xlblIgKyA2XSA9PT0gMHgwMCAmJiAhKGJ1ZmZlcltsZW5SICsgN10gJiAweDgwKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBEZWNvZGVzIGEgREVSLWVuY29kZWQgc2lnbmF0dXJlIGJ1ZmZlciBhbmQgcmV0dXJucyB0aGUgUiBhbmQgUyB2YWx1ZXMuXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIERFUi1lbmNvZGVkIHNpZ25hdHVyZSBidWZmZXIuXG4gKiBAcmV0dXJucyBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgUiBhbmQgUyB2YWx1ZXMuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIERFUiBzZXF1ZW5jZSBsZW5ndGggaXMgdG9vIHNob3J0LCB0b28gbG9uZywgb3IgaW52YWxpZC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgUiBvciBTIGxlbmd0aCBpcyB6ZXJvIG9yIGludmFsaWQuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIFIgb3IgUyB2YWx1ZSBpcyBuZWdhdGl2ZSBvciBleGNlc3NpdmVseSBwYWRkZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoYnVmZmVyKSB7XG4gIGlmIChidWZmZXIubGVuZ3RoIDwgOCkgdGhyb3cgbmV3IEVycm9yKCdERVIgc2VxdWVuY2UgbGVuZ3RoIGlzIHRvbyBzaG9ydCcpO1xuICBpZiAoYnVmZmVyLmxlbmd0aCA+IDcyKSB0aHJvdyBuZXcgRXJyb3IoJ0RFUiBzZXF1ZW5jZSBsZW5ndGggaXMgdG9vIGxvbmcnKTtcbiAgaWYgKGJ1ZmZlclswXSAhPT0gMHgzMCkgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBERVIgc2VxdWVuY2UnKTtcbiAgaWYgKGJ1ZmZlclsxXSAhPT0gYnVmZmVyLmxlbmd0aCAtIDIpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdERVIgc2VxdWVuY2UgbGVuZ3RoIGlzIGludmFsaWQnKTtcbiAgaWYgKGJ1ZmZlclsyXSAhPT0gMHgwMikgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBERVIgaW50ZWdlcicpO1xuICBjb25zdCBsZW5SID0gYnVmZmVyWzNdO1xuICBpZiAobGVuUiA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdSIGxlbmd0aCBpcyB6ZXJvJyk7XG4gIGlmICg1ICsgbGVuUiA+PSBidWZmZXIubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ1IgbGVuZ3RoIGlzIHRvbyBsb25nJyk7XG4gIGlmIChidWZmZXJbNCArIGxlblJdICE9PSAweDAyKSB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIERFUiBpbnRlZ2VyICgyKScpO1xuICBjb25zdCBsZW5TID0gYnVmZmVyWzUgKyBsZW5SXTtcbiAgaWYgKGxlblMgPT09IDApIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgemVybycpO1xuICBpZiAoNiArIGxlblIgKyBsZW5TICE9PSBidWZmZXIubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ1MgbGVuZ3RoIGlzIGludmFsaWQnKTtcbiAgaWYgKGJ1ZmZlcls0XSAmIDB4ODApIHRocm93IG5ldyBFcnJvcignUiB2YWx1ZSBpcyBuZWdhdGl2ZScpO1xuICBpZiAobGVuUiA+IDEgJiYgYnVmZmVyWzRdID09PSAweDAwICYmICEoYnVmZmVyWzVdICYgMHg4MCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdSIHZhbHVlIGV4Y2Vzc2l2ZWx5IHBhZGRlZCcpO1xuICBpZiAoYnVmZmVyW2xlblIgKyA2XSAmIDB4ODApIHRocm93IG5ldyBFcnJvcignUyB2YWx1ZSBpcyBuZWdhdGl2ZScpO1xuICBpZiAobGVuUyA+IDEgJiYgYnVmZmVyW2xlblIgKyA2XSA9PT0gMHgwMCAmJiAhKGJ1ZmZlcltsZW5SICsgN10gJiAweDgwKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1MgdmFsdWUgZXhjZXNzaXZlbHkgcGFkZGVkJyk7XG4gIC8vIG5vbi1CSVA2NiAtIGV4dHJhY3QgUiwgUyB2YWx1ZXNcbiAgcmV0dXJuIHtcbiAgICByOiBidWZmZXIuc2xpY2UoNCwgNCArIGxlblIpLFxuICAgIHM6IGJ1ZmZlci5zbGljZSg2ICsgbGVuUiksXG4gIH07XG59XG4vKlxuICogRXhwZWN0cyByIGFuZCBzIHRvIGJlIHBvc2l0aXZlIERFUiBpbnRlZ2Vycy5cbiAqXG4gKiBUaGUgREVSIGZvcm1hdCB1c2VzIHRoZSBtb3N0IHNpZ25pZmljYW50IGJpdCBhcyBhIHNpZ24gYml0ICgmIDB4ODApLlxuICogSWYgdGhlIHNpZ25pZmljYW50IGJpdCBpcyBzZXQgQU5EIHRoZSBpbnRlZ2VyIGlzIHBvc2l0aXZlLCBhIDB4MDAgaXMgcHJlcGVuZGVkLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICAgMCA9PiAgICAgMHgwMFxuICogICAgICAxID0+ICAgICAweDAxXG4gKiAgICAgLTEgPT4gICAgIDB4ZmZcbiAqICAgIDEyNyA9PiAgICAgMHg3ZlxuICogICAtMTI3ID0+ICAgICAweDgxXG4gKiAgICAxMjggPT4gICAweDAwODBcbiAqICAgLTEyOCA9PiAgICAgMHg4MFxuICogICAgMjU1ID0+ICAgMHgwMGZmXG4gKiAgIC0yNTUgPT4gICAweGZmMDFcbiAqICAxNjMwMCA9PiAgIDB4M2ZhY1xuICogLTE2MzAwID0+ICAgMHhjMDU0XG4gKiAgNjIzMDAgPT4gMHgwMGYzNWNcbiAqIC02MjMwMCA9PiAweGZmMGNhNFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHIsIHMpIHtcbiAgY29uc3QgbGVuUiA9IHIubGVuZ3RoO1xuICBjb25zdCBsZW5TID0gcy5sZW5ndGg7XG4gIGlmIChsZW5SID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ1IgbGVuZ3RoIGlzIHplcm8nKTtcbiAgaWYgKGxlblMgPT09IDApIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgemVybycpO1xuICBpZiAobGVuUiA+IDMzKSB0aHJvdyBuZXcgRXJyb3IoJ1IgbGVuZ3RoIGlzIHRvbyBsb25nJyk7XG4gIGlmIChsZW5TID4gMzMpIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgdG9vIGxvbmcnKTtcbiAgaWYgKHJbMF0gJiAweDgwKSB0aHJvdyBuZXcgRXJyb3IoJ1IgdmFsdWUgaXMgbmVnYXRpdmUnKTtcbiAgaWYgKHNbMF0gJiAweDgwKSB0aHJvdyBuZXcgRXJyb3IoJ1MgdmFsdWUgaXMgbmVnYXRpdmUnKTtcbiAgaWYgKGxlblIgPiAxICYmIHJbMF0gPT09IDB4MDAgJiYgIShyWzFdICYgMHg4MCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdSIHZhbHVlIGV4Y2Vzc2l2ZWx5IHBhZGRlZCcpO1xuICBpZiAobGVuUyA+IDEgJiYgc1swXSA9PT0gMHgwMCAmJiAhKHNbMV0gJiAweDgwKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1MgdmFsdWUgZXhjZXNzaXZlbHkgcGFkZGVkJyk7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IG5ldyBVaW50OEFycmF5KDYgKyBsZW5SICsgbGVuUyk7XG4gIC8vIDB4MzAgW3RvdGFsLWxlbmd0aF0gMHgwMiBbUi1sZW5ndGhdIFtSXSAweDAyIFtTLWxlbmd0aF0gW1NdXG4gIHNpZ25hdHVyZVswXSA9IDB4MzA7XG4gIHNpZ25hdHVyZVsxXSA9IHNpZ25hdHVyZS5sZW5ndGggLSAyO1xuICBzaWduYXR1cmVbMl0gPSAweDAyO1xuICBzaWduYXR1cmVbM10gPSByLmxlbmd0aDtcbiAgc2lnbmF0dXJlLnNldChyLCA0KTtcbiAgc2lnbmF0dXJlWzQgKyBsZW5SXSA9IDB4MDI7XG4gIHNpZ25hdHVyZVs1ICsgbGVuUl0gPSBzLmxlbmd0aDtcbiAgc2lnbmF0dXJlLnNldChzLCA2ICsgbGVuUik7XG4gIHJldHVybiBzaWduYXR1cmU7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Block: () => (/* binding */ Block)\n/* harmony export */ });\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bufferutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _merkle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merkle.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\n\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = _transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(hex));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = new Uint8Array(32);\n    target[29 - exponent] = (mantissa >> 16) & 0xff;\n    target[30 - exponent] = (mantissa >> 8) & 0xff;\n    target[31 - exponent] = mantissa & 0xff;\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.array(valibot__WEBPACK_IMPORTED_MODULE_5__.object({ getHash: valibot__WEBPACK_IMPORTED_MODULE_5__[\"function\"]() })), transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = (0,_merkle_js__WEBPACK_IMPORTED_MODULE_2__.fastMerkleRoot)(hashes, _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256);\n    return forWitness\n      ? _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  version = 1;\n  prevHash = undefined;\n  merkleRoot = undefined;\n  timestamp = 0;\n  witnessCommit = undefined;\n  bits = 0;\n  nonce = 0;\n  transactions = undefined;\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(\n        out =>\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(\n            out.script.slice(0, 6),\n            Uint8Array.from([0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed]),\n          ) === 0,\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Uint8Array && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Uint8Array &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash()));\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = new Uint8Array(this.byteLength(headersOnly));\n    const bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    const { bytes } = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encode(\n      this.transactions.length,\n      buffer,\n      bufferWriter.offset,\n    );\n    bufferWriter.offset += bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex(this.toBuffer(headersOnly));\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(hash, target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(this.merkleRoot, actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(this.witnessCommit, actualWitnessCommit) === 0;\n  }\n}\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferReader: () => (/* binding */ BufferReader),\n/* harmony export */   BufferWriter: () => (/* binding */ BufferWriter),\n/* harmony export */   cloneBuffer: () => (/* binding */ cloneBuffer),\n/* harmony export */   reverseBuffer: () => (/* binding */ reverseBuffer),\n/* harmony export */   varuint: () => (/* reexport module object */ varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varuint-bitcoin */ \"(ssr)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\nconst MAX_JS_NUMBER = 0x001fffffffffffff;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number' && typeof value !== 'bigint')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0 && value < BigInt(0))\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max && value > BigInt(max))\n    throw new Error('RangeError: value out of range');\n  if (Math.floor(Number(value)) !== Number(value))\n    throw new Error('value has a fractional component');\n}\n/**\n * Reverses the order of bytes in a buffer.\n * @param buffer - The buffer to reverse.\n * @returns A new buffer with the bytes reversed.\n */\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nfunction cloneBuffer(buffer) {\n  const clone = new Uint8Array(buffer.length);\n  clone.set(buffer);\n  return clone;\n}\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  buffer;\n  offset;\n  static withCapacity(size) {\n    return new BufferWriter(new Uint8Array(size));\n  }\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    valibot__WEBPACK_IMPORTED_MODULE_3__.parse(valibot__WEBPACK_IMPORTED_MODULE_3__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_0__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_0__.UInt32Schema]), [\n      buffer,\n      offset,\n    ]);\n  }\n  writeUInt8(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt8(this.buffer, this.offset, i);\n  }\n  writeInt32(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeInt32(this.buffer, this.offset, i, 'LE');\n  }\n  writeInt64(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeInt64(this.buffer, this.offset, BigInt(i), 'LE');\n  }\n  writeUInt32(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt32(this.buffer, this.offset, i, 'LE');\n  }\n  writeUInt64(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt64(this.buffer, this.offset, BigInt(i), 'LE');\n  }\n  writeVarInt(i) {\n    const { bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.encode(i, this.buffer, this.offset);\n    this.offset += bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.buffer.set(slice, this.offset);\n    this.offset += slice.length;\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n  end() {\n    if (this.buffer.length === this.offset) {\n      return this.buffer;\n    }\n    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n  }\n}\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  buffer;\n  offset;\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    valibot__WEBPACK_IMPORTED_MODULE_3__.parse(valibot__WEBPACK_IMPORTED_MODULE_3__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_0__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_0__.UInt32Schema]), [\n      buffer,\n      offset,\n    ]);\n  }\n  readUInt8() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt8(this.buffer, this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readInt32(this.buffer, this.offset, 'LE');\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt32(this.buffer, this.offset, 'LE');\n    this.offset += 4;\n    return result;\n  }\n  readInt64() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readInt64(this.buffer, this.offset, 'LE');\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const { bigintValue, bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.decode(this.buffer, this.offset);\n    this.offset += bytes;\n    return bigintValue;\n  }\n  readSlice(n) {\n    verifuint(n, MAX_JS_NUMBER);\n    const num = Number(n);\n    if (this.buffer.length < this.offset + num) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + num);\n    this.offset += num;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TAGGED_HASH_PREFIXES: () => (/* binding */ TAGGED_HASH_PREFIXES),\n/* harmony export */   TAGS: () => (/* binding */ TAGS),\n/* harmony export */   hash160: () => (/* binding */ hash160),\n/* harmony export */   hash256: () => (/* binding */ hash256),\n/* harmony export */   taggedHash: () => (/* binding */ taggedHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/ripemd160.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/**\n * A module for hashing functions.\n * include ripemd160、sha1、sha256、hash160、hash256、taggedHash\n *\n * @packageDocumentation\n */\n\n\n\nfunction hash160(buffer) {\n  return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_1__.ripemd160)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(buffer));\n}\nfunction hash256(buffer) {\n  return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(buffer));\n}\nconst TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\n/**\n * Defines the tagged hash prefixes used in the crypto module.\n */\nconst TAGGED_HASH_PREFIXES = {\n  'BIP0340/challenge': Uint8Array.from([\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n  ]),\n  'BIP0340/aux': Uint8Array.from([\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n  ]),\n  'BIP0340/nonce': Uint8Array.from([\n    7, 73, 119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244,\n    52, 215, 62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47, 7, 73,\n    119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244, 52, 215,\n    62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47,\n  ]),\n  TapLeaf: Uint8Array.from([\n    174, 234, 143, 220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211,\n    95, 28, 181, 64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238, 174, 234, 143,\n    220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211, 95, 28, 181,\n    64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238,\n  ]),\n  TapBranch: Uint8Array.from([\n    25, 65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247,\n    33, 111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21, 25,\n    65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247, 33,\n    111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21,\n  ]),\n  TapSighash: Uint8Array.from([\n    244, 10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61,\n    149, 253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49, 244,\n    10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61, 149,\n    253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49,\n  ]),\n  TapTweak: Uint8Array.from([\n    232, 15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66,\n    156, 188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233, 232,\n    15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66, 156,\n    188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233,\n  ]),\n  'KeyAgg list': Uint8Array.from([\n    72, 28, 151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126,\n    215, 49, 156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240, 72, 28,\n    151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126, 215, 49,\n    156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240,\n  ]),\n  'KeyAgg coefficient': Uint8Array.from([\n    191, 201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100,\n    130, 78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129, 191,\n    201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100, 130,\n    78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129,\n  ]),\n};\nfunction taggedHash(prefix, data) {\n  return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.concat([TAGGED_HASH_PREFIXES[prefix], data]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb0Q7QUFDTjtBQUNKO0FBQ25DO0FBQ1AsU0FBUyxrRUFBUyxDQUFDLDREQUFNO0FBQ3pCO0FBQ087QUFDUCxTQUFTLDREQUFNLENBQUMsNERBQU07QUFDdEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDREQUFNLENBQUMsb0RBQVk7QUFDNUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2NyeXB0by5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgbW9kdWxlIGZvciBoYXNoaW5nIGZ1bmN0aW9ucy5cbiAqIGluY2x1ZGUgcmlwZW1kMTYw44CBc2hhMeOAgXNoYTI1NuOAgWhhc2gxNjDjgIFoYXNoMjU244CBdGFnZ2VkSGFzaFxuICpcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxuICovXG5pbXBvcnQgeyByaXBlbWQxNjAgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3JpcGVtZDE2MCc7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTI1Nic7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBoYXNoMTYwKGJ1ZmZlcikge1xuICByZXR1cm4gcmlwZW1kMTYwKHNoYTI1NihidWZmZXIpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNoMjU2KGJ1ZmZlcikge1xuICByZXR1cm4gc2hhMjU2KHNoYTI1NihidWZmZXIpKTtcbn1cbmV4cG9ydCBjb25zdCBUQUdTID0gW1xuICAnQklQMDM0MC9jaGFsbGVuZ2UnLFxuICAnQklQMDM0MC9hdXgnLFxuICAnQklQMDM0MC9ub25jZScsXG4gICdUYXBMZWFmJyxcbiAgJ1RhcEJyYW5jaCcsXG4gICdUYXBTaWdoYXNoJyxcbiAgJ1RhcFR3ZWFrJyxcbiAgJ0tleUFnZyBsaXN0JyxcbiAgJ0tleUFnZyBjb2VmZmljaWVudCcsXG5dO1xuLyoqIEFuIG9iamVjdCBtYXBwaW5nIHRhZ3MgdG8gdGhlaXIgdGFnZ2VkIGhhc2ggcHJlZml4IG9mIFtTSEEyNTYodGFnKSB8IFNIQTI1Nih0YWcpXSAqL1xuLyoqXG4gKiBEZWZpbmVzIHRoZSB0YWdnZWQgaGFzaCBwcmVmaXhlcyB1c2VkIGluIHRoZSBjcnlwdG8gbW9kdWxlLlxuICovXG5leHBvcnQgY29uc3QgVEFHR0VEX0hBU0hfUFJFRklYRVMgPSB7XG4gICdCSVAwMzQwL2NoYWxsZW5nZSc6IFVpbnQ4QXJyYXkuZnJvbShbXG4gICAgMTIzLCAxODEsIDQ1LCAxMjIsIDE1OSwgMjM5LCA4OCwgNTAsIDYyLCAxNzcsIDE5MSwgMTIyLCA2NCwgMTI1LCAxNzksIDEzMCxcbiAgICAyMTAsIDI0MywgMjQyLCAyMTYsIDI3LCAxNzcsIDM0LCA3OSwgNzMsIDI1NCwgODEsIDE0MywgMTA5LCA3MiwgMjExLCAxMjQsXG4gICAgMTIzLCAxODEsIDQ1LCAxMjIsIDE1OSwgMjM5LCA4OCwgNTAsIDYyLCAxNzcsIDE5MSwgMTIyLCA2NCwgMTI1LCAxNzksIDEzMCxcbiAgICAyMTAsIDI0MywgMjQyLCAyMTYsIDI3LCAxNzcsIDM0LCA3OSwgNzMsIDI1NCwgODEsIDE0MywgMTA5LCA3MiwgMjExLCAxMjQsXG4gIF0pLFxuICAnQklQMDM0MC9hdXgnOiBVaW50OEFycmF5LmZyb20oW1xuICAgIDI0MSwgMjM5LCA3OCwgOTQsIDE5MiwgOTksIDIwMiwgMjE4LCAxMDksIDE0OCwgMjAyLCAyNTAsIDE1NywgMTUyLCAxMjYsIDE2MCxcbiAgICAxMDUsIDM4LCA4OCwgNTcsIDIzNiwgMTkzLCAzMSwgMTUxLCA0NSwgMTE5LCAxNjUsIDQ2LCAyMTYsIDE5MywgMjA0LCAxNDQsXG4gICAgMjQxLCAyMzksIDc4LCA5NCwgMTkyLCA5OSwgMjAyLCAyMTgsIDEwOSwgMTQ4LCAyMDIsIDI1MCwgMTU3LCAxNTIsIDEyNiwgMTYwLFxuICAgIDEwNSwgMzgsIDg4LCA1NywgMjM2LCAxOTMsIDMxLCAxNTEsIDQ1LCAxMTksIDE2NSwgNDYsIDIxNiwgMTkzLCAyMDQsIDE0NCxcbiAgXSksXG4gICdCSVAwMzQwL25vbmNlJzogVWludDhBcnJheS5mcm9tKFtcbiAgICA3LCA3MywgMTE5LCA1MiwgMTY3LCAxNTUsIDIwMywgNTMsIDkxLCAxNTUsIDE0MCwgMTI1LCAzLCA3OSwgMTgsIDI4LCAyNDQsXG4gICAgNTIsIDIxNSwgNjIsIDI0NywgNDUsIDIxOCwgMjUsIDEzNSwgMCwgOTcsIDI1MSwgODIsIDE5MSwgMjM1LCA0NywgNywgNzMsXG4gICAgMTE5LCA1MiwgMTY3LCAxNTUsIDIwMywgNTMsIDkxLCAxNTUsIDE0MCwgMTI1LCAzLCA3OSwgMTgsIDI4LCAyNDQsIDUyLCAyMTUsXG4gICAgNjIsIDI0NywgNDUsIDIxOCwgMjUsIDEzNSwgMCwgOTcsIDI1MSwgODIsIDE5MSwgMjM1LCA0NyxcbiAgXSksXG4gIFRhcExlYWY6IFVpbnQ4QXJyYXkuZnJvbShbXG4gICAgMTc0LCAyMzQsIDE0MywgMjIwLCA2NiwgOCwgMTUyLCA0OSwgNSwgMTE1LCA3NSwgODgsIDgsIDI5LCAzMCwgMzgsIDU2LCAyMTEsXG4gICAgOTUsIDI4LCAxODEsIDY0LCA4LCAyMTIsIDIxMSwgODcsIDIwMiwgMywgMTkwLCAxMjAsIDIzMywgMjM4LCAxNzQsIDIzNCwgMTQzLFxuICAgIDIyMCwgNjYsIDgsIDE1MiwgNDksIDUsIDExNSwgNzUsIDg4LCA4LCAyOSwgMzAsIDM4LCA1NiwgMjExLCA5NSwgMjgsIDE4MSxcbiAgICA2NCwgOCwgMjEyLCAyMTEsIDg3LCAyMDIsIDMsIDE5MCwgMTIwLCAyMzMsIDIzOCxcbiAgXSksXG4gIFRhcEJyYW5jaDogVWludDhBcnJheS5mcm9tKFtcbiAgICAyNSwgNjUsIDE2MSwgMjQyLCAyMjksIDExMCwgMTg1LCA5NSwgMTYyLCAxNjksIDI0MSwgMTQ4LCAxOTAsIDkyLCAxLCAyNDcsXG4gICAgMzMsIDExMSwgNTEsIDIzNywgMTMwLCAxNzYsIDE0NSwgNzAsIDUyLCAxNDQsIDIwOCwgOTEsIDI0NSwgMjIsIDE2MCwgMjEsIDI1LFxuICAgIDY1LCAxNjEsIDI0MiwgMjI5LCAxMTAsIDE4NSwgOTUsIDE2MiwgMTY5LCAyNDEsIDE0OCwgMTkwLCA5MiwgMSwgMjQ3LCAzMyxcbiAgICAxMTEsIDUxLCAyMzcsIDEzMCwgMTc2LCAxNDUsIDcwLCA1MiwgMTQ0LCAyMDgsIDkxLCAyNDUsIDIyLCAxNjAsIDIxLFxuICBdKSxcbiAgVGFwU2lnaGFzaDogVWludDhBcnJheS5mcm9tKFtcbiAgICAyNDQsIDEwLCA3MiwgMjIzLCA3NSwgNDIsIDExMiwgMjAwLCAxODAsIDE0NiwgNzUsIDI0MiwgMTAxLCA3MCwgOTcsIDIzNywgNjEsXG4gICAgMTQ5LCAyNTMsIDEwMiwgMTYzLCAxOSwgMjM1LCAxMzUsIDM1LCAxMTcsIDE1MSwgMTk4LCA0MCwgMjI4LCAxNjAsIDQ5LCAyNDQsXG4gICAgMTAsIDcyLCAyMjMsIDc1LCA0MiwgMTEyLCAyMDAsIDE4MCwgMTQ2LCA3NSwgMjQyLCAxMDEsIDcwLCA5NywgMjM3LCA2MSwgMTQ5LFxuICAgIDI1MywgMTAyLCAxNjMsIDE5LCAyMzUsIDEzNSwgMzUsIDExNywgMTUxLCAxOTgsIDQwLCAyMjgsIDE2MCwgNDksXG4gIF0pLFxuICBUYXBUd2VhazogVWludDhBcnJheS5mcm9tKFtcbiAgICAyMzIsIDE1LCAyMjUsIDk5LCAxNTYsIDE1NiwgMTYwLCA4MCwgMjI3LCAxNzUsIDI3LCA1NywgMTkzLCA2NywgMTk4LCA2MiwgNjYsXG4gICAgMTU2LCAxODgsIDIzNSwgMjEsIDIxNywgNjQsIDI1MSwgMTgxLCAxOTcsIDE2MSwgMjQ0LCAxNzUsIDg3LCAxOTcsIDIzMywgMjMyLFxuICAgIDE1LCAyMjUsIDk5LCAxNTYsIDE1NiwgMTYwLCA4MCwgMjI3LCAxNzUsIDI3LCA1NywgMTkzLCA2NywgMTk4LCA2MiwgNjYsIDE1NixcbiAgICAxODgsIDIzNSwgMjEsIDIxNywgNjQsIDI1MSwgMTgxLCAxOTcsIDE2MSwgMjQ0LCAxNzUsIDg3LCAxOTcsIDIzMyxcbiAgXSksXG4gICdLZXlBZ2cgbGlzdCc6IFVpbnQ4QXJyYXkuZnJvbShbXG4gICAgNzIsIDI4LCAxNTEsIDI4LCA2MCwgMTEsIDcwLCAyMTUsIDI0MCwgMTc4LCAxMTcsIDE3NCwgODksIDE0MSwgNzgsIDQ0LCAxMjYsXG4gICAgMjE1LCA0OSwgMTU2LCA4OSwgNzQsIDkyLCAxMTAsIDE5OSwgMTU4LCAxNjAsIDIxMiwgMTUzLCAyLCAxNDgsIDI0MCwgNzIsIDI4LFxuICAgIDE1MSwgMjgsIDYwLCAxMSwgNzAsIDIxNSwgMjQwLCAxNzgsIDExNywgMTc0LCA4OSwgMTQxLCA3OCwgNDQsIDEyNiwgMjE1LCA0OSxcbiAgICAxNTYsIDg5LCA3NCwgOTIsIDExMCwgMTk5LCAxNTgsIDE2MCwgMjEyLCAxNTMsIDIsIDE0OCwgMjQwLFxuICBdKSxcbiAgJ0tleUFnZyBjb2VmZmljaWVudCc6IFVpbnQ4QXJyYXkuZnJvbShbXG4gICAgMTkxLCAyMDEsIDQsIDMsIDc3LCAyOCwgMTM2LCAyMzIsIDIwMCwgMTQsIDM0LCAyMjksIDYxLCAzNiwgODYsIDEwOSwgMTAwLFxuICAgIDEzMCwgNzgsIDIxNCwgNjYsIDExNCwgMTI5LCAxOTIsIDE0NSwgMCwgMjQ5LCA3NywgMjA1LCA4MiwgMjAxLCAxMjksIDE5MSxcbiAgICAyMDEsIDQsIDMsIDc3LCAyOCwgMTM2LCAyMzIsIDIwMCwgMTQsIDM0LCAyMjksIDYxLCAzNiwgODYsIDEwOSwgMTAwLCAxMzAsXG4gICAgNzgsIDIxNCwgNjYsIDExNCwgMTI5LCAxOTIsIDE0NSwgMCwgMjQ5LCA3NywgMjA1LCA4MiwgMjAxLCAxMjksXG4gIF0pLFxufTtcbmV4cG9ydCBmdW5jdGlvbiB0YWdnZWRIYXNoKHByZWZpeCwgZGF0YSkge1xuICByZXR1cm4gc2hhMjU2KHRvb2xzLmNvbmNhdChbVEFHR0VEX0hBU0hfUFJFRklYRVNbcHJlZml4XSwgZGF0YV0pKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEccLib: () => (/* binding */ getEccLib),\n/* harmony export */   initEccLib: () => (/* binding */ initEccLib)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\nconst _ECCLIB_CACHE = {};\n/**\n * Initializes the ECC library with the provided instance.\n * If `eccLib` is `undefined`, the library will be cleared.\n * If `eccLib` is a new instance, it will be verified before setting it as the active library.\n *\n * @param eccLib The instance of the ECC library to initialize.\n */\nfunction initEccLib(eccLib) {\n  if (!eccLib) {\n    // allow clearing the library\n    _ECCLIB_CACHE.eccLib = eccLib;\n  } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n    // new instance, verify it\n    verifyEcc(eccLib);\n    _ECCLIB_CACHE.eccLib = eccLib;\n  }\n}\n/**\n * Retrieves the ECC Library instance.\n * Throws an error if the ECC Library is not provided.\n * You must call initEccLib() with a valid TinySecp256k1Interface instance before calling this function.\n * @returns The ECC Library instance.\n * @throws Error if the ECC Library is not provided.\n */\nfunction getEccLib() {\n  if (!_ECCLIB_CACHE.eccLib)\n    throw new Error(\n      'No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance',\n    );\n  return _ECCLIB_CACHE.eccLib;\n}\nconst h = hex => uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.fromHex(hex);\n/**\n * Verifies the ECC functionality.\n *\n * @param ecc - The TinySecp256k1Interface object.\n */\nfunction verifyEcc(ecc) {\n  assert(typeof ecc.isXOnlyPoint === 'function');\n  assert(\n    ecc.isXOnlyPoint(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000001'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000000'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    ),\n  );\n  assert(typeof ecc.xOnlyPointAddTweak === 'function');\n  tweakAddVectors.forEach(t => {\n    const r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n    if (t.result === null) {\n      assert(r === null);\n    } else {\n      assert(r !== null);\n      assert(r.parity === t.parity);\n      assert(uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(r.xOnlyPubkey, h(t.result)) === 0);\n    }\n  });\n}\nfunction assert(bool) {\n  if (!bool) throw new Error('ecc library invalid');\n}\nconst tweakAddVectors = [\n  {\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null,\n  },\n  {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf',\n  },\n  {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c',\n  },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9lY2NfbGliLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxhQUFhLHFEQUFhO0FBQzFCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vZWNjX2xpYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmNvbnN0IF9FQ0NMSUJfQ0FDSEUgPSB7fTtcbi8qKlxuICogSW5pdGlhbGl6ZXMgdGhlIEVDQyBsaWJyYXJ5IHdpdGggdGhlIHByb3ZpZGVkIGluc3RhbmNlLlxuICogSWYgYGVjY0xpYmAgaXMgYHVuZGVmaW5lZGAsIHRoZSBsaWJyYXJ5IHdpbGwgYmUgY2xlYXJlZC5cbiAqIElmIGBlY2NMaWJgIGlzIGEgbmV3IGluc3RhbmNlLCBpdCB3aWxsIGJlIHZlcmlmaWVkIGJlZm9yZSBzZXR0aW5nIGl0IGFzIHRoZSBhY3RpdmUgbGlicmFyeS5cbiAqXG4gKiBAcGFyYW0gZWNjTGliIFRoZSBpbnN0YW5jZSBvZiB0aGUgRUNDIGxpYnJhcnkgdG8gaW5pdGlhbGl6ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRFY2NMaWIoZWNjTGliKSB7XG4gIGlmICghZWNjTGliKSB7XG4gICAgLy8gYWxsb3cgY2xlYXJpbmcgdGhlIGxpYnJhcnlcbiAgICBfRUNDTElCX0NBQ0hFLmVjY0xpYiA9IGVjY0xpYjtcbiAgfSBlbHNlIGlmIChlY2NMaWIgIT09IF9FQ0NMSUJfQ0FDSEUuZWNjTGliKSB7XG4gICAgLy8gbmV3IGluc3RhbmNlLCB2ZXJpZnkgaXRcbiAgICB2ZXJpZnlFY2MoZWNjTGliKTtcbiAgICBfRUNDTElCX0NBQ0hFLmVjY0xpYiA9IGVjY0xpYjtcbiAgfVxufVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIEVDQyBMaWJyYXJ5IGluc3RhbmNlLlxuICogVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBFQ0MgTGlicmFyeSBpcyBub3QgcHJvdmlkZWQuXG4gKiBZb3UgbXVzdCBjYWxsIGluaXRFY2NMaWIoKSB3aXRoIGEgdmFsaWQgVGlueVNlY3AyNTZrMUludGVyZmFjZSBpbnN0YW5jZSBiZWZvcmUgY2FsbGluZyB0aGlzIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIEVDQyBMaWJyYXJ5IGluc3RhbmNlLlxuICogQHRocm93cyBFcnJvciBpZiB0aGUgRUNDIExpYnJhcnkgaXMgbm90IHByb3ZpZGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RWNjTGliKCkge1xuICBpZiAoIV9FQ0NMSUJfQ0FDSEUuZWNjTGliKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdObyBFQ0MgTGlicmFyeSBwcm92aWRlZC4gWW91IG11c3QgY2FsbCBpbml0RWNjTGliKCkgd2l0aCBhIHZhbGlkIFRpbnlTZWNwMjU2azFJbnRlcmZhY2UgaW5zdGFuY2UnLFxuICAgICk7XG4gIHJldHVybiBfRUNDTElCX0NBQ0hFLmVjY0xpYjtcbn1cbmNvbnN0IGggPSBoZXggPT4gdG9vbHMuZnJvbUhleChoZXgpO1xuLyoqXG4gKiBWZXJpZmllcyB0aGUgRUNDIGZ1bmN0aW9uYWxpdHkuXG4gKlxuICogQHBhcmFtIGVjYyAtIFRoZSBUaW55U2VjcDI1NmsxSW50ZXJmYWNlIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdmVyaWZ5RWNjKGVjYykge1xuICBhc3NlcnQodHlwZW9mIGVjYy5pc1hPbmx5UG9pbnQgPT09ICdmdW5jdGlvbicpO1xuICBhc3NlcnQoXG4gICAgZWNjLmlzWE9ubHlQb2ludChcbiAgICAgIGgoJzc5YmU2NjdlZjlkY2JiYWM1NWEwNjI5NWNlODcwYjA3MDI5YmZjZGIyZGNlMjhkOTU5ZjI4MTViMTZmODE3OTgnKSxcbiAgICApLFxuICApO1xuICBhc3NlcnQoXG4gICAgZWNjLmlzWE9ubHlQb2ludChcbiAgICAgIGgoJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlZWZmZmZjMmUnKSxcbiAgICApLFxuICApO1xuICBhc3NlcnQoXG4gICAgZWNjLmlzWE9ubHlQb2ludChcbiAgICAgIGgoJ2Y5MzA4YTAxOTI1OGMzMTA0OTM0NGY4NWY4OWQ1MjI5YjUzMWM4NDU4MzZmOTliMDg2MDFmMTEzYmNlMDM2ZjknKSxcbiAgICApLFxuICApO1xuICBhc3NlcnQoXG4gICAgZWNjLmlzWE9ubHlQb2ludChcbiAgICAgIGgoJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEnKSxcbiAgICApLFxuICApO1xuICBhc3NlcnQoXG4gICAgIWVjYy5pc1hPbmx5UG9pbnQoXG4gICAgICBoKCcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyksXG4gICAgKSxcbiAgKTtcbiAgYXNzZXJ0KFxuICAgICFlY2MuaXNYT25seVBvaW50KFxuICAgICAgaCgnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZmMyZicpLFxuICAgICksXG4gICk7XG4gIGFzc2VydCh0eXBlb2YgZWNjLnhPbmx5UG9pbnRBZGRUd2VhayA9PT0gJ2Z1bmN0aW9uJyk7XG4gIHR3ZWFrQWRkVmVjdG9ycy5mb3JFYWNoKHQgPT4ge1xuICAgIGNvbnN0IHIgPSBlY2MueE9ubHlQb2ludEFkZFR3ZWFrKGgodC5wdWJrZXkpLCBoKHQudHdlYWspKTtcbiAgICBpZiAodC5yZXN1bHQgPT09IG51bGwpIHtcbiAgICAgIGFzc2VydChyID09PSBudWxsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXNzZXJ0KHIgIT09IG51bGwpO1xuICAgICAgYXNzZXJ0KHIucGFyaXR5ID09PSB0LnBhcml0eSk7XG4gICAgICBhc3NlcnQodG9vbHMuY29tcGFyZShyLnhPbmx5UHVia2V5LCBoKHQucmVzdWx0KSkgPT09IDApO1xuICAgIH1cbiAgfSk7XG59XG5mdW5jdGlvbiBhc3NlcnQoYm9vbCkge1xuICBpZiAoIWJvb2wpIHRocm93IG5ldyBFcnJvcignZWNjIGxpYnJhcnkgaW52YWxpZCcpO1xufVxuY29uc3QgdHdlYWtBZGRWZWN0b3JzID0gW1xuICB7XG4gICAgcHVia2V5OiAnNzliZTY2N2VmOWRjYmJhYzU1YTA2Mjk1Y2U4NzBiMDcwMjliZmNkYjJkY2UyOGQ5NTlmMjgxNWIxNmY4MTc5OCcsXG4gICAgdHdlYWs6ICdmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZWJhYWVkY2U2YWY0OGEwM2JiZmQyNWU4Y2QwMzY0MTQwJyxcbiAgICBwYXJpdHk6IC0xLFxuICAgIHJlc3VsdDogbnVsbCxcbiAgfSxcbiAge1xuICAgIHB1YmtleTogJzE2MTdkMzhlZDhkODY1N2RhNGQ0NzYxZTgwNTdiYzM5NmVhOWU0YjlkMjk3NzZkNGJlMDk2MDE2ZGJkMjUwOWInLFxuICAgIHR3ZWFrOiAnYTgzOTdhOTM1ZjBkZmNlYmE2YmE5NjE4ZjY0NTFlZjRkODA2MzdhYmY0ZTZhZjI2NjlmYmM5ZGU2YThmZDJhYycsXG4gICAgcGFyaXR5OiAxLFxuICAgIHJlc3VsdDogJ2U0NzhmOTlkYWI5MTA1MmFiMzlhMzNlYTM1ZmQ1ZTZlNDkzM2Y0ZDI4MDIzY2Q1OTdjOWExZjY3NjAzNDZhZGYnLFxuICB9LFxuICB7XG4gICAgcHVia2V5OiAnMmMwYjdjZjk1MzI0YTA3ZDA1Mzk4YjI0MDE3NGRjMGMyYmU0NDRkOTZiMTU5YWE2YzdmN2IxZTY2ODY4MDk5MScsXG4gICAgdHdlYWs6ICc4MjNjM2NkMjE0Mjc0NGIwNzVhODdlYWRlN2UxYjg2NzhiYTMwOGQ1NjYyMjZhMDA1NmNhMmI3YTc2Zjg2YjQ3JyxcbiAgICBwYXJpdHk6IDAsXG4gICAgcmVzdWx0OiAnOTUzNGY4ZGM4YzZkZWRhMmRjMDA3NjU1OTgxYzc4YjQ5YzVkOTZjNzc4ZmJmMzYzNDYyYTExZWM5ZGZkOTQ4YycsXG4gIH0sXG5dO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Block: () => (/* reexport safe */ _block_js__WEBPACK_IMPORTED_MODULE_5__.Block),\n/* harmony export */   Psbt: () => (/* reexport safe */ _psbt_js__WEBPACK_IMPORTED_MODULE_6__.Psbt),\n/* harmony export */   Transaction: () => (/* reexport safe */ _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction),\n/* harmony export */   address: () => (/* reexport module object */ _address_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   crypto: () => (/* reexport module object */ _crypto_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   initEccLib: () => (/* reexport safe */ _ecc_lib_js__WEBPACK_IMPORTED_MODULE_9__.initEccLib),\n/* harmony export */   networks: () => (/* reexport module object */ _networks_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   opcodes: () => (/* reexport safe */ _ops_js__WEBPACK_IMPORTED_MODULE_7__.OPS),\n/* harmony export */   payments: () => (/* reexport module object */ _payments_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   script: () => (/* reexport module object */ _script_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./payments/index.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./block.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js\");\n/* harmony import */ var _psbt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./psbt.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js\");\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ops.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ecc_lib.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n\n\n\n\n\n\n\n\n/** @hidden */\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNGO0FBQ0k7QUFDTTtBQUNWO0FBQ2lCO0FBQ3BCO0FBQ0Y7QUFDakM7QUFDMEM7QUFDSztBQUNMIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhZGRyZXNzIGZyb20gJy4vYWRkcmVzcy5qcyc7XG5pbXBvcnQgKiBhcyBjcnlwdG8gZnJvbSAnLi9jcnlwdG8uanMnO1xuaW1wb3J0ICogYXMgbmV0d29ya3MgZnJvbSAnLi9uZXR3b3Jrcy5qcyc7XG5pbXBvcnQgKiBhcyBwYXltZW50cyBmcm9tICcuL3BheW1lbnRzL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIHNjcmlwdCBmcm9tICcuL3NjcmlwdC5qcyc7XG5leHBvcnQgeyBhZGRyZXNzLCBjcnlwdG8sIG5ldHdvcmtzLCBwYXltZW50cywgc2NyaXB0IH07XG5leHBvcnQgeyBCbG9jayB9IGZyb20gJy4vYmxvY2suanMnO1xuZXhwb3J0IHsgUHNidCB9IGZyb20gJy4vcHNidC5qcyc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHsgT1BTIGFzIG9wY29kZXMgfSBmcm9tICcuL29wcy5qcyc7XG5leHBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gJy4vdHJhbnNhY3Rpb24uanMnO1xuZXhwb3J0IHsgaW5pdEVjY0xpYiB9IGZyb20gJy4vZWNjX2xpYi5qcyc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastMerkleRoot: () => (/* binding */ fastMerkleRoot)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n/**\n * Calculates the Merkle root of an array of buffers using a specified digest function.\n *\n * @param values - The array of buffers.\n * @param digestFn - The digest function used to calculate the hash of the concatenated buffers.\n * @returns The Merkle root as a buffer.\n * @throws {TypeError} If the values parameter is not an array or the digestFn parameter is not a function.\n */\nfunction fastMerkleRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function')\n    throw TypeError('Expected digest Function');\n  let length = values.length;\n  const results = values.concat();\n  while (length > 1) {\n    let j = 0;\n    for (let i = 0; i < length; i += 2, ++j) {\n      const left = results[i];\n      const right = i + 1 === length ? left : results[i + 1];\n      const data = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n    length = j;\n  }\n  return results[0];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9tZXJrbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9tZXJrbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIE1lcmtsZSByb290IG9mIGFuIGFycmF5IG9mIGJ1ZmZlcnMgdXNpbmcgYSBzcGVjaWZpZWQgZGlnZXN0IGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB2YWx1ZXMgLSBUaGUgYXJyYXkgb2YgYnVmZmVycy5cbiAqIEBwYXJhbSBkaWdlc3RGbiAtIFRoZSBkaWdlc3QgZnVuY3Rpb24gdXNlZCB0byBjYWxjdWxhdGUgdGhlIGhhc2ggb2YgdGhlIGNvbmNhdGVuYXRlZCBidWZmZXJzLlxuICogQHJldHVybnMgVGhlIE1lcmtsZSByb290IGFzIGEgYnVmZmVyLlxuICogQHRocm93cyB7VHlwZUVycm9yfSBJZiB0aGUgdmFsdWVzIHBhcmFtZXRlciBpcyBub3QgYW4gYXJyYXkgb3IgdGhlIGRpZ2VzdEZuIHBhcmFtZXRlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZhc3RNZXJrbGVSb290KHZhbHVlcywgZGlnZXN0Rm4pIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykpIHRocm93IFR5cGVFcnJvcignRXhwZWN0ZWQgdmFsdWVzIEFycmF5Jyk7XG4gIGlmICh0eXBlb2YgZGlnZXN0Rm4gIT09ICdmdW5jdGlvbicpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdFeHBlY3RlZCBkaWdlc3QgRnVuY3Rpb24nKTtcbiAgbGV0IGxlbmd0aCA9IHZhbHVlcy5sZW5ndGg7XG4gIGNvbnN0IHJlc3VsdHMgPSB2YWx1ZXMuY29uY2F0KCk7XG4gIHdoaWxlIChsZW5ndGggPiAxKSB7XG4gICAgbGV0IGogPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDIsICsraikge1xuICAgICAgY29uc3QgbGVmdCA9IHJlc3VsdHNbaV07XG4gICAgICBjb25zdCByaWdodCA9IGkgKyAxID09PSBsZW5ndGggPyBsZWZ0IDogcmVzdWx0c1tpICsgMV07XG4gICAgICBjb25zdCBkYXRhID0gdG9vbHMuY29uY2F0KFtsZWZ0LCByaWdodF0pO1xuICAgICAgcmVzdWx0c1tqXSA9IGRpZ2VzdEZuKGRhdGEpO1xuICAgIH1cbiAgICBsZW5ndGggPSBqO1xuICB9XG4gIHJldHVybiByZXN1bHRzWzBdO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitcoin: () => (/* binding */ bitcoin),\n/* harmony export */   regtest: () => (/* binding */ regtest),\n/* harmony export */   testnet: () => (/* binding */ testnet)\n/* harmony export */ });\n// https://en.bitcoin.it/wiki/List_of_address_prefixes\n// Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731\n/**\n * Represents the Bitcoin network configuration.\n */\nconst bitcoin = {\n  /**\n   * The message prefix used for signing Bitcoin messages.\n   */\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  /**\n   * The Bech32 prefix used for Bitcoin addresses.\n   */\n  bech32: 'bc',\n  /**\n   * The BIP32 key prefixes for Bitcoin.\n   */\n  bip32: {\n    /**\n     * The public key prefix for BIP32 extended public keys.\n     */\n    public: 0x0488b21e,\n    /**\n     * The private key prefix for BIP32 extended private keys.\n     */\n    private: 0x0488ade4,\n  },\n  /**\n   * The prefix for Bitcoin public key hashes.\n   */\n  pubKeyHash: 0x00,\n  /**\n   * The prefix for Bitcoin script hashes.\n   */\n  scriptHash: 0x05,\n  /**\n   * The prefix for Bitcoin Wallet Import Format (WIF) private keys.\n   */\n  wif: 0x80,\n};\n/**\n * Represents the regtest network configuration.\n */\nconst regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n/**\n * Represents the testnet network configuration.\n */\nconst testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9uZXR3b3Jrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9uZXR3b3Jrcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2VuLmJpdGNvaW4uaXQvd2lraS9MaXN0X29mX2FkZHJlc3NfcHJlZml4ZXNcbi8vIERvZ2Vjb2luIEJJUDMyIGlzIGEgcHJvcG9zZWQgc3RhbmRhcmQ6IGh0dHBzOi8vYml0Y29pbnRhbGsub3JnL2luZGV4LnBocD90b3BpYz00MDk3MzFcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgQml0Y29pbiBuZXR3b3JrIGNvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBiaXRjb2luID0ge1xuICAvKipcbiAgICogVGhlIG1lc3NhZ2UgcHJlZml4IHVzZWQgZm9yIHNpZ25pbmcgQml0Y29pbiBtZXNzYWdlcy5cbiAgICovXG4gIG1lc3NhZ2VQcmVmaXg6ICdcXHgxOEJpdGNvaW4gU2lnbmVkIE1lc3NhZ2U6XFxuJyxcbiAgLyoqXG4gICAqIFRoZSBCZWNoMzIgcHJlZml4IHVzZWQgZm9yIEJpdGNvaW4gYWRkcmVzc2VzLlxuICAgKi9cbiAgYmVjaDMyOiAnYmMnLFxuICAvKipcbiAgICogVGhlIEJJUDMyIGtleSBwcmVmaXhlcyBmb3IgQml0Y29pbi5cbiAgICovXG4gIGJpcDMyOiB7XG4gICAgLyoqXG4gICAgICogVGhlIHB1YmxpYyBrZXkgcHJlZml4IGZvciBCSVAzMiBleHRlbmRlZCBwdWJsaWMga2V5cy5cbiAgICAgKi9cbiAgICBwdWJsaWM6IDB4MDQ4OGIyMWUsXG4gICAgLyoqXG4gICAgICogVGhlIHByaXZhdGUga2V5IHByZWZpeCBmb3IgQklQMzIgZXh0ZW5kZWQgcHJpdmF0ZSBrZXlzLlxuICAgICAqL1xuICAgIHByaXZhdGU6IDB4MDQ4OGFkZTQsXG4gIH0sXG4gIC8qKlxuICAgKiBUaGUgcHJlZml4IGZvciBCaXRjb2luIHB1YmxpYyBrZXkgaGFzaGVzLlxuICAgKi9cbiAgcHViS2V5SGFzaDogMHgwMCxcbiAgLyoqXG4gICAqIFRoZSBwcmVmaXggZm9yIEJpdGNvaW4gc2NyaXB0IGhhc2hlcy5cbiAgICovXG4gIHNjcmlwdEhhc2g6IDB4MDUsXG4gIC8qKlxuICAgKiBUaGUgcHJlZml4IGZvciBCaXRjb2luIFdhbGxldCBJbXBvcnQgRm9ybWF0IChXSUYpIHByaXZhdGUga2V5cy5cbiAgICovXG4gIHdpZjogMHg4MCxcbn07XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHJlZ3Rlc3QgbmV0d29yayBjb25maWd1cmF0aW9uLlxuICovXG5leHBvcnQgY29uc3QgcmVndGVzdCA9IHtcbiAgbWVzc2FnZVByZWZpeDogJ1xceDE4Qml0Y29pbiBTaWduZWQgTWVzc2FnZTpcXG4nLFxuICBiZWNoMzI6ICdiY3J0JyxcbiAgYmlwMzI6IHtcbiAgICBwdWJsaWM6IDB4MDQzNTg3Y2YsXG4gICAgcHJpdmF0ZTogMHgwNDM1ODM5NCxcbiAgfSxcbiAgcHViS2V5SGFzaDogMHg2ZixcbiAgc2NyaXB0SGFzaDogMHhjNCxcbiAgd2lmOiAweGVmLFxufTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgdGVzdG5ldCBuZXR3b3JrIGNvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCB0ZXN0bmV0ID0ge1xuICBtZXNzYWdlUHJlZml4OiAnXFx4MThCaXRjb2luIFNpZ25lZCBNZXNzYWdlOlxcbicsXG4gIGJlY2gzMjogJ3RiJyxcbiAgYmlwMzI6IHtcbiAgICBwdWJsaWM6IDB4MDQzNTg3Y2YsXG4gICAgcHJpdmF0ZTogMHgwNDM1ODM5NCxcbiAgfSxcbiAgcHViS2V5SGFzaDogMHg2ZixcbiAgc2NyaXB0SGFzaDogMHhjNCxcbiAgd2lmOiAweGVmLFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPS: () => (/* binding */ OPS),\n/* harmony export */   REVERSE_OPS: () => (/* binding */ REVERSE_OPS)\n/* harmony export */ });\nconst OPS = {\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_NOP3: 178,\n  OP_CHECKSEQUENCEVERIFY: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  OP_CHECKSIGADD: 186,\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255,\n};\nconst REVERSE_OPS = {};\nfor (const op of Object.keys(OPS)) {\n  const code = OPS[op];\n  REVERSE_OPS[code] = op;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9vcHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL29wcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBPUFMgPSB7XG4gIE9QX0ZBTFNFOiAwLFxuICBPUF8wOiAwLFxuICBPUF9QVVNIREFUQTE6IDc2LFxuICBPUF9QVVNIREFUQTI6IDc3LFxuICBPUF9QVVNIREFUQTQ6IDc4LFxuICBPUF8xTkVHQVRFOiA3OSxcbiAgT1BfUkVTRVJWRUQ6IDgwLFxuICBPUF9UUlVFOiA4MSxcbiAgT1BfMTogODEsXG4gIE9QXzI6IDgyLFxuICBPUF8zOiA4MyxcbiAgT1BfNDogODQsXG4gIE9QXzU6IDg1LFxuICBPUF82OiA4NixcbiAgT1BfNzogODcsXG4gIE9QXzg6IDg4LFxuICBPUF85OiA4OSxcbiAgT1BfMTA6IDkwLFxuICBPUF8xMTogOTEsXG4gIE9QXzEyOiA5MixcbiAgT1BfMTM6IDkzLFxuICBPUF8xNDogOTQsXG4gIE9QXzE1OiA5NSxcbiAgT1BfMTY6IDk2LFxuICBPUF9OT1A6IDk3LFxuICBPUF9WRVI6IDk4LFxuICBPUF9JRjogOTksXG4gIE9QX05PVElGOiAxMDAsXG4gIE9QX1ZFUklGOiAxMDEsXG4gIE9QX1ZFUk5PVElGOiAxMDIsXG4gIE9QX0VMU0U6IDEwMyxcbiAgT1BfRU5ESUY6IDEwNCxcbiAgT1BfVkVSSUZZOiAxMDUsXG4gIE9QX1JFVFVSTjogMTA2LFxuICBPUF9UT0FMVFNUQUNLOiAxMDcsXG4gIE9QX0ZST01BTFRTVEFDSzogMTA4LFxuICBPUF8yRFJPUDogMTA5LFxuICBPUF8yRFVQOiAxMTAsXG4gIE9QXzNEVVA6IDExMSxcbiAgT1BfMk9WRVI6IDExMixcbiAgT1BfMlJPVDogMTEzLFxuICBPUF8yU1dBUDogMTE0LFxuICBPUF9JRkRVUDogMTE1LFxuICBPUF9ERVBUSDogMTE2LFxuICBPUF9EUk9QOiAxMTcsXG4gIE9QX0RVUDogMTE4LFxuICBPUF9OSVA6IDExOSxcbiAgT1BfT1ZFUjogMTIwLFxuICBPUF9QSUNLOiAxMjEsXG4gIE9QX1JPTEw6IDEyMixcbiAgT1BfUk9UOiAxMjMsXG4gIE9QX1NXQVA6IDEyNCxcbiAgT1BfVFVDSzogMTI1LFxuICBPUF9DQVQ6IDEyNixcbiAgT1BfU1VCU1RSOiAxMjcsXG4gIE9QX0xFRlQ6IDEyOCxcbiAgT1BfUklHSFQ6IDEyOSxcbiAgT1BfU0laRTogMTMwLFxuICBPUF9JTlZFUlQ6IDEzMSxcbiAgT1BfQU5EOiAxMzIsXG4gIE9QX09SOiAxMzMsXG4gIE9QX1hPUjogMTM0LFxuICBPUF9FUVVBTDogMTM1LFxuICBPUF9FUVVBTFZFUklGWTogMTM2LFxuICBPUF9SRVNFUlZFRDE6IDEzNyxcbiAgT1BfUkVTRVJWRUQyOiAxMzgsXG4gIE9QXzFBREQ6IDEzOSxcbiAgT1BfMVNVQjogMTQwLFxuICBPUF8yTVVMOiAxNDEsXG4gIE9QXzJESVY6IDE0MixcbiAgT1BfTkVHQVRFOiAxNDMsXG4gIE9QX0FCUzogMTQ0LFxuICBPUF9OT1Q6IDE0NSxcbiAgT1BfME5PVEVRVUFMOiAxNDYsXG4gIE9QX0FERDogMTQ3LFxuICBPUF9TVUI6IDE0OCxcbiAgT1BfTVVMOiAxNDksXG4gIE9QX0RJVjogMTUwLFxuICBPUF9NT0Q6IDE1MSxcbiAgT1BfTFNISUZUOiAxNTIsXG4gIE9QX1JTSElGVDogMTUzLFxuICBPUF9CT09MQU5EOiAxNTQsXG4gIE9QX0JPT0xPUjogMTU1LFxuICBPUF9OVU1FUVVBTDogMTU2LFxuICBPUF9OVU1FUVVBTFZFUklGWTogMTU3LFxuICBPUF9OVU1OT1RFUVVBTDogMTU4LFxuICBPUF9MRVNTVEhBTjogMTU5LFxuICBPUF9HUkVBVEVSVEhBTjogMTYwLFxuICBPUF9MRVNTVEhBTk9SRVFVQUw6IDE2MSxcbiAgT1BfR1JFQVRFUlRIQU5PUkVRVUFMOiAxNjIsXG4gIE9QX01JTjogMTYzLFxuICBPUF9NQVg6IDE2NCxcbiAgT1BfV0lUSElOOiAxNjUsXG4gIE9QX1JJUEVNRDE2MDogMTY2LFxuICBPUF9TSEExOiAxNjcsXG4gIE9QX1NIQTI1NjogMTY4LFxuICBPUF9IQVNIMTYwOiAxNjksXG4gIE9QX0hBU0gyNTY6IDE3MCxcbiAgT1BfQ09ERVNFUEFSQVRPUjogMTcxLFxuICBPUF9DSEVDS1NJRzogMTcyLFxuICBPUF9DSEVDS1NJR1ZFUklGWTogMTczLFxuICBPUF9DSEVDS01VTFRJU0lHOiAxNzQsXG4gIE9QX0NIRUNLTVVMVElTSUdWRVJJRlk6IDE3NSxcbiAgT1BfTk9QMTogMTc2LFxuICBPUF9OT1AyOiAxNzcsXG4gIE9QX0NIRUNLTE9DS1RJTUVWRVJJRlk6IDE3NyxcbiAgT1BfTk9QMzogMTc4LFxuICBPUF9DSEVDS1NFUVVFTkNFVkVSSUZZOiAxNzgsXG4gIE9QX05PUDQ6IDE3OSxcbiAgT1BfTk9QNTogMTgwLFxuICBPUF9OT1A2OiAxODEsXG4gIE9QX05PUDc6IDE4MixcbiAgT1BfTk9QODogMTgzLFxuICBPUF9OT1A5OiAxODQsXG4gIE9QX05PUDEwOiAxODUsXG4gIE9QX0NIRUNLU0lHQUREOiAxODYsXG4gIE9QX1BVQktFWUhBU0g6IDI1MyxcbiAgT1BfUFVCS0VZOiAyNTQsXG4gIE9QX0lOVkFMSURPUENPREU6IDI1NSxcbn07XG5jb25zdCBSRVZFUlNFX09QUyA9IHt9O1xuZm9yIChjb25zdCBvcCBvZiBPYmplY3Qua2V5cyhPUFMpKSB7XG4gIGNvbnN0IGNvZGUgPSBPUFNbb3BdO1xuICBSRVZFUlNFX09QU1tjb2RlXSA9IG9wO1xufVxuZXhwb3J0IHsgT1BTLCBSRVZFUlNFX09QUyB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LEAF_VERSION_TAPSCRIPT: () => (/* binding */ LEAF_VERSION_TAPSCRIPT),\n/* harmony export */   MAX_TAPTREE_DEPTH: () => (/* binding */ MAX_TAPTREE_DEPTH),\n/* harmony export */   findScriptPath: () => (/* binding */ findScriptPath),\n/* harmony export */   rootHashFromPath: () => (/* binding */ rootHashFromPath),\n/* harmony export */   tapTweakHash: () => (/* binding */ tapTweakHash),\n/* harmony export */   tapleafHash: () => (/* binding */ tapleafHash),\n/* harmony export */   toHashTree: () => (/* binding */ toHashTree),\n/* harmony export */   tweakKey: () => (/* binding */ tweakKey)\n/* harmony export */ });\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ecc_lib.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bufferutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\nconst LEAF_VERSION_TAPSCRIPT = 0xc0;\nconst MAX_TAPTREE_DEPTH = 128;\nconst isHashBranch = ht => 'left' in ht && 'right' in ht;\n/**\n * Calculates the root hash from a given control block and leaf hash.\n * @param controlBlock - The control block buffer.\n * @param leafHash - The leaf hash buffer.\n * @returns The root hash buffer.\n * @throws {TypeError} If the control block length is less than 33.\n */\nfunction rootHashFromPath(controlBlock, leafHash) {\n  if (controlBlock.length < 33)\n    throw new TypeError(\n      `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n    );\n  const m = (controlBlock.length - 33) / 32;\n  let kj = leafHash;\n  for (let j = 0; j < m; j++) {\n    const ej = controlBlock.slice(33 + 32 * j, 65 + 32 * j);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(kj, ej) < 0) {\n      kj = tapBranchHash(kj, ej);\n    } else {\n      kj = tapBranchHash(ej, kj);\n    }\n  }\n  return kj;\n}\n/**\n * Build a hash tree of merkle nodes from the scripts binary tree.\n * @param scriptTree - the tree of scripts to pairwise hash.\n */\nfunction toHashTree(scriptTree) {\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isTapleaf)(scriptTree)) return { hash: tapleafHash(scriptTree) };\n  const hashes = [toHashTree(scriptTree[0]), toHashTree(scriptTree[1])];\n  // hashes.sort((a, b) => a.hash.compare(b.hash));\n  hashes.sort((a, b) => uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.hash, b.hash));\n  const [left, right] = hashes;\n  return {\n    hash: tapBranchHash(left.hash, right.hash),\n    left,\n    right,\n  };\n}\n/**\n * Given a HashTree, finds the path from a particular hash to the root.\n * @param node - the root of the tree\n * @param hash - the hash to search for\n * @returns - array of sibling hashes, from leaf (inclusive) to root\n * (exclusive) needed to prove inclusion of the specified hash. undefined if no\n * path is found\n */\nfunction findScriptPath(node, hash) {\n  if (isHashBranch(node)) {\n    const leftPath = findScriptPath(node.left, hash);\n    if (leftPath !== undefined) return [...leftPath, node.right.hash];\n    const rightPath = findScriptPath(node.right, hash);\n    if (rightPath !== undefined) return [...rightPath, node.left.hash];\n  } else if (uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(node.hash, hash) === 0) {\n    return [];\n  }\n  return undefined;\n}\n/**\n * Calculates the tapleaf hash for a given Tapleaf object.\n * @param leaf - The Tapleaf object to calculate the hash for.\n * @returns The tapleaf hash as a Buffer.\n */\nfunction tapleafHash(leaf) {\n  const version = leaf.version || LEAF_VERSION_TAPSCRIPT;\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n    'TapLeaf',\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([Uint8Array.from([version]), serializeScript(leaf.output)]),\n  );\n}\n/**\n * Computes the taproot tweak hash for a given public key and optional hash.\n * If a hash is provided, the public key and hash are concatenated before computing the hash.\n * If no hash is provided, only the public key is used to compute the hash.\n *\n * @param pubKey - The public key buffer.\n * @param h - The optional hash buffer.\n * @returns The taproot tweak hash.\n */\nfunction tapTweakHash(pubKey, h) {\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n    'TapTweak',\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat(h ? [pubKey, h] : [pubKey]),\n  );\n}\n/**\n * Tweak a public key with a given tweak hash.\n * @param pubKey - The public key to be tweaked.\n * @param h - The tweak hash.\n * @returns The tweaked public key or null if the input is invalid.\n */\nfunction tweakKey(pubKey, h) {\n  if (!(pubKey instanceof Uint8Array)) return null;\n  if (pubKey.length !== 32) return null;\n  if (h && h.length !== 32) return null;\n  const tweakHash = tapTweakHash(pubKey, h);\n  const res = (0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_0__.getEccLib)().xOnlyPointAddTweak(pubKey, tweakHash);\n  if (!res || res.xOnlyPubkey === null) return null;\n  return {\n    parity: res.parity,\n    x: Uint8Array.from(res.xOnlyPubkey),\n  };\n}\n/**\n * Computes the TapBranch hash by concatenating two buffers and applying the 'TapBranch' tagged hash algorithm.\n *\n * @param a - The first buffer.\n * @param b - The second buffer.\n * @returns The TapBranch hash of the concatenated buffers.\n */\nfunction tapBranchHash(a, b) {\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash('TapBranch', uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([a, b]));\n}\n/**\n * Serializes a script by encoding its length as a varint and concatenating it with the script.\n *\n * @param s - The script to be serialized.\n * @returns The serialized script as a Buffer.\n */\nfunction serializeScript(s) {\n  /* global BigInt */\n  const varintLen = _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__.varuint.encodingLength(s.length);\n  const buffer = new Uint8Array(varintLen);\n  _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__.varuint.encode(s.length, buffer);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([buffer, s]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2data: () => (/* binding */ p2data)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\n// output: OP_RETURN ...\n/**\n * Embeds data in a Bitcoin payment.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The modified payment object.\n * @throws {TypeError} If there is not enough data or if the output is invalid.\n */\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_4__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        data: valibot__WEBPACK_IMPORTED_MODULE_4__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'embed', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.data) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'data', () => {\n    if (!a.output) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(chunk => valibot__WEBPACK_IMPORTED_MODULE_4__.is(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema, chunk)))\n        throw new TypeError('Output is invalid');\n      if (a.data && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9lbWJlZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEQ7QUFDcEI7QUFDZ0I7QUFDdEI7QUFDTDtBQUM3QixZQUFZLDJDQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNPO0FBQ1A7QUFDQSx5QkFBeUIsZ0JBQWdCLFlBQVk7QUFDckQsRUFBRSwwQ0FBTztBQUNULElBQUksNENBQVM7QUFDYixNQUFNLDJDQUFRO0FBQ2QsaUJBQWlCLDJDQUFRLEdBQUc7QUFDNUIsZ0JBQWdCLG1EQUFZO0FBQzVCLGNBQWMsMENBQU8sQ0FBQyxtREFBWTtBQUNsQyxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlEQUFlO0FBQzlDLGNBQWM7QUFDZCxFQUFFLDBDQUFTO0FBQ1g7QUFDQSxXQUFXLCtDQUFlO0FBQzFCLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQSxXQUFXLGlEQUFpQjtBQUM1QixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlEQUFpQjtBQUN0QztBQUNBLDBDQUEwQyx1Q0FBSSxDQUFDLG1EQUFZO0FBQzNEO0FBQ0EscUJBQXFCLHNEQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL2VtYmVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpdGNvaW4gYXMgQklUQ09JTl9ORVRXT1JLIH0gZnJvbSAnLi4vbmV0d29ya3MuanMnO1xuaW1wb3J0ICogYXMgYnNjcmlwdCBmcm9tICcuLi9zY3JpcHQuanMnO1xuaW1wb3J0IHsgc3RhY2tzRXF1YWwsIEJ1ZmZlclNjaGVtYSB9IGZyb20gJy4uL3R5cGVzLmpzJztcbmltcG9ydCAqIGFzIGxhenkgZnJvbSAnLi9sYXp5LmpzJztcbmltcG9ydCAqIGFzIHYgZnJvbSAndmFsaWJvdCc7XG5jb25zdCBPUFMgPSBic2NyaXB0Lk9QUztcbi8vIG91dHB1dDogT1BfUkVUVVJOIC4uLlxuLyoqXG4gKiBFbWJlZHMgZGF0YSBpbiBhIEJpdGNvaW4gcGF5bWVudC5cbiAqIEBwYXJhbSBhIC0gVGhlIHBheW1lbnQgb2JqZWN0LlxuICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXltZW50IG9wdGlvbnMuXG4gKiBAcmV0dXJucyBUaGUgbW9kaWZpZWQgcGF5bWVudCBvYmplY3QuXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IElmIHRoZXJlIGlzIG5vdCBlbm91Z2ggZGF0YSBvciBpZiB0aGUgb3V0cHV0IGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwMmRhdGEoYSwgb3B0cykge1xuICBpZiAoIWEuZGF0YSAmJiAhYS5vdXRwdXQpIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vdCBlbm91Z2ggZGF0YScpO1xuICBvcHRzID0gT2JqZWN0LmFzc2lnbih7IHZhbGlkYXRlOiB0cnVlIH0sIG9wdHMgfHwge30pO1xuICB2LnBhcnNlKFxuICAgIHYucGFydGlhbChcbiAgICAgIHYub2JqZWN0KHtcbiAgICAgICAgbmV0d29yazogdi5vYmplY3Qoe30pLFxuICAgICAgICBvdXRwdXQ6IEJ1ZmZlclNjaGVtYSxcbiAgICAgICAgZGF0YTogdi5hcnJheShCdWZmZXJTY2hlbWEpLFxuICAgICAgfSksXG4gICAgKSxcbiAgICBhLFxuICApO1xuICBjb25zdCBuZXR3b3JrID0gYS5uZXR3b3JrIHx8IEJJVENPSU5fTkVUV09SSztcbiAgY29uc3QgbyA9IHsgbmFtZTogJ2VtYmVkJywgbmV0d29yayB9O1xuICBsYXp5LnByb3AobywgJ291dHB1dCcsICgpID0+IHtcbiAgICBpZiAoIWEuZGF0YSkgcmV0dXJuO1xuICAgIHJldHVybiBic2NyaXB0LmNvbXBpbGUoW09QUy5PUF9SRVRVUk5dLmNvbmNhdChhLmRhdGEpKTtcbiAgfSk7XG4gIGxhenkucHJvcChvLCAnZGF0YScsICgpID0+IHtcbiAgICBpZiAoIWEub3V0cHV0KSByZXR1cm47XG4gICAgcmV0dXJuIGJzY3JpcHQuZGVjb21waWxlKGEub3V0cHV0KS5zbGljZSgxKTtcbiAgfSk7XG4gIC8vIGV4dGVuZGVkIHZhbGlkYXRpb25cbiAgaWYgKG9wdHMudmFsaWRhdGUpIHtcbiAgICBpZiAoYS5vdXRwdXQpIHtcbiAgICAgIGNvbnN0IGNodW5rcyA9IGJzY3JpcHQuZGVjb21waWxlKGEub3V0cHV0KTtcbiAgICAgIGlmIChjaHVua3NbMF0gIT09IE9QUy5PUF9SRVRVUk4pIHRocm93IG5ldyBUeXBlRXJyb3IoJ091dHB1dCBpcyBpbnZhbGlkJyk7XG4gICAgICBpZiAoIWNodW5rcy5zbGljZSgxKS5ldmVyeShjaHVuayA9PiB2LmlzKEJ1ZmZlclNjaGVtYSwgY2h1bmspKSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignT3V0cHV0IGlzIGludmFsaWQnKTtcbiAgICAgIGlmIChhLmRhdGEgJiYgIXN0YWNrc0VxdWFsKGEuZGF0YSwgby5kYXRhKSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRGF0YSBtaXNtYXRjaCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihvLCBhKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   embed: () => (/* reexport safe */ _embed_js__WEBPACK_IMPORTED_MODULE_0__.p2data),\n/* harmony export */   p2ms: () => (/* reexport safe */ _p2ms_js__WEBPACK_IMPORTED_MODULE_1__.p2ms),\n/* harmony export */   p2pk: () => (/* reexport safe */ _p2pk_js__WEBPACK_IMPORTED_MODULE_2__.p2pk),\n/* harmony export */   p2pkh: () => (/* reexport safe */ _p2pkh_js__WEBPACK_IMPORTED_MODULE_3__.p2pkh),\n/* harmony export */   p2sh: () => (/* reexport safe */ _p2sh_js__WEBPACK_IMPORTED_MODULE_4__.p2sh),\n/* harmony export */   p2tr: () => (/* reexport safe */ _p2tr_js__WEBPACK_IMPORTED_MODULE_7__.p2tr),\n/* harmony export */   p2wpkh: () => (/* reexport safe */ _p2wpkh_js__WEBPACK_IMPORTED_MODULE_5__.p2wpkh),\n/* harmony export */   p2wsh: () => (/* reexport safe */ _p2wsh_js__WEBPACK_IMPORTED_MODULE_6__.p2wsh)\n/* harmony export */ });\n/* harmony import */ var _embed_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./embed.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js\");\n/* harmony import */ var _p2ms_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./p2ms.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js\");\n/* harmony import */ var _p2pk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./p2pk.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js\");\n/* harmony import */ var _p2pkh_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./p2pkh.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js\");\n/* harmony import */ var _p2sh_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./p2sh.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js\");\n/* harmony import */ var _p2wpkh_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./p2wpkh.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js\");\n/* harmony import */ var _p2wsh_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./p2wsh.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js\");\n/* harmony import */ var _p2tr_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./p2tr.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js\");\n\n\n\n\n\n\n\n\n\n// TODO\n// witness commitment\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTZDO0FBQ1o7QUFDQTtBQUNFO0FBQ0Y7QUFDSTtBQUNGO0FBQ0Y7QUFDOEI7QUFDL0Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vcGF5bWVudHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcDJkYXRhIGFzIGVtYmVkIH0gZnJvbSAnLi9lbWJlZC5qcyc7XG5pbXBvcnQgeyBwMm1zIH0gZnJvbSAnLi9wMm1zLmpzJztcbmltcG9ydCB7IHAycGsgfSBmcm9tICcuL3AycGsuanMnO1xuaW1wb3J0IHsgcDJwa2ggfSBmcm9tICcuL3AycGtoLmpzJztcbmltcG9ydCB7IHAyc2ggfSBmcm9tICcuL3Ayc2guanMnO1xuaW1wb3J0IHsgcDJ3cGtoIH0gZnJvbSAnLi9wMndwa2guanMnO1xuaW1wb3J0IHsgcDJ3c2ggfSBmcm9tICcuL3Ayd3NoLmpzJztcbmltcG9ydCB7IHAydHIgfSBmcm9tICcuL3AydHIuanMnO1xuZXhwb3J0IHsgZW1iZWQsIHAybXMsIHAycGssIHAycGtoLCBwMnNoLCBwMndwa2gsIHAyd3NoLCBwMnRyIH07XG4vLyBUT0RPXG4vLyB3aXRuZXNzIGNvbW1pdG1lbnRcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prop: () => (/* binding */ prop),\n/* harmony export */   value: () => (/* binding */ value)\n/* harmony export */ });\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9sYXp5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL2xhenkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHByb3Aob2JqZWN0LCBuYW1lLCBmKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQoKSB7XG4gICAgICBjb25zdCBfdmFsdWUgPSBmLmNhbGwodGhpcyk7XG4gICAgICB0aGlzW25hbWVdID0gX3ZhbHVlO1xuICAgICAgcmV0dXJuIF92YWx1ZTtcbiAgICB9LFxuICAgIHNldChfdmFsdWUpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IF92YWx1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICB9KTtcbiAgICB9LFxuICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZShmKSB7XG4gIGxldCBfdmFsdWU7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgaWYgKF92YWx1ZSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gX3ZhbHVlO1xuICAgIF92YWx1ZSA9IGYoKTtcbiAgICByZXR1cm4gX3ZhbHVlO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2ms: () => (/* binding */ p2ms)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\n/**\n * Represents a function that creates a Pay-to-Multisig (P2MS) payment object.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The created payment object.\n * @throws {TypeError} If the provided data is not valid.\n */\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_4__.object({}),\n        m: valibot__WEBPACK_IMPORTED_MODULE_4__.number(),\n        n: valibot__WEBPACK_IMPORTED_MODULE_4__.number(),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        pubkeys: valibot__WEBPACK_IMPORTED_MODULE_4__.array(valibot__WEBPACK_IMPORTED_MODULE_4__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint), 'Received invalid pubkey'),\n        signatures: valibot__WEBPACK_IMPORTED_MODULE_4__.array(\n          valibot__WEBPACK_IMPORTED_MODULE_4__.custom(isAcceptableSignature),\n          'Expected signature to be of type isAcceptableSignature',\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.input).slice(1);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_0].concat(a.signatures));\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      valibot__WEBPACK_IMPORTED_MODULE_4__.parse(valibot__WEBPACK_IMPORTED_MODULE_4__.number(), chunks[0], { message: 'Output is invalid' });\n      valibot__WEBPACK_IMPORTED_MODULE_4__.parse(valibot__WEBPACK_IMPORTED_MODULE_4__.number(), chunks[chunks.length - 2], {\n        message: 'Output is invalid',\n      });\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2pk: () => (/* binding */ p2pk)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\n/**\n * Creates a pay-to-public-key (P2PK) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PK payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_5__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_5__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_5__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint, 'invalid pubkey'),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_5__.custom(\n          _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature,\n          'Expected signature to be of type isCanonicalScriptSignature',\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.input);\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'p2pk', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([a.signature]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(o.pubkey)) throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.pubkey, o.pubkey) !== 0)\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.input, o.input) !== 0)\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9wMnBrLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNEQ7QUFDcEI7QUFDWTtBQUNsQjtBQUNRO0FBQ2I7QUFDN0IsWUFBWSwyQ0FBVztBQUN2QixXQUFXO0FBQ1gsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNPO0FBQ1A7QUFDQTtBQUNBLHlCQUF5QixnQkFBZ0IsWUFBWTtBQUNyRCxFQUFFLDBDQUFPO0FBQ1QsSUFBSSw0Q0FBUztBQUNiLE1BQU0sMkNBQVE7QUFDZCxpQkFBaUIsMkNBQVEsR0FBRztBQUM1QixnQkFBZ0IsbURBQVk7QUFDNUIsZ0JBQWdCLDJDQUFRLENBQUMsOENBQU87QUFDaEMsbUJBQW1CLDJDQUFRO0FBQzNCLFVBQVUsa0VBQWtDO0FBQzVDO0FBQ0E7QUFDQSxlQUFlLG1EQUFZO0FBQzNCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkNBQVU7QUFDNUIsV0FBVyxpREFBaUI7QUFDNUIsR0FBRztBQUNILCtCQUErQixpREFBZTtBQUM5QyxjQUFjO0FBQ2QsRUFBRSwwQ0FBUztBQUNYO0FBQ0EsV0FBVywrQ0FBZTtBQUMxQixHQUFHO0FBQ0gsRUFBRSwwQ0FBUztBQUNYO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRSwwQ0FBUztBQUNYO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRSwwQ0FBUztBQUNYO0FBQ0EsV0FBVywrQ0FBZTtBQUMxQixHQUFHO0FBQ0gsRUFBRSwwQ0FBUztBQUNYO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0RBQU87QUFDbEIsc0JBQXNCLHFEQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxREFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0VBQWtDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL3AycGsuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYml0Y29pbiBhcyBCSVRDT0lOX05FVFdPUksgfSBmcm9tICcuLi9uZXR3b3Jrcy5qcyc7XG5pbXBvcnQgKiBhcyBic2NyaXB0IGZyb20gJy4uL3NjcmlwdC5qcyc7XG5pbXBvcnQgeyBCdWZmZXJTY2hlbWEsIGlzUG9pbnQgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5pbXBvcnQgKiBhcyBsYXp5IGZyb20gJy4vbGF6eS5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmltcG9ydCAqIGFzIHYgZnJvbSAndmFsaWJvdCc7XG5jb25zdCBPUFMgPSBic2NyaXB0Lk9QUztcbi8vIGlucHV0OiB7c2lnbmF0dXJlfVxuLy8gb3V0cHV0OiB7cHViS2V5fSBPUF9DSEVDS1NJR1xuLyoqXG4gKiBDcmVhdGVzIGEgcGF5LXRvLXB1YmxpYy1rZXkgKFAyUEspIHBheW1lbnQgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBhIC0gVGhlIHBheW1lbnQgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIG5lY2Vzc2FyeSBkYXRhLlxuICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXltZW50IG9wdGlvbnMuXG4gKiBAcmV0dXJucyBUaGUgUDJQSyBwYXltZW50IG9iamVjdC5cbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gSWYgdGhlIHJlcXVpcmVkIGRhdGEgaXMgbm90IHByb3ZpZGVkIG9yIGlmIHRoZSBkYXRhIGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwMnBrKGEsIG9wdHMpIHtcbiAgaWYgKCFhLmlucHV0ICYmICFhLm91dHB1dCAmJiAhYS5wdWJrZXkgJiYgIWEuaW5wdXQgJiYgIWEuc2lnbmF0dXJlKVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vdCBlbm91Z2ggZGF0YScpO1xuICBvcHRzID0gT2JqZWN0LmFzc2lnbih7IHZhbGlkYXRlOiB0cnVlIH0sIG9wdHMgfHwge30pO1xuICB2LnBhcnNlKFxuICAgIHYucGFydGlhbChcbiAgICAgIHYub2JqZWN0KHtcbiAgICAgICAgbmV0d29yazogdi5vYmplY3Qoe30pLFxuICAgICAgICBvdXRwdXQ6IEJ1ZmZlclNjaGVtYSxcbiAgICAgICAgcHVia2V5OiB2LmN1c3RvbShpc1BvaW50LCAnaW52YWxpZCBwdWJrZXknKSxcbiAgICAgICAgc2lnbmF0dXJlOiB2LmN1c3RvbShcbiAgICAgICAgICBic2NyaXB0LmlzQ2Fub25pY2FsU2NyaXB0U2lnbmF0dXJlLFxuICAgICAgICAgICdFeHBlY3RlZCBzaWduYXR1cmUgdG8gYmUgb2YgdHlwZSBpc0Nhbm9uaWNhbFNjcmlwdFNpZ25hdHVyZScsXG4gICAgICAgICksXG4gICAgICAgIGlucHV0OiBCdWZmZXJTY2hlbWEsXG4gICAgICB9KSxcbiAgICApLFxuICAgIGEsXG4gICk7XG4gIGNvbnN0IF9jaHVua3MgPSBsYXp5LnZhbHVlKCgpID0+IHtcbiAgICByZXR1cm4gYnNjcmlwdC5kZWNvbXBpbGUoYS5pbnB1dCk7XG4gIH0pO1xuICBjb25zdCBuZXR3b3JrID0gYS5uZXR3b3JrIHx8IEJJVENPSU5fTkVUV09SSztcbiAgY29uc3QgbyA9IHsgbmFtZTogJ3AycGsnLCBuZXR3b3JrIH07XG4gIGxhenkucHJvcChvLCAnb3V0cHV0JywgKCkgPT4ge1xuICAgIGlmICghYS5wdWJrZXkpIHJldHVybjtcbiAgICByZXR1cm4gYnNjcmlwdC5jb21waWxlKFthLnB1YmtleSwgT1BTLk9QX0NIRUNLU0lHXSk7XG4gIH0pO1xuICBsYXp5LnByb3AobywgJ3B1YmtleScsICgpID0+IHtcbiAgICBpZiAoIWEub3V0cHV0KSByZXR1cm47XG4gICAgcmV0dXJuIGEub3V0cHV0LnNsaWNlKDEsIC0xKTtcbiAgfSk7XG4gIGxhenkucHJvcChvLCAnc2lnbmF0dXJlJywgKCkgPT4ge1xuICAgIGlmICghYS5pbnB1dCkgcmV0dXJuO1xuICAgIHJldHVybiBfY2h1bmtzKClbMF07XG4gIH0pO1xuICBsYXp5LnByb3AobywgJ2lucHV0JywgKCkgPT4ge1xuICAgIGlmICghYS5zaWduYXR1cmUpIHJldHVybjtcbiAgICByZXR1cm4gYnNjcmlwdC5jb21waWxlKFthLnNpZ25hdHVyZV0pO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICd3aXRuZXNzJywgKCkgPT4ge1xuICAgIGlmICghby5pbnB1dCkgcmV0dXJuO1xuICAgIHJldHVybiBbXTtcbiAgfSk7XG4gIC8vIGV4dGVuZGVkIHZhbGlkYXRpb25cbiAgaWYgKG9wdHMudmFsaWRhdGUpIHtcbiAgICBpZiAoYS5vdXRwdXQpIHtcbiAgICAgIGlmIChhLm91dHB1dFthLm91dHB1dC5sZW5ndGggLSAxXSAhPT0gT1BTLk9QX0NIRUNLU0lHKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPdXRwdXQgaXMgaW52YWxpZCcpO1xuICAgICAgaWYgKCFpc1BvaW50KG8ucHVia2V5KSkgdGhyb3cgbmV3IFR5cGVFcnJvcignT3V0cHV0IHB1YmtleSBpcyBpbnZhbGlkJyk7XG4gICAgICBpZiAoYS5wdWJrZXkgJiYgdG9vbHMuY29tcGFyZShhLnB1YmtleSwgby5wdWJrZXkpICE9PSAwKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdQdWJrZXkgbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgaWYgKGEuc2lnbmF0dXJlKSB7XG4gICAgICBpZiAoYS5pbnB1dCAmJiB0b29scy5jb21wYXJlKGEuaW5wdXQsIG8uaW5wdXQpICE9PSAwKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdTaWduYXR1cmUgbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgaWYgKGEuaW5wdXQpIHtcbiAgICAgIGlmIChfY2h1bmtzKCkubGVuZ3RoICE9PSAxKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnB1dCBpcyBpbnZhbGlkJyk7XG4gICAgICBpZiAoIWJzY3JpcHQuaXNDYW5vbmljYWxTY3JpcHRTaWduYXR1cmUoby5zaWduYXR1cmUpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnB1dCBoYXMgaW52YWxpZCBzaWduYXR1cmUnKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24obywgYSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2pkh: () => (/* binding */ p2pkh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(ssr)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\n/**\n * Creates a Pay-to-Public-Key-Hash (P2PKH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PKH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: _types_js__WEBPACK_IMPORTED_MODULE_3__.Hash160bitSchema,\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(25),\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(a.address);\n    const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.input);\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  const o = { name: 'p2pkh', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = new Uint8Array(21);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, network.pubKeyHash);\n    payload.set(o.hash, 1);\n    return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey || o.pubkey);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([a.signature, a.pubkey]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(chunks[1])) throw new TypeError('Input has invalid pubkey');\n      if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.signature, chunks[0]) !== 0)\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.pubkey, chunks[1]) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(chunks[1]);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2sh: () => (/* binding */ p2sh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(ssr)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\n/**\n * Creates a Pay-to-Script-Hash (P2SH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2SH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(20),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(23),\n        redeem: valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n          valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n            network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n            output: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n            input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n            witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n          }),\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n        witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  }\n  const o = { network };\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(a.address);\n    const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.input);\n  });\n  const _redeem = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Uint8Array.from([]) : lastChunk,\n      input: _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = new Uint8Array(21);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, o.network.scriptHash);\n    payload.set(o.hash, 1);\n    return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(o.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(\n      [].concat(_script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        if (redeem.output.byteLength > 520)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 520 bytes',\n          );\n        if (_script_js__WEBPACK_IMPORTED_MODULE_2__.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(redeem.output);\n        if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(redeem.input);\n          if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!(_redeem().output instanceof Uint8Array))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (\n          a.redeem.output &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.redeem.output, redeem.output) !== 0\n        )\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.redeem.input, redeem.input) !== 0)\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.stacksEqual)(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9wMnNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF3QztBQUNvQjtBQUNwQjtBQUNzQztBQUM1QztBQUNBO0FBQ1E7QUFDYjtBQUM3QixZQUFZLDJDQUFXO0FBQ3ZCLGlDQUFpQztBQUNqQztBQUNBLHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ087QUFDUDtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQixZQUFZO0FBQ3JELEVBQUUsMENBQU87QUFDVCxJQUFJLDRDQUFTO0FBQ2IsTUFBTSwyQ0FBUTtBQUNkLGlCQUFpQiwyQ0FBUSxHQUFHO0FBQzVCLGlCQUFpQiwyQ0FBUTtBQUN6QixjQUFjLCtEQUFvQjtBQUNsQyxnQkFBZ0IsK0RBQW9CO0FBQ3BDLGdCQUFnQiw0Q0FBUztBQUN6QixVQUFVLDJDQUFRO0FBQ2xCLHFCQUFxQiwyQ0FBUSxHQUFHO0FBQ2hDLG9CQUFvQixtREFBWTtBQUNoQyxtQkFBbUIsbURBQVk7QUFDL0IscUJBQXFCLDBDQUFPLENBQUMsbURBQVk7QUFDekMsV0FBVztBQUNYO0FBQ0EsZUFBZSxtREFBWTtBQUMzQixpQkFBaUIsMENBQU8sQ0FBQyxtREFBWTtBQUNyQyxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxpREFBZTtBQUMvRDtBQUNBLGNBQWM7QUFDZCxtQkFBbUIsMkNBQVU7QUFDN0Isb0JBQW9CLGlEQUFTO0FBQzdCLG9CQUFvQix1REFBZTtBQUNuQztBQUNBLGFBQWE7QUFDYixHQUFHO0FBQ0gsa0JBQWtCLDJDQUFVO0FBQzVCLFdBQVcsaURBQWlCO0FBQzVCLEdBQUc7QUFDSCxrQkFBa0IsMkNBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsK0NBQWU7QUFDNUI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEVBQUUsMENBQVM7QUFDWDtBQUNBO0FBQ0EsSUFBSSx3REFBZ0I7QUFDcEI7QUFDQSxXQUFXLGlEQUFTO0FBQ3BCLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLCtDQUFlO0FBQzNELEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQSxXQUFXLCtDQUFlO0FBQzFCLEdBQUc7QUFDSDtBQUNBLEVBQUUsMENBQVM7QUFDWDtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUUsMENBQVM7QUFDWDtBQUNBLFdBQVcsK0NBQWU7QUFDMUIsZ0JBQWdCLGlEQUFpQjtBQUNqQztBQUNBLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFEQUFhO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixxREFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpREFBaUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyREFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsK0NBQWU7QUFDckMsK0JBQStCLHFEQUFhO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlEQUFpQjtBQUM1QyxlQUFlLGtEQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHFEQUFhO0FBQ3ZCO0FBQ0E7QUFDQSw4QkFBOEIscURBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0RBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9wMnNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJjcnlwdG8gZnJvbSAnLi4vY3J5cHRvLmpzJztcbmltcG9ydCB7IGJpdGNvaW4gYXMgQklUQ09JTl9ORVRXT1JLIH0gZnJvbSAnLi4vbmV0d29ya3MuanMnO1xuaW1wb3J0ICogYXMgYnNjcmlwdCBmcm9tICcuLi9zY3JpcHQuanMnO1xuaW1wb3J0IHsgQnVmZmVyU2NoZW1hLCBOQnVmZmVyU2NoZW1hRmFjdG9yeSwgc3RhY2tzRXF1YWwgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5pbXBvcnQgKiBhcyBsYXp5IGZyb20gJy4vbGF6eS5qcyc7XG5pbXBvcnQgYnM1OGNoZWNrIGZyb20gJ2JzNThjaGVjayc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmltcG9ydCAqIGFzIHYgZnJvbSAndmFsaWJvdCc7XG5jb25zdCBPUFMgPSBic2NyaXB0Lk9QUztcbi8vIGlucHV0OiBbcmVkZWVtU2NyaXB0U2lnIC4uLl0ge3JlZGVlbVNjcmlwdH1cbi8vIHdpdG5lc3M6IDw/PlxuLy8gb3V0cHV0OiBPUF9IQVNIMTYwIHtoYXNoMTYwKHJlZGVlbVNjcmlwdCl9IE9QX0VRVUFMXG4vKipcbiAqIENyZWF0ZXMgYSBQYXktdG8tU2NyaXB0LUhhc2ggKFAyU0gpIHBheW1lbnQgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBhIC0gVGhlIHBheW1lbnQgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIG5lY2Vzc2FyeSBkYXRhLlxuICogQHBhcmFtIG9wdHMgLSBPcHRpb25hbCBwYXltZW50IG9wdGlvbnMuXG4gKiBAcmV0dXJucyBUaGUgUDJTSCBwYXltZW50IG9iamVjdC5cbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gSWYgdGhlIHJlcXVpcmVkIGRhdGEgaXMgbm90IHByb3ZpZGVkIG9yIGlmIHRoZSBkYXRhIGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwMnNoKGEsIG9wdHMpIHtcbiAgaWYgKCFhLmFkZHJlc3MgJiYgIWEuaGFzaCAmJiAhYS5vdXRwdXQgJiYgIWEucmVkZWVtICYmICFhLmlucHV0KVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vdCBlbm91Z2ggZGF0YScpO1xuICBvcHRzID0gT2JqZWN0LmFzc2lnbih7IHZhbGlkYXRlOiB0cnVlIH0sIG9wdHMgfHwge30pO1xuICB2LnBhcnNlKFxuICAgIHYucGFydGlhbChcbiAgICAgIHYub2JqZWN0KHtcbiAgICAgICAgbmV0d29yazogdi5vYmplY3Qoe30pLFxuICAgICAgICBhZGRyZXNzOiB2LnN0cmluZygpLFxuICAgICAgICBoYXNoOiBOQnVmZmVyU2NoZW1hRmFjdG9yeSgyMCksXG4gICAgICAgIG91dHB1dDogTkJ1ZmZlclNjaGVtYUZhY3RvcnkoMjMpLFxuICAgICAgICByZWRlZW06IHYucGFydGlhbChcbiAgICAgICAgICB2Lm9iamVjdCh7XG4gICAgICAgICAgICBuZXR3b3JrOiB2Lm9iamVjdCh7fSksXG4gICAgICAgICAgICBvdXRwdXQ6IEJ1ZmZlclNjaGVtYSxcbiAgICAgICAgICAgIGlucHV0OiBCdWZmZXJTY2hlbWEsXG4gICAgICAgICAgICB3aXRuZXNzOiB2LmFycmF5KEJ1ZmZlclNjaGVtYSksXG4gICAgICAgICAgfSksXG4gICAgICAgICksXG4gICAgICAgIGlucHV0OiBCdWZmZXJTY2hlbWEsXG4gICAgICAgIHdpdG5lc3M6IHYuYXJyYXkoQnVmZmVyU2NoZW1hKSxcbiAgICAgIH0pLFxuICAgICksXG4gICAgYSxcbiAgKTtcbiAgbGV0IG5ldHdvcmsgPSBhLm5ldHdvcms7XG4gIGlmICghbmV0d29yaykge1xuICAgIG5ldHdvcmsgPSAoYS5yZWRlZW0gJiYgYS5yZWRlZW0ubmV0d29yaykgfHwgQklUQ09JTl9ORVRXT1JLO1xuICB9XG4gIGNvbnN0IG8gPSB7IG5ldHdvcmsgfTtcbiAgY29uc3QgX2FkZHJlc3MgPSBsYXp5LnZhbHVlKCgpID0+IHtcbiAgICBjb25zdCBwYXlsb2FkID0gYnM1OGNoZWNrLmRlY29kZShhLmFkZHJlc3MpO1xuICAgIGNvbnN0IHZlcnNpb24gPSB0b29scy5yZWFkVUludDgocGF5bG9hZCwgMCk7XG4gICAgY29uc3QgaGFzaCA9IHBheWxvYWQuc2xpY2UoMSk7XG4gICAgcmV0dXJuIHsgdmVyc2lvbiwgaGFzaCB9O1xuICB9KTtcbiAgY29uc3QgX2NodW5rcyA9IGxhenkudmFsdWUoKCkgPT4ge1xuICAgIHJldHVybiBic2NyaXB0LmRlY29tcGlsZShhLmlucHV0KTtcbiAgfSk7XG4gIGNvbnN0IF9yZWRlZW0gPSBsYXp5LnZhbHVlKCgpID0+IHtcbiAgICBjb25zdCBjaHVua3MgPSBfY2h1bmtzKCk7XG4gICAgY29uc3QgbGFzdENodW5rID0gY2h1bmtzW2NodW5rcy5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4ge1xuICAgICAgbmV0d29yayxcbiAgICAgIG91dHB1dDogbGFzdENodW5rID09PSBPUFMuT1BfRkFMU0UgPyBVaW50OEFycmF5LmZyb20oW10pIDogbGFzdENodW5rLFxuICAgICAgaW5wdXQ6IGJzY3JpcHQuY29tcGlsZShjaHVua3Muc2xpY2UoMCwgLTEpKSxcbiAgICAgIHdpdG5lc3M6IGEud2l0bmVzcyB8fCBbXSxcbiAgICB9O1xuICB9KTtcbiAgLy8gb3V0cHV0IGRlcGVuZGVudHNcbiAgbGF6eS5wcm9wKG8sICdhZGRyZXNzJywgKCkgPT4ge1xuICAgIGlmICghby5oYXNoKSByZXR1cm47XG4gICAgY29uc3QgcGF5bG9hZCA9IG5ldyBVaW50OEFycmF5KDIxKTtcbiAgICB0b29scy53cml0ZVVJbnQ4KHBheWxvYWQsIDAsIG8ubmV0d29yay5zY3JpcHRIYXNoKTtcbiAgICBwYXlsb2FkLnNldChvLmhhc2gsIDEpO1xuICAgIHJldHVybiBiczU4Y2hlY2suZW5jb2RlKHBheWxvYWQpO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICdoYXNoJywgKCkgPT4ge1xuICAgIC8vIGluIG9yZGVyIG9mIGxlYXN0IGVmZm9ydFxuICAgIGlmIChhLm91dHB1dCkgcmV0dXJuIGEub3V0cHV0LnNsaWNlKDIsIDIyKTtcbiAgICBpZiAoYS5hZGRyZXNzKSByZXR1cm4gX2FkZHJlc3MoKS5oYXNoO1xuICAgIGlmIChvLnJlZGVlbSAmJiBvLnJlZGVlbS5vdXRwdXQpIHJldHVybiBiY3J5cHRvLmhhc2gxNjAoby5yZWRlZW0ub3V0cHV0KTtcbiAgfSk7XG4gIGxhenkucHJvcChvLCAnb3V0cHV0JywgKCkgPT4ge1xuICAgIGlmICghby5oYXNoKSByZXR1cm47XG4gICAgcmV0dXJuIGJzY3JpcHQuY29tcGlsZShbT1BTLk9QX0hBU0gxNjAsIG8uaGFzaCwgT1BTLk9QX0VRVUFMXSk7XG4gIH0pO1xuICAvLyBpbnB1dCBkZXBlbmRlbnRzXG4gIGxhenkucHJvcChvLCAncmVkZWVtJywgKCkgPT4ge1xuICAgIGlmICghYS5pbnB1dCkgcmV0dXJuO1xuICAgIHJldHVybiBfcmVkZWVtKCk7XG4gIH0pO1xuICBsYXp5LnByb3AobywgJ2lucHV0JywgKCkgPT4ge1xuICAgIGlmICghYS5yZWRlZW0gfHwgIWEucmVkZWVtLmlucHV0IHx8ICFhLnJlZGVlbS5vdXRwdXQpIHJldHVybjtcbiAgICByZXR1cm4gYnNjcmlwdC5jb21waWxlKFxuICAgICAgW10uY29uY2F0KGJzY3JpcHQuZGVjb21waWxlKGEucmVkZWVtLmlucHV0KSwgYS5yZWRlZW0ub3V0cHV0KSxcbiAgICApO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICd3aXRuZXNzJywgKCkgPT4ge1xuICAgIGlmIChvLnJlZGVlbSAmJiBvLnJlZGVlbS53aXRuZXNzKSByZXR1cm4gby5yZWRlZW0ud2l0bmVzcztcbiAgICBpZiAoby5pbnB1dCkgcmV0dXJuIFtdO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICduYW1lJywgKCkgPT4ge1xuICAgIGNvbnN0IG5hbWVQYXJ0cyA9IFsncDJzaCddO1xuICAgIGlmIChvLnJlZGVlbSAhPT0gdW5kZWZpbmVkICYmIG8ucmVkZWVtLm5hbWUgIT09IHVuZGVmaW5lZClcbiAgICAgIG5hbWVQYXJ0cy5wdXNoKG8ucmVkZWVtLm5hbWUpO1xuICAgIHJldHVybiBuYW1lUGFydHMuam9pbignLScpO1xuICB9KTtcbiAgaWYgKG9wdHMudmFsaWRhdGUpIHtcbiAgICBsZXQgaGFzaCA9IFVpbnQ4QXJyYXkuZnJvbShbXSk7XG4gICAgaWYgKGEuYWRkcmVzcykge1xuICAgICAgaWYgKF9hZGRyZXNzKCkudmVyc2lvbiAhPT0gbmV0d29yay5zY3JpcHRIYXNoKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIHZlcnNpb24gb3IgTmV0d29yayBtaXNtYXRjaCcpO1xuICAgICAgaWYgKF9hZGRyZXNzKCkuaGFzaC5sZW5ndGggIT09IDIwKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGFkZHJlc3MnKTtcbiAgICAgIGhhc2ggPSBfYWRkcmVzcygpLmhhc2g7XG4gICAgfVxuICAgIGlmIChhLmhhc2gpIHtcbiAgICAgIGlmIChoYXNoLmxlbmd0aCA+IDAgJiYgdG9vbHMuY29tcGFyZShoYXNoLCBhLmhhc2gpICE9PSAwKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIYXNoIG1pc21hdGNoJyk7XG4gICAgICBlbHNlIGhhc2ggPSBhLmhhc2g7XG4gICAgfVxuICAgIGlmIChhLm91dHB1dCkge1xuICAgICAgaWYgKFxuICAgICAgICBhLm91dHB1dC5sZW5ndGggIT09IDIzIHx8XG4gICAgICAgIGEub3V0cHV0WzBdICE9PSBPUFMuT1BfSEFTSDE2MCB8fFxuICAgICAgICBhLm91dHB1dFsxXSAhPT0gMHgxNCB8fFxuICAgICAgICBhLm91dHB1dFsyMl0gIT09IE9QUy5PUF9FUVVBTFxuICAgICAgKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPdXRwdXQgaXMgaW52YWxpZCcpO1xuICAgICAgY29uc3QgaGFzaDIgPSBhLm91dHB1dC5zbGljZSgyLCAyMik7XG4gICAgICBpZiAoaGFzaC5sZW5ndGggPiAwICYmIHRvb2xzLmNvbXBhcmUoaGFzaCwgaGFzaDIpICE9PSAwKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIYXNoIG1pc21hdGNoJyk7XG4gICAgICBlbHNlIGhhc2ggPSBoYXNoMjtcbiAgICB9XG4gICAgLy8gaW5saW5lZCB0byBwcmV2ZW50ICduby1pbm5lci1kZWNsYXJhdGlvbnMnIGZhaWxpbmdcbiAgICBjb25zdCBjaGVja1JlZGVlbSA9IHJlZGVlbSA9PiB7XG4gICAgICAvLyBpcyB0aGUgcmVkZWVtIG91dHB1dCBlbXB0eS9pbnZhbGlkP1xuICAgICAgaWYgKHJlZGVlbS5vdXRwdXQpIHtcbiAgICAgICAgY29uc3QgZGVjb21waWxlID0gYnNjcmlwdC5kZWNvbXBpbGUocmVkZWVtLm91dHB1dCk7XG4gICAgICAgIGlmICghZGVjb21waWxlIHx8IGRlY29tcGlsZS5sZW5ndGggPCAxKVxuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JlZGVlbS5vdXRwdXQgdG9vIHNob3J0Jyk7XG4gICAgICAgIGlmIChyZWRlZW0ub3V0cHV0LmJ5dGVMZW5ndGggPiA1MjApXG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICAgICdSZWRlZW0ub3V0cHV0IHVuc3BlbmRhYmxlIGlmIGxhcmdlciB0aGFuIDUyMCBieXRlcycsXG4gICAgICAgICAgKTtcbiAgICAgICAgaWYgKGJzY3JpcHQuY291bnROb25QdXNoT25seU9QcyhkZWNvbXBpbGUpID4gMjAxKVxuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgICAnUmVkZWVtLm91dHB1dCB1bnNwZW5kYWJsZSB3aXRoIG1vcmUgdGhhbiAyMDEgbm9uLXB1c2ggb3BzJyxcbiAgICAgICAgICApO1xuICAgICAgICAvLyBtYXRjaCBoYXNoIGFnYWluc3Qgb3RoZXIgc291cmNlc1xuICAgICAgICBjb25zdCBoYXNoMiA9IGJjcnlwdG8uaGFzaDE2MChyZWRlZW0ub3V0cHV0KTtcbiAgICAgICAgaWYgKGhhc2gubGVuZ3RoID4gMCAmJiB0b29scy5jb21wYXJlKGhhc2gsIGhhc2gyKSAhPT0gMClcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIYXNoIG1pc21hdGNoJyk7XG4gICAgICAgIGVsc2UgaGFzaCA9IGhhc2gyO1xuICAgICAgfVxuICAgICAgaWYgKHJlZGVlbS5pbnB1dCkge1xuICAgICAgICBjb25zdCBoYXNJbnB1dCA9IHJlZGVlbS5pbnB1dC5sZW5ndGggPiAwO1xuICAgICAgICBjb25zdCBoYXNXaXRuZXNzID0gcmVkZWVtLndpdG5lc3MgJiYgcmVkZWVtLndpdG5lc3MubGVuZ3RoID4gMDtcbiAgICAgICAgaWYgKCFoYXNJbnB1dCAmJiAhaGFzV2l0bmVzcykgdGhyb3cgbmV3IFR5cGVFcnJvcignRW1wdHkgaW5wdXQnKTtcbiAgICAgICAgaWYgKGhhc0lucHV0ICYmIGhhc1dpdG5lc3MpXG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW5wdXQgYW5kIHdpdG5lc3MgcHJvdmlkZWQnKTtcbiAgICAgICAgaWYgKGhhc0lucHV0KSB7XG4gICAgICAgICAgY29uc3QgcmljaHVua3MgPSBic2NyaXB0LmRlY29tcGlsZShyZWRlZW0uaW5wdXQpO1xuICAgICAgICAgIGlmICghYnNjcmlwdC5pc1B1c2hPbmx5KHJpY2h1bmtzKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ05vbiBwdXNoLW9ubHkgc2NyaXB0U2lnJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChhLmlucHV0KSB7XG4gICAgICBjb25zdCBjaHVua3MgPSBfY2h1bmtzKCk7XG4gICAgICBpZiAoIWNodW5rcyB8fCBjaHVua3MubGVuZ3RoIDwgMSkgdGhyb3cgbmV3IFR5cGVFcnJvcignSW5wdXQgdG9vIHNob3J0Jyk7XG4gICAgICBpZiAoIShfcmVkZWVtKCkub3V0cHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0lucHV0IGlzIGludmFsaWQnKTtcbiAgICAgIGNoZWNrUmVkZWVtKF9yZWRlZW0oKSk7XG4gICAgfVxuICAgIGlmIChhLnJlZGVlbSkge1xuICAgICAgaWYgKGEucmVkZWVtLm5ldHdvcmsgJiYgYS5yZWRlZW0ubmV0d29yayAhPT0gbmV0d29yaylcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignTmV0d29yayBtaXNtYXRjaCcpO1xuICAgICAgaWYgKGEuaW5wdXQpIHtcbiAgICAgICAgY29uc3QgcmVkZWVtID0gX3JlZGVlbSgpO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgYS5yZWRlZW0ub3V0cHV0ICYmXG4gICAgICAgICAgdG9vbHMuY29tcGFyZShhLnJlZGVlbS5vdXRwdXQsIHJlZGVlbS5vdXRwdXQpICE9PSAwXG4gICAgICAgIClcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWRlZW0ub3V0cHV0IG1pc21hdGNoJyk7XG4gICAgICAgIGlmIChhLnJlZGVlbS5pbnB1dCAmJiB0b29scy5jb21wYXJlKGEucmVkZWVtLmlucHV0LCByZWRlZW0uaW5wdXQpICE9PSAwKVxuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JlZGVlbS5pbnB1dCBtaXNtYXRjaCcpO1xuICAgICAgfVxuICAgICAgY2hlY2tSZWRlZW0oYS5yZWRlZW0pO1xuICAgIH1cbiAgICBpZiAoYS53aXRuZXNzKSB7XG4gICAgICBpZiAoXG4gICAgICAgIGEucmVkZWVtICYmXG4gICAgICAgIGEucmVkZWVtLndpdG5lc3MgJiZcbiAgICAgICAgIXN0YWNrc0VxdWFsKGEucmVkZWVtLndpdG5lc3MsIGEud2l0bmVzcylcbiAgICAgIClcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignV2l0bmVzcyBhbmQgcmVkZWVtLndpdG5lc3MgbWlzbWF0Y2gnKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24obywgYSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2tr: () => (/* binding */ p2tr)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ecc_lib.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n/* harmony import */ var _bip341_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bip341.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../address.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst TAPROOT_WITNESS_VERSION = 0x01;\nconst ANNEX_PREFIX = 0x50;\n/**\n * Creates a Pay-to-Taproot (P2TR) payment object.\n *\n * @param a - The payment object containing the necessary data for P2TR.\n * @param opts - Optional payment options.\n * @returns The P2TR payment object.\n * @throws {TypeError} If the provided data is invalid or insufficient.\n */\nfunction p2tr(a, opts) {\n  if (\n    !a.address &&\n    !a.output &&\n    !a.pubkey &&\n    !a.internalPubkey &&\n    !(a.witness && a.witness.length > 1)\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_9__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_9__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_9__.object({\n        address: valibot__WEBPACK_IMPORTED_MODULE_9__.string(),\n        input: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(0),\n        network: valibot__WEBPACK_IMPORTED_MODULE_9__.object({}),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(34),\n        internalPubkey: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32), // merkle root hash, the tweak\n        pubkey: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32), // tweaked with `hash` from `internalPubkey`\n        signature: valibot__WEBPACK_IMPORTED_MODULE_9__.union([\n          (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(64),\n          (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(65),\n        ]),\n        witness: valibot__WEBPACK_IMPORTED_MODULE_9__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n        scriptTree: valibot__WEBPACK_IMPORTED_MODULE_9__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isTaptree, 'Taptree is not of type isTaptree'),\n        redeem: valibot__WEBPACK_IMPORTED_MODULE_9__.partial(\n          valibot__WEBPACK_IMPORTED_MODULE_9__.object({\n            output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema, // tapleaf script\n            redeemVersion: valibot__WEBPACK_IMPORTED_MODULE_9__.number(), // tapleaf version\n            witness: valibot__WEBPACK_IMPORTED_MODULE_9__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n          }),\n        ),\n        redeemVersion: valibot__WEBPACK_IMPORTED_MODULE_9__.number(),\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    return (0,_address_js__WEBPACK_IMPORTED_MODULE_7__.fromBech32)(a.address);\n  });\n  // remove annex if present, ignored by taproot\n  const _witness = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    if (!a.witness || !a.witness.length) return;\n    if (\n      a.witness.length >= 2 &&\n      a.witness[a.witness.length - 1][0] === ANNEX_PREFIX\n    ) {\n      return a.witness.slice(0, -1);\n    }\n    return a.witness.slice();\n  });\n  const _hashTree = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    if (a.scriptTree) return (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.toHashTree)(a.scriptTree);\n    if (a.hash) return { hash: a.hash };\n    return;\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'p2tr', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'address', () => {\n    if (!o.pubkey) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_6__.bech32m.toWords(o.pubkey);\n    words.unshift(TAPROOT_WITNESS_VERSION);\n    return bech32__WEBPACK_IMPORTED_MODULE_6__.bech32m.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'hash', () => {\n    const hashTree = _hashTree();\n    if (hashTree) return hashTree.hash;\n    const w = _witness();\n    if (w && w.length > 1) {\n      const controlBlock = w[w.length - 1];\n      const leafVersion = controlBlock[0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK;\n      const script = w[w.length - 2];\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({ output: script, version: leafVersion });\n      return (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.rootHashFromPath)(controlBlock, leafHash);\n    }\n    return null;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'output', () => {\n    if (!o.pubkey) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_1, o.pubkey]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'redeemVersion', () => {\n    if (a.redeemVersion) return a.redeemVersion;\n    if (\n      a.redeem &&\n      a.redeem.redeemVersion !== undefined &&\n      a.redeem.redeemVersion !== null\n    ) {\n      return a.redeem.redeemVersion;\n    }\n    return _bip341_js__WEBPACK_IMPORTED_MODULE_4__.LEAF_VERSION_TAPSCRIPT;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'redeem', () => {\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length < 2) return;\n    return {\n      output: witness[witness.length - 2],\n      witness: witness.slice(0, -2),\n      redeemVersion: witness[witness.length - 1][0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK,\n    };\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.internalPubkey) {\n      const tweakedKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(o.internalPubkey, o.hash);\n      if (tweakedKey) return tweakedKey.x;\n    }\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'internalPubkey', () => {\n    if (a.internalPubkey) return a.internalPubkey;\n    const witness = _witness();\n    if (witness && witness.length > 1)\n      return witness[witness.length - 1].slice(1, 33);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'signature', () => {\n    if (a.signature) return a.signature;\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length !== 1) return;\n    return witness[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'witness', () => {\n    if (a.witness) return a.witness;\n    const hashTree = _hashTree();\n    if (hashTree && a.redeem && a.redeem.output && a.internalPubkey) {\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      const path = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.findScriptPath)(hashTree, leafHash);\n      if (!path) return;\n      const outputKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(a.internalPubkey, hashTree.hash);\n      if (!outputKey) return;\n      const controlBock = uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.concat(\n        [\n          Uint8Array.from([o.redeemVersion | outputKey.parity]),\n          a.internalPubkey,\n        ].concat(path),\n      );\n      return [a.redeem.output, controlBock];\n    }\n    if (a.signature) return [a.signature];\n  });\n  // extended validation\n  if (opts.validate) {\n    let pubkey = Uint8Array.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== TAPROOT_WITNESS_VERSION)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      pubkey = _address().data;\n    }\n    if (a.pubkey) {\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, a.pubkey) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.pubkey;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_1 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, a.output.slice(2)) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.output.slice(2);\n    }\n    if (a.internalPubkey) {\n      const tweakedKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(a.internalPubkey, o.hash);\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, tweakedKey.x) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = tweakedKey.x;\n    }\n    if (pubkey && pubkey.length) {\n      if (!(0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__.getEccLib)().isXOnlyPoint(pubkey))\n        throw new TypeError('Invalid pubkey for p2tr');\n    }\n    const hashTree = _hashTree();\n    if (a.hash && hashTree) {\n      if (uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.hash, hashTree.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n    if (a.redeem && a.redeem.output && hashTree) {\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      if (!(0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.findScriptPath)(hashTree, leafHash))\n        throw new TypeError('Redeem script not in tree');\n    }\n    const witness = _witness();\n    // compare the provided redeem data with the one computed from witness\n    if (a.redeem && o.redeem) {\n      if (a.redeem.redeemVersion) {\n        if (a.redeem.redeemVersion !== o.redeem.redeemVersion)\n          throw new TypeError('Redeem.redeemVersion and witness mismatch');\n      }\n      if (a.redeem.output) {\n        if (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // output redeem is constructed from the witness\n        if (\n          o.redeem.output &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.redeem.output, o.redeem.output) !== 0\n        )\n          throw new TypeError('Redeem.output and witness mismatch');\n      }\n      if (a.redeem.witness) {\n        if (\n          o.redeem.witness &&\n          !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.redeem.witness, o.redeem.witness)\n        )\n          throw new TypeError('Redeem.witness and witness mismatch');\n      }\n    }\n    if (witness && witness.length) {\n      if (witness.length === 1) {\n        // key spending\n        if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.signature, witness[0]) !== 0)\n          throw new TypeError('Signature mismatch');\n      } else {\n        // script path spending\n        const controlBlock = witness[witness.length - 1];\n        if (controlBlock.length < 33)\n          throw new TypeError(\n            `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n          );\n        if ((controlBlock.length - 33) % 32 !== 0)\n          throw new TypeError(\n            `The control-block length of ${controlBlock.length} is incorrect!`,\n          );\n        const m = (controlBlock.length - 33) / 32;\n        if (m > 128)\n          throw new TypeError(\n            `The script path is too long. Got ${m}, expected max 128.`,\n          );\n        const internalPubkey = controlBlock.slice(1, 33);\n        if (\n          a.internalPubkey &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.internalPubkey, internalPubkey) !== 0\n        )\n          throw new TypeError('Internal pubkey mismatch');\n        if (!(0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__.getEccLib)().isXOnlyPoint(internalPubkey))\n          throw new TypeError('Invalid internalPubkey for p2tr witness');\n        const leafVersion = controlBlock[0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK;\n        const script = witness[witness.length - 2];\n        const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({ output: script, version: leafVersion });\n        const hash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.rootHashFromPath)(controlBlock, leafHash);\n        const outputKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(internalPubkey, hash);\n        if (!outputKey)\n          // todo: needs test data\n          throw new TypeError('Invalid outputKey for p2tr witness');\n        if (pubkey.length && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, outputKey.x) !== 0)\n          throw new TypeError('Pubkey mismatch for p2tr witness');\n        if (outputKey.parity !== (controlBlock[0] & 1))\n          throw new Error('Incorrect parity');\n      }\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2wpkh: () => (/* binding */ p2wpkh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\nconst EMPTY_BUFFER = new Uint8Array(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\n/**\n * Creates a pay-to-witness-public-key-hash (p2wpkh) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The p2wpkh payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(20),\n        input: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(0),\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(22),\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint, 'Not a valid pubkey'),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature),\n        witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const result = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Uint8Array.from(data),\n    };\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey || o.pubkey);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([OPS.OP_0, o.hash]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.output.slice(2)) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.signature, a.witness[0]) !== 0)\n        throw new TypeError('Signature mismatch');\n      // if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.pubkey, a.witness[1]) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.witness[1]);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2wsh: () => (/* binding */ p2wsh)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst EMPTY_BUFFER = new Uint8Array(0);\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    chunk instanceof Uint8Array &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\n/**\n * Creates a Pay-to-Witness-Script-Hash (P2WSH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2WSH payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_6__.parse(\n    (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NullablePartial)({\n      network: valibot__WEBPACK_IMPORTED_MODULE_6__.object({}),\n      address: valibot__WEBPACK_IMPORTED_MODULE_6__.string(),\n      hash: _types_js__WEBPACK_IMPORTED_MODULE_2__.Buffer256bitSchema,\n      output: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(34),\n      redeem: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NullablePartial)({\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        network: valibot__WEBPACK_IMPORTED_MODULE_6__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        witness: valibot__WEBPACK_IMPORTED_MODULE_6__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n      }),\n      input: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(0),\n      witness: valibot__WEBPACK_IMPORTED_MODULE_6__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n    }),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    const result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Uint8Array.from(data),\n    };\n  });\n  const _rchunks = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  }\n  const o = { network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__.sha256)(o.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_0, o.hash]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = _script_js__WEBPACK_IMPORTED_MODULE_1__.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty/valid?\n      if (a.redeem.output) {\n        const decompile = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output is invalid');\n        if (a.redeem.output.byteLength > 3600)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 3600 bytes',\n          );\n        if (_script_js__WEBPACK_IMPORTED_MODULE_1__.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__.sha256)(a.redeem.output);\n        if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, hash2) !== 0)\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !_script_js__WEBPACK_IMPORTED_MODULE_1__.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (\n        a.redeem &&\n        a.redeem.output &&\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(a.redeem.output, wScript) !== 0\n      )\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Psbt: () => (/* binding */ Psbt)\n/* harmony export */ });\n/* harmony import */ var bip174__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bip174 */ \"(ssr)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/psbt.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varuint-bitcoin */ \"(ssr)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bufferutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./networks.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./payments/index.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _payments_bip341_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./payments/bip341.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./psbt/bip371.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js\");\n/* harmony import */ var _psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./psbt/psbtutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: _networks_js__WEBPACK_IMPORTED_MODULE_4__.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n *\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n *\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n *\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n *\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n *\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  data;\n  static fromBase64(data, opts = {}) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromBase64(data);\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromHex(data);\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174__WEBPACK_IMPORTED_MODULE_0__.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  __CACHE;\n  opts;\n  constructor(opts = {}, data = new bip174__WEBPACK_IMPORTED_MODULE_0__.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecessor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0,_address_js__WEBPACK_IMPORTED_MODULE_2__.fromOutputScript)(output.script, this.opts.network);\n      } catch (_) {}\n      return {\n        script: (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputFields)(inputData, inputData, 'addInput');\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0,_address_js__WEBPACK_IMPORTED_MODULE_2__.toOutputScript)(address, network);\n      outputData = Object.assign({}, outputData, { script });\n    }\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        undefined,\n        finalScriptsFunc,\n      );\n    return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n  }\n  finalizeTaprootInput(\n    inputIndex,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.tapScriptFinalizer,\n  ) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n        finalScriptsFunc,\n      );\n    throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n  }\n  _finalizeInput(inputIndex, input, finalScriptsFunc = getFinalScripts) {\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  _finalizeTaprootInput(\n    inputIndex,\n    input,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.tapScriptFinalizer,\n  ) {\n    if (!input.witnessUtxo)\n      throw new Error(\n        `Cannot finalize input #${inputIndex}. Missing withness utxo.`,\n      );\n    // Check key spend first. Increased privacy and reduced block space.\n    if (input.tapKeySig) {\n      const payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2tr({\n        output: input.witnessUtxo.script,\n        signature: input.tapKeySig,\n      });\n      const finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(payment.witness);\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    } else {\n      const { finalScriptWitness } = finalScriptsFunc(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    }\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this.validateSignaturesOfTaprootInput(\n        inputIndex,\n        validator,\n        pubkey,\n      );\n    return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n  }\n  _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(sig.pubkey, pubkey) === 0)\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const tapKeySig = (input || {}).tapKeySig;\n    const tapScriptSig = (input || {}).tapScriptSig;\n    if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length))\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    pubkey = pubkey && (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(pubkey);\n    const allHashses = pubkey\n      ? getTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          pubkey,\n          this.__CACHE,\n        )\n      : getAllTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          this.__CACHE,\n        );\n    if (!allHashses.length) throw new Error('No signatures for this pubkey');\n    const tapKeyHash = allHashses.find(h => !h.leafHash);\n    let validationResultCount = 0;\n    if (tapKeySig && tapKeyHash) {\n      const isValidTapkeySig = validator(\n        tapKeyHash.pubkey,\n        tapKeyHash.hash,\n        trimTaprootSig(tapKeySig),\n      );\n      if (!isValidTapkeySig) return false;\n      validationResultCount++;\n    }\n    if (tapScriptSig) {\n      for (const tapSig of tapScriptSig) {\n        const tapSigHash = allHashses.find(\n          h => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(h.pubkey, tapSig.pubkey) === 0,\n        );\n        if (tapSigHash) {\n          const isValidTapScriptSig = validator(\n            tapSig.pubkey,\n            tapSigHash.hash,\n            trimTaprootSig(tapSig.signature),\n          );\n          if (!isValidTapScriptSig) return false;\n          validationResultCount++;\n        }\n      }\n    }\n    return validationResultCount > 0;\n  }\n  signAllInputsHD(hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(inputIndex, hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(keyPair, sighashTypes) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(inputIndex, keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input)) {\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        undefined,\n        sighashTypes,\n      );\n    }\n    return this._signInput(inputIndex, keyPair, sighashTypes);\n  }\n  signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        tapLeafHashToSign,\n        sighashTypes,\n      );\n    throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n  }\n  _signInput(inputIndex, keyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  _signTaprootInput(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    const tapKeySig = hashesForSig\n      .filter(h => !h.leafHash)\n      .map(h =>\n        (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n      )[0];\n    const tapScriptSig = hashesForSig\n      .filter(h => !!h.leafHash)\n      .map(h => ({\n        pubkey: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(keyPair.publicKey),\n        signature: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n        leafHash: h.leafHash,\n      }));\n    if (tapKeySig) {\n      this.data.updateInput(inputIndex, { tapKeySig });\n    }\n    if (tapScriptSig.length) {\n      this.data.updateInput(inputIndex, { tapScriptSig });\n    }\n    return this;\n  }\n  signInputAsync(inputIndex, keyPair, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n      if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          undefined,\n          sighashTypes,\n        );\n      return this._signInputAsync(inputIndex, keyPair, sighashTypes);\n    });\n  }\n  signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n      if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          tapLeafHash,\n          sighashTypes,\n        );\n      throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n    });\n  }\n  _signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    return Promise.resolve(keyPair.sign(hash)).then(signature => {\n      const partialSig = [\n        {\n          pubkey: keyPair.publicKey,\n          signature: _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.encode(signature, sighashType),\n        },\n      ];\n      this.data.updateInput(inputIndex, { partialSig });\n    });\n  }\n  async _signTaprootInputAsync(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHash,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHash,\n      sighashTypes,\n    );\n    const signaturePromises = [];\n    const tapKeyHash = hashesForSig.filter(h => !h.leafHash)[0];\n    if (tapKeyHash) {\n      const tapKeySigPromise = Promise.resolve(\n        keyPair.signSchnorr(tapKeyHash.hash),\n      ).then(sig => {\n        return { tapKeySig: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(sig, input.sighashType) };\n      });\n      signaturePromises.push(tapKeySigPromise);\n    }\n    const tapScriptHashes = hashesForSig.filter(h => !!h.leafHash);\n    if (tapScriptHashes.length) {\n      const tapScriptSigPromises = tapScriptHashes.map(tsh => {\n        return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(\n          signature => {\n            const tapScriptSig = [\n              {\n                pubkey: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(keyPair.publicKey),\n                signature: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n                  signature,\n                  input.sighashType,\n                ),\n                leafHash: tsh.leafHash,\n              },\n            ];\n            return { tapScriptSig };\n          },\n        );\n      });\n      signaturePromises.push(...tapScriptSigPromises);\n    }\n    return Promise.all(signaturePromises).then(results => {\n      results.forEach(v => this.data.updateInput(inputIndex, v));\n    });\n  }\n  checkTaprootHashesForSig(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes,\n  ) {\n    if (typeof keyPair.signSchnorr !== 'function')\n      throw new Error(\n        `Need Schnorr Signer to sign taproot input #${inputIndex}.`,\n      );\n    const hashesForSig = getTaprootHashesForSig(\n      inputIndex,\n      input,\n      this.data.inputs,\n      keyPair.publicKey,\n      this.__CACHE,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    if (!hashesForSig || !hashesForSig.length)\n      throw new Error(\n        `Can not sign for input #${inputIndex} with the key ${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(keyPair.publicKey)}`,\n      );\n    return hashesForSig;\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputFields)(\n      this.data.inputs[inputIndex],\n      updateData,\n      'updateInput',\n    );\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const outputData = this.data.outputs[outputIndex];\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootOutputFields)(outputData, updateData, 'updateOutput');\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  tx;\n  constructor(buffer = Uint8Array.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!(input.hash instanceof Uint8Array) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.reverseBuffer)(uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromHex(input.hash))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !(output.script instanceof Uint8Array) ||\n      typeof output.value !== 'bigint'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(\n          pSig => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(pSig.pubkey, pubkey) === 0,\n        );\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(root.fingerprint, d.masterFingerprint)) return false;\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(root.derivePath(d.path).publicKey, d.pubkey))\n      return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    const throws = (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input)\n      ? (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputForSigs)(input, action)\n      : (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.checkInputForSig)(input, action);\n    if (throws)\n      throw new Error('Can not modify transaction, signatures exist.');\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!(0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(pubkey)}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.reverseBuffer)(Uint8Array.from(input.hash))) + ':' + input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(scriptPubKey, redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(p2wsh.witness);\n    } else {\n      finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(payment.witness);\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType = input.sighashType || _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL;\n  checkSighashTypeAllowed(sighashType, sighashTypes);\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(prevoutHash, utxoHash) !== 0) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pkh({\n      hash: meaningfulScript.slice(2),\n    }).output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(meaningfulScript)}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecessor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n  const allPublicKeys = [];\n  if (input.tapInternalKey) {\n    const key = getPrevoutTaprootKey(inputIndex, input, cache);\n    if (key) {\n      allPublicKeys.push(key);\n    }\n  }\n  if (input.tapScriptSig) {\n    const tapScriptPubkeys = input.tapScriptSig.map(tss => tss.pubkey);\n    allPublicKeys.push(...tapScriptPubkeys);\n  }\n  const allHashes = allPublicKeys.map(publicKey =>\n    getTaprootHashesForSig(inputIndex, input, inputs, publicKey, cache),\n  );\n  return allHashes.flat();\n}\nfunction getPrevoutTaprootKey(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2TR)(script) ? script.subarray(2, 34) : null;\n}\nfunction trimTaprootSig(signature) {\n  return signature.length === 64 ? signature : signature.subarray(0, 64);\n}\nfunction getTaprootHashesForSig(\n  inputIndex,\n  input,\n  inputs,\n  pubkey,\n  cache,\n  tapLeafHashToSign,\n  allowedSighashTypes,\n) {\n  const unsignedTx = cache.__TX;\n  const sighashType = input.sighashType || _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT;\n  checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n  const prevOuts = inputs.map((i, index) =>\n    getScriptAndAmountFromUtxo(index, i, cache),\n  );\n  const signingScripts = prevOuts.map(o => o.script);\n  const values = prevOuts.map(o => o.value);\n  const hashes = [];\n  if (input.tapInternalKey && !tapLeafHashToSign) {\n    const outputKey =\n      getPrevoutTaprootKey(inputIndex, input, cache) || Uint8Array.from([]);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(pubkey), outputKey) === 0) {\n      const tapKeyHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n      );\n      hashes.push({ pubkey, hash: tapKeyHash });\n    }\n  }\n  const tapLeafHashes = (input.tapLeafScript || [])\n    .filter(tapLeaf => (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, tapLeaf.script))\n    .map(tapLeaf => {\n      const hash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_6__.tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion,\n      });\n      return Object.assign({ hash }, tapLeaf);\n    })\n    .filter(\n      tapLeaf =>\n        !tapLeafHashToSign ||\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(tapLeafHashToSign, tapLeaf.hash) === 0,\n    )\n    .map(tapLeaf => {\n      const tapScriptHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n        tapLeaf.hash,\n      );\n      return {\n        pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash,\n      };\n    });\n  return hashes.concat(tapLeafHashes);\n}\nfunction checkSighashTypeAllowed(sighashType, sighashTypes) {\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(bipDv.masterFingerprint, hdKeyPair.fingerprint) === 0) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(bipDv.pubkey, node.publicKey) !== 0) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(ps.pubkey, pk) === 0;\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.decode(buffer, offset);\n    offset += varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.encodingLength(vi.bigintValue);\n    return vi.numberValue;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0n;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0n);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(Number(fee / BigInt(bytes)));\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return script;\n}\nfunction getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return {\n      script: input.witnessUtxo.script,\n      value: input.witnessUtxo.value,\n    };\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n    return { script: o.script, value: o.value };\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !(lastItem instanceof Uint8Array) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && _script_js__WEBPACK_IMPORTED_MODULE_7__.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return _script_js__WEBPACK_IMPORTED_MODULE_7__.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2SHScript)(script);\n  const isP2SHP2WSH = isP2SH && redeemScript && (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WSHScript)(redeemScript);\n  const isP2WSH = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WSHScript)(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n        ? 'p2sh'\n        : isP2WSH\n          ? 'p2wsh'\n          : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(script) || (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2SHScript)(script)) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction classifyScript(script) {\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(script)) return 'witnesspubkeyhash';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2PKH)(script)) return 'pubkeyhash';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2MS)(script)) return 'multisig';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2PK)(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkTaprootInputFields: () => (/* binding */ checkTaprootInputFields),\n/* harmony export */   checkTaprootInputForSigs: () => (/* binding */ checkTaprootInputForSigs),\n/* harmony export */   checkTaprootOutputFields: () => (/* binding */ checkTaprootOutputFields),\n/* harmony export */   isTaprootInput: () => (/* binding */ isTaprootInput),\n/* harmony export */   isTaprootOutput: () => (/* binding */ isTaprootOutput),\n/* harmony export */   serializeTaprootSignature: () => (/* binding */ serializeTaprootSignature),\n/* harmony export */   tapScriptFinalizer: () => (/* binding */ tapScriptFinalizer),\n/* harmony export */   tapTreeFromList: () => (/* binding */ tapTreeFromList),\n/* harmony export */   tapTreeToList: () => (/* binding */ tapTreeToList),\n/* harmony export */   toXOnly: () => (/* binding */ toXOnly),\n/* harmony export */   tweakInternalPubKey: () => (/* binding */ tweakInternalPubKey)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transaction.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _psbtutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./psbtutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\");\n/* harmony import */ var _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../payments/bip341.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../payments/index.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\n\n\n/**\n * Converts a public key to an X-only public key.\n * @param pubKey The public key to convert.\n * @returns The X-only public key.\n */\nconst toXOnly = pubKey =>\n  pubKey.length === 32 ? pubKey : pubKey.slice(1, 33);\n/**\n * Default tapscript finalizer. It searches for the `tapLeafHashToFinalize` if provided.\n * Otherwise it will search for the tapleaf that has at least one signature and has the shortest path.\n * @param inputIndex the position of the PSBT input.\n * @param input the PSBT input.\n * @param tapLeafHashToFinalize optional, if provided the finalizer will search for a tapleaf that has this hash\n *                              and will try to build the finalScriptWitness.\n * @returns the finalScriptWitness or throws an exception if no tapleaf found.\n */\nfunction tapScriptFinalizer(inputIndex, input, tapLeafHashToFinalize) {\n  const tapLeaf = findTapLeafToFinalize(\n    input,\n    inputIndex,\n    tapLeafHashToFinalize,\n  );\n  try {\n    const sigs = sortSignatures(input, tapLeaf);\n    const witness = sigs.concat(tapLeaf.script).concat(tapLeaf.controlBlock);\n    return { finalScriptWitness: (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.witnessStackToScriptWitness)(witness) };\n  } catch (err) {\n    throw new Error(`Can not finalize taproot input #${inputIndex}: ${err}`);\n  }\n}\n/**\n * Serializes a taproot signature.\n * @param sig The signature to serialize.\n * @param sighashType The sighash type. Optional.\n * @returns The serialized taproot signature.\n */\nfunction serializeTaprootSignature(sig, sighashType) {\n  const sighashTypeByte = sighashType\n    ? Uint8Array.from([sighashType])\n    : Uint8Array.from([]);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([sig, sighashTypeByte]);\n}\n/**\n * Checks if a PSBT input is a taproot input.\n * @param input The PSBT input to check.\n * @returns True if the input is a taproot input, false otherwise.\n */\nfunction isTaprootInput(input) {\n  return (\n    input &&\n    !!(\n      input.tapInternalKey ||\n      input.tapMerkleRoot ||\n      (input.tapLeafScript && input.tapLeafScript.length) ||\n      (input.tapBip32Derivation && input.tapBip32Derivation.length) ||\n      (input.witnessUtxo && (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.isP2TR)(input.witnessUtxo.script))\n    )\n  );\n}\n/**\n * Checks if a PSBT output is a taproot output.\n * @param output The PSBT output to check.\n * @param script The script to check. Optional.\n * @returns True if the output is a taproot output, false otherwise.\n */\nfunction isTaprootOutput(output, script) {\n  return (\n    output &&\n    !!(\n      output.tapInternalKey ||\n      output.tapTree ||\n      (output.tapBip32Derivation && output.tapBip32Derivation.length) ||\n      (script && (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.isP2TR)(script))\n    )\n  );\n}\n/**\n * Checks the taproot input fields for consistency.\n * @param inputData The original input data.\n * @param newInputData The new input data.\n * @param action The action being performed.\n * @throws Throws an error if the input fields are inconsistent.\n */\nfunction checkTaprootInputFields(inputData, newInputData, action) {\n  checkMixedTaprootAndNonTaprootInputFields(inputData, newInputData, action);\n  checkIfTapLeafInTree(inputData, newInputData, action);\n}\n/**\n * Checks the taproot output fields for consistency.\n * @param outputData The original output data.\n * @param newOutputData The new output data.\n * @param action The action being performed.\n * @throws Throws an error if the output fields are inconsistent.\n */\nfunction checkTaprootOutputFields(outputData, newOutputData, action) {\n  checkMixedTaprootAndNonTaprootOutputFields(outputData, newOutputData, action);\n  checkTaprootScriptPubkey(outputData, newOutputData);\n}\nfunction checkTaprootScriptPubkey(outputData, newOutputData) {\n  if (!newOutputData.tapTree && !newOutputData.tapInternalKey) return;\n  const tapInternalKey =\n    newOutputData.tapInternalKey || outputData.tapInternalKey;\n  const tapTree = newOutputData.tapTree || outputData.tapTree;\n  if (tapInternalKey) {\n    const { script: scriptPubkey } = outputData;\n    const script = getTaprootScripPubkey(tapInternalKey, tapTree);\n    if (scriptPubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(script, scriptPubkey) !== 0)\n      throw new Error('Error adding output. Script or address mismatch.');\n  }\n}\n/**\n * Returns the Taproot script public key.\n *\n * @param tapInternalKey - The Taproot internal key.\n * @param tapTree - The Taproot tree (optional).\n * @returns The Taproot script public key.\n */\nfunction getTaprootScripPubkey(tapInternalKey, tapTree) {\n  const scriptTree = tapTree && tapTreeFromList(tapTree.leaves);\n  const { output } = (0,_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2tr)({\n    internalPubkey: tapInternalKey,\n    scriptTree,\n  });\n  return output;\n}\n/**\n * Tweak the internal public key for a specific input.\n * @param inputIndex - The index of the input.\n * @param input - The PsbtInput object representing the input.\n * @returns The tweaked internal public key.\n * @throws Error if the tap internal key cannot be tweaked.\n */\nfunction tweakInternalPubKey(inputIndex, input) {\n  const tapInternalKey = input.tapInternalKey;\n  const outputKey =\n    tapInternalKey && (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tweakKey)(tapInternalKey, input.tapMerkleRoot);\n  if (!outputKey)\n    throw new Error(\n      `Cannot tweak tap internal key for input #${inputIndex}. Public key: ${\n        // tapInternalKey && tapInternalKey.toString('hex')\n        tapInternalKey && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.toHex(tapInternalKey)\n      }`,\n    );\n  return outputKey.x;\n}\n/**\n * Convert a binary tree to a BIP371 type list. Each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @param tree the binary tap tree\n * @returns a list of BIP 371 tapleaves\n */\nfunction tapTreeToList(tree) {\n  if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTaptree)(tree))\n    throw new Error(\n      'Cannot convert taptree to tapleaf list. Expecting a tapree structure.',\n    );\n  return _tapTreeToList(tree);\n}\n/**\n * Convert a BIP371 TapLeaf list to a TapTree (binary).\n * @param leaves a list of tapleaves where each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @returns the corresponding taptree, or throws an exception if the tree cannot be reconstructed\n */\nfunction tapTreeFromList(leaves = []) {\n  if (leaves.length === 1 && leaves[0].depth === 0)\n    return {\n      output: leaves[0].script,\n      version: leaves[0].leafVersion,\n    };\n  return instertLeavesInTree(leaves);\n}\n/**\n * Checks the taproot input for signatures.\n * @param input The PSBT input to check.\n * @param action The action being performed.\n * @returns True if the input has taproot signatures, false otherwise.\n */\nfunction checkTaprootInputForSigs(input, action) {\n  const sigs = extractTaprootSigs(input);\n  return sigs.some(sig =>\n    (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.signatureBlocksAction)(sig, decodeSchnorrSignature, action),\n  );\n}\n/**\n * Decodes a Schnorr signature.\n * @param signature The signature to decode.\n * @returns The decoded Schnorr signature.\n */\nfunction decodeSchnorrSignature(signature) {\n  return {\n    signature: signature.slice(0, 64),\n    hashType: signature.slice(64)[0] || _transaction_js__WEBPACK_IMPORTED_MODULE_1__.Transaction.SIGHASH_DEFAULT,\n  };\n}\n/**\n * Extracts taproot signatures from a PSBT input.\n * @param input The PSBT input to extract signatures from.\n * @returns An array of taproot signatures.\n */\nfunction extractTaprootSigs(input) {\n  const sigs = [];\n  if (input.tapKeySig) sigs.push(input.tapKeySig);\n  if (input.tapScriptSig)\n    sigs.push(...input.tapScriptSig.map(s => s.signature));\n  if (!sigs.length) {\n    const finalTapKeySig = getTapKeySigFromWithness(input.finalScriptWitness);\n    if (finalTapKeySig) sigs.push(finalTapKeySig);\n  }\n  return sigs;\n}\n/**\n * Gets the taproot signature from the witness.\n * @param finalScriptWitness The final script witness.\n * @returns The taproot signature, or undefined if not found.\n */\nfunction getTapKeySigFromWithness(finalScriptWitness) {\n  if (!finalScriptWitness) return;\n  const witness = finalScriptWitness.slice(2);\n  // todo: add schnorr signature validation\n  if (witness.length === 64 || witness.length === 65) return witness;\n}\n/**\n * Converts a binary tree to a BIP371 type list.\n * @param tree The binary tap tree.\n * @param leaves A list of tapleaves. Optional.\n * @param depth The current depth. Optional.\n * @returns A list of BIP 371 tapleaves.\n * @throws Throws an error if the taptree cannot be converted to a tapleaf list.\n */\nfunction _tapTreeToList(tree, leaves = [], depth = 0) {\n  if (depth > _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.MAX_TAPTREE_DEPTH) throw new Error('Max taptree depth exceeded.');\n  if (!tree) return [];\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTapleaf)(tree)) {\n    leaves.push({\n      depth,\n      leafVersion: tree.version || _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.LEAF_VERSION_TAPSCRIPT,\n      script: tree.output,\n    });\n    return leaves;\n  }\n  if (tree[0]) _tapTreeToList(tree[0], leaves, depth + 1);\n  if (tree[1]) _tapTreeToList(tree[1], leaves, depth + 1);\n  return leaves;\n}\n/**\n * Inserts the tapleaves into the taproot tree.\n * @param leaves The tapleaves to insert.\n * @returns The taproot tree.\n * @throws Throws an error if there is no room left to insert a tapleaf in the tree.\n */\nfunction instertLeavesInTree(leaves) {\n  let tree;\n  for (const leaf of leaves) {\n    tree = instertLeafInTree(leaf, tree);\n    if (!tree) throw new Error(`No room left to insert tapleaf in tree`);\n  }\n  return tree;\n}\n/**\n * Inserts a tapleaf into the taproot tree.\n * @param leaf The tapleaf to insert.\n * @param tree The taproot tree.\n * @param depth The current depth. Optional.\n * @returns The updated taproot tree.\n */\nfunction instertLeafInTree(leaf, tree, depth = 0) {\n  if (depth > _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.MAX_TAPTREE_DEPTH) throw new Error('Max taptree depth exceeded.');\n  if (leaf.depth === depth) {\n    if (!tree)\n      return {\n        output: leaf.script,\n        version: leaf.leafVersion,\n      };\n    return;\n  }\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTapleaf)(tree)) return;\n  const leftSide = instertLeafInTree(leaf, tree && tree[0], depth + 1);\n  if (leftSide) return [leftSide, tree && tree[1]];\n  const rightSide = instertLeafInTree(leaf, tree && tree[1], depth + 1);\n  if (rightSide) return [tree && tree[0], rightSide];\n}\n/**\n * Checks the input fields for mixed taproot and non-taproot fields.\n * @param inputData The original input data.\n * @param newInputData The new input data.\n * @param action The action being performed.\n * @throws Throws an error if the input fields are inconsistent.\n */\nfunction checkMixedTaprootAndNonTaprootInputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootInput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootInput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootInput(newInputData) &&\n    hasNonTaprootFields(newInputData); // todo: bad? use !===\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\n/**\n * Checks the output fields for mixed taproot and non-taproot fields.\n * @param inputData The original output data.\n * @param newInputData The new output data.\n * @param action The action being performed.\n * @throws Throws an error if the output fields are inconsistent.\n */\nfunction checkMixedTaprootAndNonTaprootOutputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootOutput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootOutput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootOutput(newInputData) &&\n    hasNonTaprootFields(newInputData);\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\n/**\n * Checks if the tap leaf is part of the tap tree for the given input data.\n * Throws an error if the tap leaf is not part of the tap tree.\n * @param inputData - The original PsbtInput data.\n * @param newInputData - The new PsbtInput data.\n * @param action - The action being performed.\n * @throws {Error} - If the tap leaf is not part of the tap tree.\n */\nfunction checkIfTapLeafInTree(inputData, newInputData, action) {\n  if (newInputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    const oldLeafsInTree = (inputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree || !oldLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  } else if (inputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, inputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  }\n}\n/**\n * Checks if a TapLeafScript is present in a Merkle tree.\n * @param tapLeaf The TapLeafScript to check.\n * @param merkleRoot The Merkle root of the tree. If not provided, the function assumes the TapLeafScript is present.\n * @returns A boolean indicating whether the TapLeafScript is present in the tree.\n */\nfunction isTapLeafInTree(tapLeaf, merkleRoot) {\n  if (!merkleRoot) return true;\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  const rootHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.rootHashFromPath)(tapLeaf.controlBlock, leafHash);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(rootHash, merkleRoot) === 0;\n}\n/**\n * Sorts the signatures in the input's tapScriptSig array based on their position in the tapLeaf script.\n *\n * @param input - The PsbtInput object.\n * @param tapLeaf - The TapLeafScript object.\n * @returns An array of sorted signatures as Buffers.\n */\nfunction sortSignatures(input, tapLeaf) {\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  return (\n    (input.tapScriptSig || [])\n      // .filter(tss => tss.leafHash.equals(leafHash))\n      .filter(tss => uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(tss.leafHash, leafHash) === 0)\n      .map(tss => addPubkeyPositionInScript(tapLeaf.script, tss))\n      .sort((t1, t2) => t2.positionInScript - t1.positionInScript)\n      .map(t => t.signature)\n  );\n}\n/**\n * Adds the position of a public key in a script to a TapScriptSig object.\n * @param script The script in which to find the position of the public key.\n * @param tss The TapScriptSig object to add the position to.\n * @returns A TapScriptSigWitPosition object with the added position.\n */\nfunction addPubkeyPositionInScript(script, tss) {\n  return Object.assign(\n    {\n      positionInScript: (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.pubkeyPositionInScript)(tss.pubkey, script),\n    },\n    tss,\n  );\n}\n/**\n * Find tapleaf by hash, or get the signed tapleaf with the shortest path.\n */\nfunction findTapLeafToFinalize(input, inputIndex, leafHashToFinalize) {\n  if (!input.tapScriptSig || !input.tapScriptSig.length)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. No tapleaf script signature provided.`,\n    );\n  const tapLeaf = (input.tapLeafScript || [])\n    .sort((a, b) => a.controlBlock.length - b.controlBlock.length)\n    .find(leaf =>\n      canFinalizeLeaf(leaf, input.tapScriptSig, leafHashToFinalize),\n    );\n  if (!tapLeaf)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. Signature for tapleaf script not found.`,\n    );\n  return tapLeaf;\n}\n/**\n * Determines whether a TapLeafScript can be finalized.\n *\n * @param leaf - The TapLeafScript to check.\n * @param tapScriptSig - The array of TapScriptSig objects.\n * @param hash - The optional hash to compare with the leaf hash.\n * @returns A boolean indicating whether the TapLeafScript can be finalized.\n */\nfunction canFinalizeLeaf(leaf, tapScriptSig, hash) {\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: leaf.script,\n    version: leaf.leafVersion,\n  });\n  const whiteListedHash = !hash || uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(leafHash, hash) === 0;\n  return (\n    whiteListedHash &&\n    tapScriptSig.find(tss => uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(tss.leafHash, leafHash) === 0) !==\n      undefined\n  );\n}\n/**\n * Checks if the given PsbtInput or PsbtOutput has non-taproot fields.\n * Non-taproot fields include redeemScript, witnessScript, and bip32Derivation.\n * @param io The PsbtInput or PsbtOutput to check.\n * @returns A boolean indicating whether the given input or output has non-taproot fields.\n */\nfunction hasNonTaprootFields(io) {\n  return (\n    io &&\n    !!(\n      io.redeemScript ||\n      io.witnessScript ||\n      (io.bip32Derivation && io.bip32Derivation.length)\n    )\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkInputForSig: () => (/* binding */ checkInputForSig),\n/* harmony export */   isP2MS: () => (/* binding */ isP2MS),\n/* harmony export */   isP2PK: () => (/* binding */ isP2PK),\n/* harmony export */   isP2PKH: () => (/* binding */ isP2PKH),\n/* harmony export */   isP2SHScript: () => (/* binding */ isP2SHScript),\n/* harmony export */   isP2TR: () => (/* binding */ isP2TR),\n/* harmony export */   isP2WPKH: () => (/* binding */ isP2WPKH),\n/* harmony export */   isP2WSHScript: () => (/* binding */ isP2WSHScript),\n/* harmony export */   pubkeyInScript: () => (/* binding */ pubkeyInScript),\n/* harmony export */   pubkeyPositionInScript: () => (/* binding */ pubkeyPositionInScript),\n/* harmony export */   signatureBlocksAction: () => (/* binding */ signatureBlocksAction),\n/* harmony export */   witnessStackToScriptWitness: () => (/* binding */ witnessStackToScriptWitness)\n/* harmony export */ });\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varuint-bitcoin */ \"(ssr)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transaction.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../payments/index.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n\n\n\n\n/**\n * Checks if a given payment factory can generate a payment script from a given script.\n * @param payment The payment factory to check.\n * @returns A function that takes a script and returns a boolean indicating whether the payment factory can generate a payment script from the script.\n */\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nconst isP2MS = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2ms);\nconst isP2PK = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2pk);\nconst isP2PKH = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2pkh);\nconst isP2WPKH = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2wpkh);\nconst isP2WSHScript = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2wsh);\nconst isP2SHScript = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2sh);\nconst isP2TR = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2tr);\n/**\n * Converts a witness stack to a script witness.\n * @param witness The witness stack to convert.\n * @returns The script witness as a Buffer.\n */\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = new Uint8Array(0);\n  function writeSlice(slice) {\n    buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([buffer, slice]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encodingLength(i);\n    buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([buffer, new Uint8Array(varintLen)]);\n    varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\n/**\n * Finds the position of a public key in a script.\n * @param pubkey The public key to search for.\n * @param script The script to search in.\n * @returns The index of the public key in the script, or -1 if not found.\n * @throws {Error} If there is an unknown script error.\n */\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0,_crypto_js__WEBPACK_IMPORTED_MODULE_3__.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkey, element) === 0 ||\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkeyHash, element) === 0 ||\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkeyXOnly, element) === 0\n    );\n  });\n}\n/**\n * Checks if a public key is present in a script.\n * @param pubkey The public key to check.\n * @param script The script to search in.\n * @returns A boolean indicating whether the public key is present in the script.\n */\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\n/**\n * Checks if an input contains a signature for a specific action.\n * @param input - The input to check.\n * @param action - The action to check for.\n * @returns A boolean indicating whether the input contains a signature for the specified action.\n */\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, _script_js__WEBPACK_IMPORTED_MODULE_1__.signature.decode, action),\n  );\n}\n/**\n * Determines if a given action is allowed for a signature block.\n * @param signature - The signature block.\n * @param signatureDecodeFn - The function used to decode the signature.\n * @param action - The action to be checked.\n * @returns True if the action is allowed, false otherwise.\n */\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay = hashType & _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_ALL:\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_SINGLE:\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\n/**\n * Extracts the signatures from a PsbtInput object.\n * If the input has partial signatures, it returns an array of the signatures.\n * If the input does not have partial signatures, it checks if it has a finalScriptSig or finalScriptWitness.\n * If it does, it extracts the signatures from the final scripts and returns them.\n * If none of the above conditions are met, it returns an empty array.\n *\n * @param input - The PsbtInput object from which to extract the signatures.\n * @returns An array of signatures extracted from the PsbtInput object.\n */\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\n/**\n * Retrieves the partial signatures (Psigs) from the input's final scripts.\n * Psigs are extracted from both the final scriptSig and final scriptWitness of the input.\n * Only canonical script signatures are considered.\n *\n * @param input - The PsbtInput object representing the input.\n * @returns An array of PartialSig objects containing the extracted Psigs.\n */\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return (\n        item instanceof Uint8Array && _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(item)\n      );\n    })\n    .map(sig => ({ signature: sig }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ops.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n\n/**\n * Calculates the encoding length of a number used for push data in Bitcoin transactions.\n * @param i The number to calculate the encoding length for.\n * @returns The encoding length of the number.\n */\nfunction encodingLength(i) {\n  return i < _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\n/**\n * Encodes a number into a buffer using a variable-length encoding scheme.\n * The encoded buffer is written starting at the specified offset.\n * Returns the size of the encoded buffer.\n *\n * @param buffer - The buffer to write the encoded data into.\n * @param num - The number to encode.\n * @param offset - The offset at which to start writing the encoded buffer.\n * @returns The size of the encoded buffer.\n */\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, num);\n    // 8 bit\n  } else if (size === 2) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset + 1, num);\n    // 16 bit\n  } else if (size === 3) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA2);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt16(buffer, offset + 1, num, 'LE');\n    // 32 bit\n  } else {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA4);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(buffer, offset + 1, num, 'LE');\n  }\n  return size;\n}\n/**\n * Decodes a buffer and returns information about the opcode, number, and size.\n * @param buffer - The buffer to decode.\n * @param offset - The offset within the buffer to start decoding.\n * @returns An object containing the opcode, number, and size, or null if decoding fails.\n */\nfunction decode(buffer, offset) {\n  const opcode = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt8(buffer, offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt8(buffer, offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt16(buffer, offset + 1, 'LE');\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt32(buffer, offset + 1, 'LE');\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wdXNoX2RhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0I7QUFDVztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhLHdDQUFHO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUksd0RBQWdCO0FBQ3BCO0FBQ0EsSUFBSTtBQUNKLElBQUksd0RBQWdCLGlCQUFpQix3Q0FBRztBQUN4QyxJQUFJLHdEQUFnQjtBQUNwQjtBQUNBLElBQUk7QUFDSixJQUFJLHdEQUFnQixpQkFBaUIsd0NBQUc7QUFDeEMsSUFBSSx5REFBaUI7QUFDckI7QUFDQSxJQUFJO0FBQ0osSUFBSSx3REFBZ0IsaUJBQWlCLHdDQUFHO0FBQ3hDLElBQUkseURBQWlCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLHVEQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0NBQUc7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsSUFBSSxvQkFBb0Isd0NBQUc7QUFDM0I7QUFDQSxVQUFVLHVEQUFlO0FBQ3pCO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQix3Q0FBRztBQUMzQjtBQUNBLFVBQVUsd0RBQWdCO0FBQzFCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxtQkFBbUIsd0NBQUc7QUFDdEIsVUFBVSx3REFBZ0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vcHVzaF9kYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9QUyB9IGZyb20gJy4vb3BzLmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBlbmNvZGluZyBsZW5ndGggb2YgYSBudW1iZXIgdXNlZCBmb3IgcHVzaCBkYXRhIGluIEJpdGNvaW4gdHJhbnNhY3Rpb25zLlxuICogQHBhcmFtIGkgVGhlIG51bWJlciB0byBjYWxjdWxhdGUgdGhlIGVuY29kaW5nIGxlbmd0aCBmb3IuXG4gKiBAcmV0dXJucyBUaGUgZW5jb2RpbmcgbGVuZ3RoIG9mIHRoZSBudW1iZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGluZ0xlbmd0aChpKSB7XG4gIHJldHVybiBpIDwgT1BTLk9QX1BVU0hEQVRBMSA/IDEgOiBpIDw9IDB4ZmYgPyAyIDogaSA8PSAweGZmZmYgPyAzIDogNTtcbn1cbi8qKlxuICogRW5jb2RlcyBhIG51bWJlciBpbnRvIGEgYnVmZmVyIHVzaW5nIGEgdmFyaWFibGUtbGVuZ3RoIGVuY29kaW5nIHNjaGVtZS5cbiAqIFRoZSBlbmNvZGVkIGJ1ZmZlciBpcyB3cml0dGVuIHN0YXJ0aW5nIGF0IHRoZSBzcGVjaWZpZWQgb2Zmc2V0LlxuICogUmV0dXJucyB0aGUgc2l6ZSBvZiB0aGUgZW5jb2RlZCBidWZmZXIuXG4gKlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgdG8gd3JpdGUgdGhlIGVuY29kZWQgZGF0YSBpbnRvLlxuICogQHBhcmFtIG51bSAtIFRoZSBudW1iZXIgdG8gZW5jb2RlLlxuICogQHBhcmFtIG9mZnNldCAtIFRoZSBvZmZzZXQgYXQgd2hpY2ggdG8gc3RhcnQgd3JpdGluZyB0aGUgZW5jb2RlZCBidWZmZXIuXG4gKiBAcmV0dXJucyBUaGUgc2l6ZSBvZiB0aGUgZW5jb2RlZCBidWZmZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoYnVmZmVyLCBudW0sIG9mZnNldCkge1xuICBjb25zdCBzaXplID0gZW5jb2RpbmdMZW5ndGgobnVtKTtcbiAgLy8gfjYgYml0XG4gIGlmIChzaXplID09PSAxKSB7XG4gICAgdG9vbHMud3JpdGVVSW50OChidWZmZXIsIG9mZnNldCwgbnVtKTtcbiAgICAvLyA4IGJpdFxuICB9IGVsc2UgaWYgKHNpemUgPT09IDIpIHtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgb2Zmc2V0LCBPUFMuT1BfUFVTSERBVEExKTtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgb2Zmc2V0ICsgMSwgbnVtKTtcbiAgICAvLyAxNiBiaXRcbiAgfSBlbHNlIGlmIChzaXplID09PSAzKSB7XG4gICAgdG9vbHMud3JpdGVVSW50OChidWZmZXIsIG9mZnNldCwgT1BTLk9QX1BVU0hEQVRBMik7XG4gICAgdG9vbHMud3JpdGVVSW50MTYoYnVmZmVyLCBvZmZzZXQgKyAxLCBudW0sICdMRScpO1xuICAgIC8vIDMyIGJpdFxuICB9IGVsc2Uge1xuICAgIHRvb2xzLndyaXRlVUludDgoYnVmZmVyLCBvZmZzZXQsIE9QUy5PUF9QVVNIREFUQTQpO1xuICAgIHRvb2xzLndyaXRlVUludDMyKGJ1ZmZlciwgb2Zmc2V0ICsgMSwgbnVtLCAnTEUnKTtcbiAgfVxuICByZXR1cm4gc2l6ZTtcbn1cbi8qKlxuICogRGVjb2RlcyBhIGJ1ZmZlciBhbmQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgb3Bjb2RlLCBudW1iZXIsIGFuZCBzaXplLlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgdG8gZGVjb2RlLlxuICogQHBhcmFtIG9mZnNldCAtIFRoZSBvZmZzZXQgd2l0aGluIHRoZSBidWZmZXIgdG8gc3RhcnQgZGVjb2RpbmcuXG4gKiBAcmV0dXJucyBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgb3Bjb2RlLCBudW1iZXIsIGFuZCBzaXplLCBvciBudWxsIGlmIGRlY29kaW5nIGZhaWxzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KSB7XG4gIGNvbnN0IG9wY29kZSA9IHRvb2xzLnJlYWRVSW50OChidWZmZXIsIG9mZnNldCk7XG4gIGxldCBudW07XG4gIGxldCBzaXplO1xuICAvLyB+NiBiaXRcbiAgaWYgKG9wY29kZSA8IE9QUy5PUF9QVVNIREFUQTEpIHtcbiAgICBudW0gPSBvcGNvZGU7XG4gICAgc2l6ZSA9IDE7XG4gICAgLy8gOCBiaXRcbiAgfSBlbHNlIGlmIChvcGNvZGUgPT09IE9QUy5PUF9QVVNIREFUQTEpIHtcbiAgICBpZiAob2Zmc2V0ICsgMiA+IGJ1ZmZlci5sZW5ndGgpIHJldHVybiBudWxsO1xuICAgIG51bSA9IHRvb2xzLnJlYWRVSW50OChidWZmZXIsIG9mZnNldCArIDEpO1xuICAgIHNpemUgPSAyO1xuICAgIC8vIDE2IGJpdFxuICB9IGVsc2UgaWYgKG9wY29kZSA9PT0gT1BTLk9QX1BVU0hEQVRBMikge1xuICAgIGlmIChvZmZzZXQgKyAzID4gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIG51bGw7XG4gICAgbnVtID0gdG9vbHMucmVhZFVJbnQxNihidWZmZXIsIG9mZnNldCArIDEsICdMRScpO1xuICAgIHNpemUgPSAzO1xuICAgIC8vIDMyIGJpdFxuICB9IGVsc2Uge1xuICAgIGlmIChvZmZzZXQgKyA1ID4gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIG51bGw7XG4gICAgaWYgKG9wY29kZSAhPT0gT1BTLk9QX1BVU0hEQVRBNCkgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIG9wY29kZScpO1xuICAgIG51bSA9IHRvb2xzLnJlYWRVSW50MzIoYnVmZmVyLCBvZmZzZXQgKyAxLCAnTEUnKTtcbiAgICBzaXplID0gNTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG9wY29kZSxcbiAgICBudW1iZXI6IG51bSxcbiAgICBzaXplLFxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPS: () => (/* reexport safe */ _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS),\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   countNonPushOnlyOPs: () => (/* binding */ countNonPushOnlyOPs),\n/* harmony export */   decompile: () => (/* binding */ decompile),\n/* harmony export */   fromASM: () => (/* binding */ fromASM),\n/* harmony export */   isCanonicalPubKey: () => (/* binding */ isCanonicalPubKey),\n/* harmony export */   isCanonicalScriptSignature: () => (/* binding */ isCanonicalScriptSignature),\n/* harmony export */   isDefinedHashType: () => (/* binding */ isDefinedHashType),\n/* harmony export */   isPushOnly: () => (/* binding */ isPushOnly),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   signature: () => (/* binding */ signature),\n/* harmony export */   toASM: () => (/* binding */ toASM),\n/* harmony export */   toStack: () => (/* binding */ toStack)\n/* harmony export */ });\n/* harmony import */ var _bip66_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bip66.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\");\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ops.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var _push_data_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./push_data.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js\");\n/* harmony import */ var _script_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./script_number.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js\");\n/* harmony import */ var _script_signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./script_signature.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/**\n * Script tools, including decompile, compile, toASM, fromASM, toStack, isCanonicalPubKey, isCanonicalScriptSignature\n * @packageDocumentation\n */\n\n\n\n\n\n\n\n\nconst OP_INT_BASE = _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_RESERVED; // OP_1 - 1\n\nconst StackSchema = valibot__WEBPACK_IMPORTED_MODULE_7__.array(valibot__WEBPACK_IMPORTED_MODULE_7__.union([valibot__WEBPACK_IMPORTED_MODULE_7__.instance(Uint8Array), valibot__WEBPACK_IMPORTED_MODULE_7__.number()]));\nfunction isOPInt(value) {\n  return (\n    valibot__WEBPACK_IMPORTED_MODULE_7__.is(valibot__WEBPACK_IMPORTED_MODULE_7__.number(), value) &&\n    (value === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0 ||\n      (value >= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1 && value <= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_16) ||\n      value === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(_types_js__WEBPACK_IMPORTED_MODULE_5__.BufferSchema, value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(valibot__WEBPACK_IMPORTED_MODULE_7__.pipe(valibot__WEBPACK_IMPORTED_MODULE_7__.any(), valibot__WEBPACK_IMPORTED_MODULE_7__.everyItem(isPushOnlyChunk)), value);\n}\nfunction countNonPushOnlyOPs(value) {\n  return value.length - value.filter(isPushOnlyChunk).length;\n}\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return buf instanceof Uint8Array;\n}\nfunction chunksIsArray(buf) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(StackSchema, buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return buf instanceof Uint8Array;\n}\n/**\n * Compiles an array of chunks into a Buffer.\n *\n * @param chunks - The array of chunks to compile.\n * @returns The compiled Buffer.\n * @throws Error if the compilation fails.\n */\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(StackSchema, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + _push_data_js__WEBPACK_IMPORTED_MODULE_2__.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = new Uint8Array(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(buffer, offset, opcode);\n        offset += 1;\n        return;\n      }\n      offset += _push_data_js__WEBPACK_IMPORTED_MODULE_2__.encode(buffer, chunk.length, offset);\n      buffer.set(chunk, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(buffer, offset, chunk);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(_types_js__WEBPACK_IMPORTED_MODULE_5__.BufferSchema, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0 && opcode <= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_PUSHDATA4) {\n      const d = _push_data_js__WEBPACK_IMPORTED_MODULE_2__.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\n/**\n * Converts the given chunks into an ASM (Assembly) string representation.\n * If the chunks parameter is a Buffer, it will be decompiled into a Stack before conversion.\n * @param chunks - The chunks to convert into ASM.\n * @returns The ASM string representation of the chunks.\n */\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  if (!chunks) {\n    throw new Error('Could not convert invalid chunks to ASM');\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.toHex(chunk);\n        chunk = op;\n      }\n      // opcode!\n      return _ops_js__WEBPACK_IMPORTED_MODULE_1__.REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\n/**\n * Converts an ASM string to a Buffer.\n * @param asm The ASM string to convert.\n * @returns The converted Buffer.\n */\nfunction fromASM(asm) {\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.string(), asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (_ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS[chunkStr] !== undefined) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS[chunkStr];\n      valibot__WEBPACK_IMPORTED_MODULE_7__.parse(_types_js__WEBPACK_IMPORTED_MODULE_5__.HexSchema, chunkStr);\n      // data!\n      return uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.fromHex(chunkStr);\n    }),\n  );\n}\n/**\n * Converts the given chunks into a stack of buffers.\n *\n * @param chunks - The chunks to convert.\n * @returns The stack of buffers.\n */\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.custom(isPushOnly), chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0) return new Uint8Array(0);\n    return _script_number_js__WEBPACK_IMPORTED_MODULE_3__.encode(op - OP_INT_BASE);\n  });\n}\nfunction isCanonicalPubKey(buffer) {\n  return _types_js__WEBPACK_IMPORTED_MODULE_5__.isPoint(buffer);\n}\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nfunction isCanonicalScriptSignature(buffer) {\n  if (!(buffer instanceof Uint8Array)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return _bip66_js__WEBPACK_IMPORTED_MODULE_0__.check(buffer.slice(0, -1));\n}\nconst number = _script_number_js__WEBPACK_IMPORTED_MODULE_3__;\nconst signature = _script_signature_js__WEBPACK_IMPORTED_MODULE_4__;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n\n/**\n * Decodes a script number from a buffer.\n *\n * @param buffer - The buffer containing the script number.\n * @param maxLength - The maximum length of the script number. Defaults to 4.\n * @param minimal - Whether the script number should be minimal. Defaults to true.\n * @returns The decoded script number.\n * @throws {TypeError} If the script number overflows the maximum length.\n * @throws {Error} If the script number is not minimally encoded when minimal is true.\n */\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt32(buffer, 0, 'LE');\n    const b = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt8(buffer, 4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n      ? 4\n      : i > 0x7fff\n        ? 3\n        : i > 0x7f\n          ? 2\n          : i > 0x00\n            ? 1\n            : 0;\n}\n/**\n * Encodes a number into a Uint8Array using a specific format.\n *\n * @param _number - The number to encode.\n * @returns The encoded number as a Uint8Array.\n */\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = new Uint8Array(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt8(buffer, i, value & 0xff);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt8(buffer, size - 1, negative ? 0x80 : 0x00);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9zY3JpcHRfbnVtYmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QixZQUFZLE9BQU87QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3REFBZ0I7QUFDOUIsY0FBYyx1REFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUIsSUFBSSx3REFBZ0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsSUFBSSx3REFBZ0I7QUFDcEIsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9zY3JpcHRfbnVtYmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuLyoqXG4gKiBEZWNvZGVzIGEgc2NyaXB0IG51bWJlciBmcm9tIGEgYnVmZmVyLlxuICpcbiAqIEBwYXJhbSBidWZmZXIgLSBUaGUgYnVmZmVyIGNvbnRhaW5pbmcgdGhlIHNjcmlwdCBudW1iZXIuXG4gKiBAcGFyYW0gbWF4TGVuZ3RoIC0gVGhlIG1heGltdW0gbGVuZ3RoIG9mIHRoZSBzY3JpcHQgbnVtYmVyLiBEZWZhdWx0cyB0byA0LlxuICogQHBhcmFtIG1pbmltYWwgLSBXaGV0aGVyIHRoZSBzY3JpcHQgbnVtYmVyIHNob3VsZCBiZSBtaW5pbWFsLiBEZWZhdWx0cyB0byB0cnVlLlxuICogQHJldHVybnMgVGhlIGRlY29kZWQgc2NyaXB0IG51bWJlci5cbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gSWYgdGhlIHNjcmlwdCBudW1iZXIgb3ZlcmZsb3dzIHRoZSBtYXhpbXVtIGxlbmd0aC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgc2NyaXB0IG51bWJlciBpcyBub3QgbWluaW1hbGx5IGVuY29kZWQgd2hlbiBtaW5pbWFsIGlzIHRydWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoYnVmZmVyLCBtYXhMZW5ndGgsIG1pbmltYWwpIHtcbiAgbWF4TGVuZ3RoID0gbWF4TGVuZ3RoIHx8IDQ7XG4gIG1pbmltYWwgPSBtaW5pbWFsID09PSB1bmRlZmluZWQgPyB0cnVlIDogbWluaW1hbDtcbiAgY29uc3QgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aDtcbiAgaWYgKGxlbmd0aCA9PT0gMCkgcmV0dXJuIDA7XG4gIGlmIChsZW5ndGggPiBtYXhMZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NjcmlwdCBudW1iZXIgb3ZlcmZsb3cnKTtcbiAgaWYgKG1pbmltYWwpIHtcbiAgICBpZiAoKGJ1ZmZlcltsZW5ndGggLSAxXSAmIDB4N2YpID09PSAwKSB7XG4gICAgICBpZiAobGVuZ3RoIDw9IDEgfHwgKGJ1ZmZlcltsZW5ndGggLSAyXSAmIDB4ODApID09PSAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vbi1taW5pbWFsbHkgZW5jb2RlZCBzY3JpcHQgbnVtYmVyJyk7XG4gICAgfVxuICB9XG4gIC8vIDQwLWJpdFxuICBpZiAobGVuZ3RoID09PSA1KSB7XG4gICAgY29uc3QgYSA9IHRvb2xzLnJlYWRVSW50MzIoYnVmZmVyLCAwLCAnTEUnKTtcbiAgICBjb25zdCBiID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgNCk7XG4gICAgaWYgKGIgJiAweDgwKSByZXR1cm4gLSgoYiAmIH4weDgwKSAqIDB4MTAwMDAwMDAwICsgYSk7XG4gICAgcmV0dXJuIGIgKiAweDEwMDAwMDAwMCArIGE7XG4gIH1cbiAgLy8gMzItYml0IC8gMjQtYml0IC8gMTYtYml0IC8gOC1iaXRcbiAgbGV0IHJlc3VsdCA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICByZXN1bHQgfD0gYnVmZmVyW2ldIDw8ICg4ICogaSk7XG4gIH1cbiAgaWYgKGJ1ZmZlcltsZW5ndGggLSAxXSAmIDB4ODApXG4gICAgcmV0dXJuIC0ocmVzdWx0ICYgfigweDgwIDw8ICg4ICogKGxlbmd0aCAtIDEpKSkpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gc2NyaXB0TnVtU2l6ZShpKSB7XG4gIHJldHVybiBpID4gMHg3ZmZmZmZmZlxuICAgID8gNVxuICAgIDogaSA+IDB4N2ZmZmZmXG4gICAgICA/IDRcbiAgICAgIDogaSA+IDB4N2ZmZlxuICAgICAgICA/IDNcbiAgICAgICAgOiBpID4gMHg3ZlxuICAgICAgICAgID8gMlxuICAgICAgICAgIDogaSA+IDB4MDBcbiAgICAgICAgICAgID8gMVxuICAgICAgICAgICAgOiAwO1xufVxuLyoqXG4gKiBFbmNvZGVzIGEgbnVtYmVyIGludG8gYSBVaW50OEFycmF5IHVzaW5nIGEgc3BlY2lmaWMgZm9ybWF0LlxuICpcbiAqIEBwYXJhbSBfbnVtYmVyIC0gVGhlIG51bWJlciB0byBlbmNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZW5jb2RlZCBudW1iZXIgYXMgYSBVaW50OEFycmF5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKF9udW1iZXIpIHtcbiAgbGV0IHZhbHVlID0gTWF0aC5hYnMoX251bWJlcik7XG4gIGNvbnN0IHNpemUgPSBzY3JpcHROdW1TaXplKHZhbHVlKTtcbiAgY29uc3QgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gIGNvbnN0IG5lZ2F0aXZlID0gX251bWJlciA8IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgKytpKSB7XG4gICAgdG9vbHMud3JpdGVVSW50OChidWZmZXIsIGksIHZhbHVlICYgMHhmZik7XG4gICAgdmFsdWUgPj49IDg7XG4gIH1cbiAgaWYgKGJ1ZmZlcltzaXplIC0gMV0gJiAweDgwKSB7XG4gICAgdG9vbHMud3JpdGVVSW50OChidWZmZXIsIHNpemUgLSAxLCBuZWdhdGl2ZSA/IDB4ODAgOiAweDAwKTtcbiAgfSBlbHNlIGlmIChuZWdhdGl2ZSkge1xuICAgIGJ1ZmZlcltzaXplIC0gMV0gfD0gMHg4MDtcbiAgfVxuICByZXR1cm4gYnVmZmVyO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _bip66_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bip66.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n\n\n\n\n\nconst ZERO = new Uint8Array(1);\n/**\n * Converts a buffer to a DER-encoded buffer.\n * @param x - The buffer to be converted.\n * @returns The DER-encoded buffer.\n */\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([ZERO, x]);\n  return x;\n}\n/**\n * Converts a DER-encoded signature to a buffer.\n * If the first byte of the input buffer is 0x00, it is skipped.\n * The resulting buffer is 32 bytes long, filled with zeros if necessary.\n * @param x - The DER-encoded signature.\n * @returns The converted buffer.\n */\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = new Uint8Array(32);\n  const bstart = Math.max(0, 32 - x.length);\n  buffer.set(x, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\n/**\n * Decodes a buffer into a ScriptSignature object.\n * @param buffer - The buffer to decode.\n * @returns The decoded ScriptSignature object.\n * @throws Error if the hashType is invalid.\n */\nfunction decode(buffer) {\n  const hashType = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt8(buffer, buffer.length - 1);\n  if (!(0,_script_js__WEBPACK_IMPORTED_MODULE_1__.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const decoded = _bip66_js__WEBPACK_IMPORTED_MODULE_0__.decode(buffer.subarray(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([r, s]);\n  return { signature, hashType };\n}\n/**\n * Encodes a signature and hash type into a buffer.\n * @param signature - The signature to encode.\n * @param hashType - The hash type to encode.\n * @returns The encoded buffer.\n * @throws Error if the hashType is invalid.\n */\nfunction encode(signature, hashType) {\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n      signature: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(64),\n      hashType: _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt8Schema,\n    }),\n    { signature, hashType },\n  );\n  if (!(0,_script_js__WEBPACK_IMPORTED_MODULE_1__.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const hashTypeBuffer = new Uint8Array(1);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt8(hashTypeBuffer, 0, hashType);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([_bip66_js__WEBPACK_IMPORTED_MODULE_0__.encode(r, s), hashTypeBuffer]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9zY3JpcHRfc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBb0M7QUFDWTtBQUNuQjtBQUNhO0FBQ3FCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0RBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLHVEQUFlO0FBQ2xDLE9BQU8sNkRBQWlCO0FBQ3hCO0FBQ0E7QUFDQSxrQkFBa0IsNkNBQVk7QUFDOUI7QUFDQTtBQUNBLG9CQUFvQixvREFBWTtBQUNoQyxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsRUFBRSwwQ0FBTztBQUNULElBQUksMkNBQVE7QUFDWixpQkFBaUIsK0RBQW9CO0FBQ3JDLGdCQUFnQixrREFBVztBQUMzQixLQUFLO0FBQ0wsTUFBTSxxQkFBcUI7QUFDM0I7QUFDQSxPQUFPLDZEQUFpQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFnQjtBQUNsQjtBQUNBO0FBQ0EsU0FBUyxvREFBWSxFQUFFLDZDQUFZO0FBQ25DIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9zY3JpcHRfc2lnbmF0dXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJpcDY2IGZyb20gJy4vYmlwNjYuanMnO1xuaW1wb3J0IHsgaXNEZWZpbmVkSGFzaFR5cGUgfSBmcm9tICcuL3NjcmlwdC5qcyc7XG5pbXBvcnQgKiBhcyB2IGZyb20gJ3ZhbGlib3QnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5pbXBvcnQgeyBOQnVmZmVyU2NoZW1hRmFjdG9yeSwgVUludDhTY2hlbWEgfSBmcm9tICcuL3R5cGVzLmpzJztcbmNvbnN0IFpFUk8gPSBuZXcgVWludDhBcnJheSgxKTtcbi8qKlxuICogQ29udmVydHMgYSBidWZmZXIgdG8gYSBERVItZW5jb2RlZCBidWZmZXIuXG4gKiBAcGFyYW0geCAtIFRoZSBidWZmZXIgdG8gYmUgY29udmVydGVkLlxuICogQHJldHVybnMgVGhlIERFUi1lbmNvZGVkIGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gdG9ERVIoeCkge1xuICBsZXQgaSA9IDA7XG4gIHdoaWxlICh4W2ldID09PSAwKSArK2k7XG4gIGlmIChpID09PSB4Lmxlbmd0aCkgcmV0dXJuIFpFUk87XG4gIHggPSB4LnNsaWNlKGkpO1xuICBpZiAoeFswXSAmIDB4ODApIHJldHVybiB0b29scy5jb25jYXQoW1pFUk8sIHhdKTtcbiAgcmV0dXJuIHg7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgREVSLWVuY29kZWQgc2lnbmF0dXJlIHRvIGEgYnVmZmVyLlxuICogSWYgdGhlIGZpcnN0IGJ5dGUgb2YgdGhlIGlucHV0IGJ1ZmZlciBpcyAweDAwLCBpdCBpcyBza2lwcGVkLlxuICogVGhlIHJlc3VsdGluZyBidWZmZXIgaXMgMzIgYnl0ZXMgbG9uZywgZmlsbGVkIHdpdGggemVyb3MgaWYgbmVjZXNzYXJ5LlxuICogQHBhcmFtIHggLSBUaGUgREVSLWVuY29kZWQgc2lnbmF0dXJlLlxuICogQHJldHVybnMgVGhlIGNvbnZlcnRlZCBidWZmZXIuXG4gKi9cbmZ1bmN0aW9uIGZyb21ERVIoeCkge1xuICBpZiAoeFswXSA9PT0gMHgwMCkgeCA9IHguc2xpY2UoMSk7XG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KDMyKTtcbiAgY29uc3QgYnN0YXJ0ID0gTWF0aC5tYXgoMCwgMzIgLSB4Lmxlbmd0aCk7XG4gIGJ1ZmZlci5zZXQoeCwgYnN0YXJ0KTtcbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbi8vIEJJUDYyOiAxIGJ5dGUgaGFzaFR5cGUgZmxhZyAob25seSAweDAxLCAweDAyLCAweDAzLCAweDgxLCAweDgyIGFuZCAweDgzIGFyZSBhbGxvd2VkKVxuLyoqXG4gKiBEZWNvZGVzIGEgYnVmZmVyIGludG8gYSBTY3JpcHRTaWduYXR1cmUgb2JqZWN0LlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgdG8gZGVjb2RlLlxuICogQHJldHVybnMgVGhlIGRlY29kZWQgU2NyaXB0U2lnbmF0dXJlIG9iamVjdC5cbiAqIEB0aHJvd3MgRXJyb3IgaWYgdGhlIGhhc2hUeXBlIGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoYnVmZmVyKSB7XG4gIGNvbnN0IGhhc2hUeXBlID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgYnVmZmVyLmxlbmd0aCAtIDEpO1xuICBpZiAoIWlzRGVmaW5lZEhhc2hUeXBlKGhhc2hUeXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBoYXNoVHlwZSAnICsgaGFzaFR5cGUpO1xuICB9XG4gIGNvbnN0IGRlY29kZWQgPSBiaXA2Ni5kZWNvZGUoYnVmZmVyLnN1YmFycmF5KDAsIC0xKSk7XG4gIGNvbnN0IHIgPSBmcm9tREVSKGRlY29kZWQucik7XG4gIGNvbnN0IHMgPSBmcm9tREVSKGRlY29kZWQucyk7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IHRvb2xzLmNvbmNhdChbciwgc10pO1xuICByZXR1cm4geyBzaWduYXR1cmUsIGhhc2hUeXBlIH07XG59XG4vKipcbiAqIEVuY29kZXMgYSBzaWduYXR1cmUgYW5kIGhhc2ggdHlwZSBpbnRvIGEgYnVmZmVyLlxuICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBzaWduYXR1cmUgdG8gZW5jb2RlLlxuICogQHBhcmFtIGhhc2hUeXBlIC0gVGhlIGhhc2ggdHlwZSB0byBlbmNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZW5jb2RlZCBidWZmZXIuXG4gKiBAdGhyb3dzIEVycm9yIGlmIHRoZSBoYXNoVHlwZSBpcyBpbnZhbGlkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHNpZ25hdHVyZSwgaGFzaFR5cGUpIHtcbiAgdi5wYXJzZShcbiAgICB2Lm9iamVjdCh7XG4gICAgICBzaWduYXR1cmU6IE5CdWZmZXJTY2hlbWFGYWN0b3J5KDY0KSxcbiAgICAgIGhhc2hUeXBlOiBVSW50OFNjaGVtYSxcbiAgICB9KSxcbiAgICB7IHNpZ25hdHVyZSwgaGFzaFR5cGUgfSxcbiAgKTtcbiAgaWYgKCFpc0RlZmluZWRIYXNoVHlwZShoYXNoVHlwZSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaGFzaFR5cGUgJyArIGhhc2hUeXBlKTtcbiAgfVxuICBjb25zdCBoYXNoVHlwZUJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KDEpO1xuICB0b29scy53cml0ZVVJbnQ4KGhhc2hUeXBlQnVmZmVyLCAwLCBoYXNoVHlwZSk7XG4gIGNvbnN0IHIgPSB0b0RFUihzaWduYXR1cmUuc2xpY2UoMCwgMzIpKTtcbiAgY29uc3QgcyA9IHRvREVSKHNpZ25hdHVyZS5zbGljZSgzMiwgNjQpKTtcbiAgcmV0dXJuIHRvb2xzLmNvbmNhdChbYmlwNjYuZW5jb2RlKHIsIHMpLCBoYXNoVHlwZUJ1ZmZlcl0pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bufferutils.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./script.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_BUFFER = new Uint8Array(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n);\nconst ONE = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n);\nconst VALUE_UINT64_MAX = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex('ffffffffffffffff');\nconst BLANK_OUTPUT = {\n  script: EMPTY_BUFFER,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\n/**\n * Represents a Bitcoin transaction.\n */\nclass Transaction {\n  static DEFAULT_SEQUENCE = 0xffffffff;\n  static SIGHASH_DEFAULT = 0x00;\n  static SIGHASH_ALL = 0x01;\n  static SIGHASH_NONE = 0x02;\n  static SIGHASH_SINGLE = 0x03;\n  static SIGHASH_ANYONECANPAY = 0x80;\n  static SIGHASH_OUTPUT_MASK = 0x03;\n  static SIGHASH_INPUT_MASK = 0x80;\n  static ADVANCED_TRANSACTION_MARKER = 0x00;\n  static ADVANCED_TRANSACTION_FLAG = 0x01;\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(hex), false);\n  }\n  static isCoinbaseHash(buffer) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(_types_js__WEBPACK_IMPORTED_MODULE_3__.Hash256bitSchema, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  version = 1;\n  locktime = 0;\n  ins = [];\n  outs = [];\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.Hash256bitSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        valibot__WEBPACK_IMPORTED_MODULE_5__.nullable(valibot__WEBPACK_IMPORTED_MODULE_5__.optional(_types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema)),\n        valibot__WEBPACK_IMPORTED_MODULE_5__.nullable(valibot__WEBPACK_IMPORTED_MODULE_5__.optional(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema)),\n      ]),\n      [hash, index, sequence, scriptSig],\n    );\n    if (sequence === undefined || sequence === null) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_BUFFER,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema]), [\n      scriptPubKey,\n      value,\n    ]);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.ins.length) +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema, _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema, valibot__WEBPACK_IMPORTED_MODULE_5__.number()]), [\n      inIndex,\n      prevOutScript,\n      hashType,\n    ]);\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(\n      _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(prevOutScript).filter(x => {\n        return x !== _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_BUFFER;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = new Uint8Array(txTmp.byteLength(false) + 4);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.writeInt32(buffer, buffer.length - 4, hashType, 'LE');\n    txTmp.__toBuffer(buffer, 0, false);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(buffer);\n  }\n  hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n        valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema),\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n      ]),\n      [inIndex, prevOutScripts, values, hashType],\n    );\n    if (\n      values.length !== this.ins.length ||\n      prevOutScripts.length !== this.ins.length\n    ) {\n      throw new Error('Must supply prevout script and value for all inputs');\n    }\n    const outputType =\n      hashType === Transaction.SIGHASH_DEFAULT\n        ? Transaction.SIGHASH_ALL\n        : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n    const inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n    const isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n    const isNone = outputType === Transaction.SIGHASH_NONE;\n    const isSingle = outputType === Transaction.SIGHASH_SINGLE;\n    let hashPrevouts = EMPTY_BUFFER;\n    let hashAmounts = EMPTY_BUFFER;\n    let hashScriptPubKeys = EMPTY_BUFFER;\n    let hashSequences = EMPTY_BUFFER;\n    let hashOutputs = EMPTY_BUFFER;\n    if (!isAnyoneCanPay) {\n      let bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(36 * this.ins.length);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(8 * this.ins.length);\n      values.forEach(value => bufferWriter.writeInt64(value));\n      hashAmounts = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(\n        prevOutScripts.map(varSliceSize).reduce((a, b) => a + b),\n      );\n      prevOutScripts.forEach(prevOutScript =>\n        bufferWriter.writeVarSlice(prevOutScript),\n      );\n      hashScriptPubKeys = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(4 * this.ins.length);\n      this.ins.forEach(txIn => bufferWriter.writeUInt32(txIn.sequence));\n      hashSequences = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    }\n    if (!(isNone || isSingle)) {\n      if (!this.outs.length)\n        throw new Error('Add outputs to the transaction before signing.');\n      const txOutsSize = this.outs\n        .map(output => 8 + varSliceSize(output.script))\n        .reduce((a, b) => a + b);\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(txOutsSize);\n      this.outs.forEach(out => {\n        bufferWriter.writeInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    } else if (isSingle && inIndex < this.outs.length) {\n      const output = this.outs[inIndex];\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(\n        8 + varSliceSize(output.script),\n      );\n      bufferWriter.writeInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    }\n    const spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n    // Length calculation from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n    // With extension from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n    const sigMsgSize =\n      174 -\n      (isAnyoneCanPay ? 49 : 0) -\n      (isNone ? 32 : 0) +\n      (annex ? 32 : 0) +\n      (leafHash ? 37 : 0);\n    const sigMsgWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(sigMsgSize);\n    sigMsgWriter.writeUInt8(hashType);\n    // Transaction\n    sigMsgWriter.writeInt32(this.version);\n    sigMsgWriter.writeUInt32(this.locktime);\n    sigMsgWriter.writeSlice(hashPrevouts);\n    sigMsgWriter.writeSlice(hashAmounts);\n    sigMsgWriter.writeSlice(hashScriptPubKeys);\n    sigMsgWriter.writeSlice(hashSequences);\n    if (!(isNone || isSingle)) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // Input\n    sigMsgWriter.writeUInt8(spendType);\n    if (isAnyoneCanPay) {\n      const input = this.ins[inIndex];\n      sigMsgWriter.writeSlice(input.hash);\n      sigMsgWriter.writeUInt32(input.index);\n      sigMsgWriter.writeInt64(values[inIndex]);\n      sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n      sigMsgWriter.writeUInt32(input.sequence);\n    } else {\n      sigMsgWriter.writeUInt32(inIndex);\n    }\n    if (annex) {\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(varSliceSize(annex));\n      bufferWriter.writeVarSlice(annex);\n      sigMsgWriter.writeSlice((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end()));\n    }\n    // Output\n    if (isSingle) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // BIP342 extension\n    if (leafHash) {\n      sigMsgWriter.writeSlice(leafHash);\n      sigMsgWriter.writeUInt8(0);\n      sigMsgWriter.writeUInt32(0xffffffff);\n    }\n    // Extra zero byte because:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n      'TapSighash',\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([Uint8Array.from([0x00]), sigMsgWriter.end()]),\n    );\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n      ]),\n      [inIndex, prevOutScript, value, hashType],\n    );\n    let tbuffer = Uint8Array.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = new Uint8Array(36 * this.ins.length);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = new Uint8Array(4 * this.ins.length);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = new Uint8Array(txOutsSize);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = new Uint8Array(8 + varSliceSize(output.script));\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      bufferWriter.writeInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    tbuffer = new Uint8Array(156 + varSliceSize(prevOutScript));\n    bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return new Uint8Array(32);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash(false)));\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex(this.toBuffer(undefined, undefined));\n  }\n  setInputScript(index, scriptSig) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([valibot__WEBPACK_IMPORTED_MODULE_5__.number(), _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema]), [index, scriptSig]);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([valibot__WEBPACK_IMPORTED_MODULE_5__.number(), valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema)]), [\n      index,\n      witness,\n    ]);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = new Uint8Array(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(buffer, initialOffset || 0);\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Buffer256bitSchema: () => (/* binding */ Buffer256bitSchema),\n/* harmony export */   BufferSchema: () => (/* binding */ BufferSchema),\n/* harmony export */   Hash160bitSchema: () => (/* binding */ Hash160bitSchema),\n/* harmony export */   Hash256bitSchema: () => (/* binding */ Hash256bitSchema),\n/* harmony export */   HexSchema: () => (/* binding */ HexSchema),\n/* harmony export */   NBufferSchemaFactory: () => (/* binding */ NBufferSchemaFactory),\n/* harmony export */   NullablePartial: () => (/* binding */ NullablePartial),\n/* harmony export */   SatoshiSchema: () => (/* binding */ SatoshiSchema),\n/* harmony export */   TAPLEAF_VERSION_MASK: () => (/* binding */ TAPLEAF_VERSION_MASK),\n/* harmony export */   UInt32Schema: () => (/* binding */ UInt32Schema),\n/* harmony export */   UInt8Schema: () => (/* binding */ UInt8Schema),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isTapleaf: () => (/* binding */ isTapleaf),\n/* harmony export */   isTaptree: () => (/* binding */ isTaptree),\n/* harmony export */   stacksEqual: () => (/* binding */ stacksEqual)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! valibot */ \"(ssr)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\nconst ZERO32 = new Uint8Array(32);\nconst EC_P = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.fromHex(\n  'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',\n);\nconst NBufferSchemaFactory = size =>\n  valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(valibot__WEBPACK_IMPORTED_MODULE_1__.instance(Uint8Array), valibot__WEBPACK_IMPORTED_MODULE_1__.length(size));\n/**\n * Checks if two arrays of Buffers are equal.\n * @param a - The first array of Buffers.\n * @param b - The second array of Buffers.\n * @returns True if the arrays are equal, false otherwise.\n */\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(x, b[i]) === 0;\n  });\n}\n/**\n * Checks if the given value is a valid elliptic curve point.\n * @param p - The value to check.\n * @returns True if the value is a valid elliptic curve point, false otherwise.\n */\nfunction isPoint(p) {\n  if (!(p instanceof Uint8Array)) return false;\n  if (p.length < 33) return false;\n  const t = p[0];\n  const x = p.slice(1, 33);\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(ZERO32, x) === 0) return false;\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(x, EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    return true;\n  }\n  const y = p.slice(33);\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(ZERO32, y) === 0) return false;\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(y, EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\nconst TAPLEAF_VERSION_MASK = 0xfe;\nfunction isTapleaf(o) {\n  if (!o || !('output' in o)) return false;\n  if (!(o.output instanceof Uint8Array)) return false;\n  if (o.version !== undefined)\n    return (o.version & TAPLEAF_VERSION_MASK) === o.version;\n  return true;\n}\nfunction isTaptree(scriptTree) {\n  if (!Array.isArray(scriptTree)) return isTapleaf(scriptTree);\n  if (scriptTree.length !== 2) return false;\n  return scriptTree.every(t => isTaptree(t));\n}\nconst Buffer256bitSchema = NBufferSchemaFactory(32);\nconst Hash160bitSchema = NBufferSchemaFactory(20);\nconst Hash256bitSchema = NBufferSchemaFactory(32);\nconst BufferSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.instance(Uint8Array);\nconst HexSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(valibot__WEBPACK_IMPORTED_MODULE_1__.string(), valibot__WEBPACK_IMPORTED_MODULE_1__.regex(/^([0-9a-f]{2})+$/i));\nconst UInt8Schema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.number(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.integer(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0xff),\n);\nconst UInt32Schema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.number(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.integer(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0xffffffff),\n);\nconst SatoshiSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.bigint(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0n),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0x7fffffffffffffffn),\n);\nconst NullablePartial = a =>\n  valibot__WEBPACK_IMPORTED_MODULE_1__.object(\n    Object.entries(a).reduce(\n      (acc, next) => ({ ...acc, [next[0]]: valibot__WEBPACK_IMPORTED_MODULE_1__.nullish(next[1]) }),\n      {},\n    ),\n  );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUNiO0FBQzdCO0FBQ0EsYUFBYSxxREFBYTtBQUMxQjtBQUNBO0FBQ087QUFDUCxFQUFFLHlDQUFNLENBQUMsNkNBQVUsY0FBYywyQ0FBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxXQUFXLHFEQUFhO0FBQ3hCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxREFBYTtBQUNuQixNQUFNLHFEQUFhO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxREFBYTtBQUNuQixNQUFNLHFEQUFhO0FBQ25CO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZDQUFVO0FBQy9CLGtCQUFrQix5Q0FBTSxDQUFDLDJDQUFRLElBQUksMENBQU8sYUFBYSxFQUFFO0FBQzNELG9CQUFvQix5Q0FBTTtBQUNqQyxFQUFFLDJDQUFRO0FBQ1YsRUFBRSw0Q0FBUztBQUNYLEVBQUUsNkNBQVU7QUFDWixFQUFFLDZDQUFVO0FBQ1o7QUFDTyxxQkFBcUIseUNBQU07QUFDbEMsRUFBRSwyQ0FBUTtBQUNWLEVBQUUsNENBQVM7QUFDWCxFQUFFLDZDQUFVO0FBQ1osRUFBRSw2Q0FBVTtBQUNaO0FBQ08sc0JBQXNCLHlDQUFNO0FBQ25DLEVBQUUsMkNBQVE7QUFDVixFQUFFLDZDQUFVO0FBQ1osRUFBRSw2Q0FBVTtBQUNaO0FBQ087QUFDUCxFQUFFLDJDQUFRO0FBQ1Y7QUFDQSx3QkFBd0IsbUJBQW1CLDRDQUFTLFdBQVc7QUFDL0QsUUFBUTtBQUNSO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3R5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuaW1wb3J0ICogYXMgdiBmcm9tICd2YWxpYm90JztcbmNvbnN0IFpFUk8zMiA9IG5ldyBVaW50OEFycmF5KDMyKTtcbmNvbnN0IEVDX1AgPSB0b29scy5mcm9tSGV4KFxuICAnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVmZmZmZmMyZicsXG4pO1xuZXhwb3J0IGNvbnN0IE5CdWZmZXJTY2hlbWFGYWN0b3J5ID0gc2l6ZSA9PlxuICB2LnBpcGUodi5pbnN0YW5jZShVaW50OEFycmF5KSwgdi5sZW5ndGgoc2l6ZSkpO1xuLyoqXG4gKiBDaGVja3MgaWYgdHdvIGFycmF5cyBvZiBCdWZmZXJzIGFyZSBlcXVhbC5cbiAqIEBwYXJhbSBhIC0gVGhlIGZpcnN0IGFycmF5IG9mIEJ1ZmZlcnMuXG4gKiBAcGFyYW0gYiAtIFRoZSBzZWNvbmQgYXJyYXkgb2YgQnVmZmVycy5cbiAqIEByZXR1cm5zIFRydWUgaWYgdGhlIGFycmF5cyBhcmUgZXF1YWwsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0YWNrc0VxdWFsKGEsIGIpIHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gYS5ldmVyeSgoeCwgaSkgPT4ge1xuICAgIHJldHVybiB0b29scy5jb21wYXJlKHgsIGJbaV0pID09PSAwO1xuICB9KTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBhIHZhbGlkIGVsbGlwdGljIGN1cnZlIHBvaW50LlxuICogQHBhcmFtIHAgLSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBUcnVlIGlmIHRoZSB2YWx1ZSBpcyBhIHZhbGlkIGVsbGlwdGljIGN1cnZlIHBvaW50LCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1BvaW50KHApIHtcbiAgaWYgKCEocCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSByZXR1cm4gZmFsc2U7XG4gIGlmIChwLmxlbmd0aCA8IDMzKSByZXR1cm4gZmFsc2U7XG4gIGNvbnN0IHQgPSBwWzBdO1xuICBjb25zdCB4ID0gcC5zbGljZSgxLCAzMyk7XG4gIGlmICh0b29scy5jb21wYXJlKFpFUk8zMiwgeCkgPT09IDApIHJldHVybiBmYWxzZTtcbiAgaWYgKHRvb2xzLmNvbXBhcmUoeCwgRUNfUCkgPj0gMCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoKHQgPT09IDB4MDIgfHwgdCA9PT0gMHgwMykgJiYgcC5sZW5ndGggPT09IDMzKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgY29uc3QgeSA9IHAuc2xpY2UoMzMpO1xuICBpZiAodG9vbHMuY29tcGFyZShaRVJPMzIsIHkpID09PSAwKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0b29scy5jb21wYXJlKHksIEVDX1ApID49IDApIHJldHVybiBmYWxzZTtcbiAgaWYgKHQgPT09IDB4MDQgJiYgcC5sZW5ndGggPT09IDY1KSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGNvbnN0IFRBUExFQUZfVkVSU0lPTl9NQVNLID0gMHhmZTtcbmV4cG9ydCBmdW5jdGlvbiBpc1RhcGxlYWYobykge1xuICBpZiAoIW8gfHwgISgnb3V0cHV0JyBpbiBvKSkgcmV0dXJuIGZhbHNlO1xuICBpZiAoIShvLm91dHB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSByZXR1cm4gZmFsc2U7XG4gIGlmIChvLnZlcnNpb24gIT09IHVuZGVmaW5lZClcbiAgICByZXR1cm4gKG8udmVyc2lvbiAmIFRBUExFQUZfVkVSU0lPTl9NQVNLKSA9PT0gby52ZXJzaW9uO1xuICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RhcHRyZWUoc2NyaXB0VHJlZSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoc2NyaXB0VHJlZSkpIHJldHVybiBpc1RhcGxlYWYoc2NyaXB0VHJlZSk7XG4gIGlmIChzY3JpcHRUcmVlLmxlbmd0aCAhPT0gMikgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gc2NyaXB0VHJlZS5ldmVyeSh0ID0+IGlzVGFwdHJlZSh0KSk7XG59XG5leHBvcnQgY29uc3QgQnVmZmVyMjU2Yml0U2NoZW1hID0gTkJ1ZmZlclNjaGVtYUZhY3RvcnkoMzIpO1xuZXhwb3J0IGNvbnN0IEhhc2gxNjBiaXRTY2hlbWEgPSBOQnVmZmVyU2NoZW1hRmFjdG9yeSgyMCk7XG5leHBvcnQgY29uc3QgSGFzaDI1NmJpdFNjaGVtYSA9IE5CdWZmZXJTY2hlbWFGYWN0b3J5KDMyKTtcbmV4cG9ydCBjb25zdCBCdWZmZXJTY2hlbWEgPSB2Lmluc3RhbmNlKFVpbnQ4QXJyYXkpO1xuZXhwb3J0IGNvbnN0IEhleFNjaGVtYSA9IHYucGlwZSh2LnN0cmluZygpLCB2LnJlZ2V4KC9eKFswLTlhLWZdezJ9KSskL2kpKTtcbmV4cG9ydCBjb25zdCBVSW50OFNjaGVtYSA9IHYucGlwZShcbiAgdi5udW1iZXIoKSxcbiAgdi5pbnRlZ2VyKCksXG4gIHYubWluVmFsdWUoMCksXG4gIHYubWF4VmFsdWUoMHhmZiksXG4pO1xuZXhwb3J0IGNvbnN0IFVJbnQzMlNjaGVtYSA9IHYucGlwZShcbiAgdi5udW1iZXIoKSxcbiAgdi5pbnRlZ2VyKCksXG4gIHYubWluVmFsdWUoMCksXG4gIHYubWF4VmFsdWUoMHhmZmZmZmZmZiksXG4pO1xuZXhwb3J0IGNvbnN0IFNhdG9zaGlTY2hlbWEgPSB2LnBpcGUoXG4gIHYuYmlnaW50KCksXG4gIHYubWluVmFsdWUoMG4pLFxuICB2Lm1heFZhbHVlKDB4N2ZmZmZmZmZmZmZmZmZmZm4pLFxuKTtcbmV4cG9ydCBjb25zdCBOdWxsYWJsZVBhcnRpYWwgPSBhID0+XG4gIHYub2JqZWN0KFxuICAgIE9iamVjdC5lbnRyaWVzKGEpLnJlZHVjZShcbiAgICAgIChhY2MsIG5leHQpID0+ICh7IC4uLmFjYywgW25leHRbMF1dOiB2Lm51bGxpc2gobmV4dFsxXSkgfSksXG4gICAgICB7fSxcbiAgICApLFxuICApO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\n");

/***/ })

};
;