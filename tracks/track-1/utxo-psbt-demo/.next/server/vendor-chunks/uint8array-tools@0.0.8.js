"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uint8array-tools@0.0.8";
exports.ids = ["vendor-chunks/uint8array-tools@0.0.8"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   readUInt16: () => (/* binding */ readUInt16),\n/* harmony export */   readUInt32: () => (/* binding */ readUInt32),\n/* harmony export */   readUInt64: () => (/* binding */ readUInt64),\n/* harmony export */   readUInt8: () => (/* binding */ readUInt8),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   writeUInt16: () => (/* binding */ writeUInt16),\n/* harmony export */   writeUInt32: () => (/* binding */ writeUInt32),\n/* harmony export */   writeUInt64: () => (/* binding */ writeUInt64),\n/* harmony export */   writeUInt8: () => (/* binding */ writeUInt8)\n/* harmony export */ });\nfunction toUtf8(bytes) {\n    return Buffer.from(bytes || []).toString();\n}\nfunction fromUtf8(s) {\n    return Uint8Array.from(Buffer.from(s || \"\", \"utf8\"));\n}\nfunction concat(arrays) {\n    return Uint8Array.from(Buffer.concat(arrays));\n}\nfunction toHex(bytes) {\n    return Buffer.from(bytes || []).toString(\"hex\");\n}\nfunction fromHex(hexString) {\n    return Uint8Array.from(Buffer.from(hexString || \"\", \"hex\"));\n}\nfunction toBase64(bytes) {\n    return Buffer.from(bytes).toString(\"base64\");\n}\nfunction fromBase64(base64) {\n    return Uint8Array.from(Buffer.from(base64 || \"\", \"base64\"));\n}\nfunction compare(v1, v2) {\n    return Buffer.from(v1).compare(Buffer.from(v2));\n}\nfunction writeUInt8(buffer, offset, value) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    const buf = Buffer.alloc(1);\n    buf.writeUInt8(value, 0);\n    buffer.set(Uint8Array.from(buf), offset);\n}\nfunction writeUInt16(buffer, offset, value, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.alloc(2);\n    if (littleEndian === \"LE\") {\n        buf.writeUInt16LE(value, 0);\n    }\n    else {\n        buf.writeUInt16BE(value, 0);\n    }\n    buffer.set(Uint8Array.from(buf), offset);\n}\nfunction writeUInt32(buffer, offset, value, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.alloc(4);\n    if (littleEndian === \"LE\") {\n        buf.writeUInt32LE(value, 0);\n    }\n    else {\n        buf.writeUInt32BE(value, 0);\n    }\n    buffer.set(Uint8Array.from(buf), offset);\n}\nfunction writeUInt64(buffer, offset, value, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.alloc(8);\n    if (value > 0xffffffffffffffffn) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffffffffffffffffn}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buf.writeBigUInt64LE(value, 0);\n    }\n    else {\n        buf.writeBigUInt64BE(value, 0);\n    }\n    buffer.set(Uint8Array.from(buf), offset);\n}\nfunction readUInt8(buffer, offset) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    const buf = Buffer.from(buffer);\n    return buf.readUInt8(offset);\n}\nfunction readUInt16(buffer, offset, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.from(buffer);\n    if (littleEndian === \"LE\") {\n        return buf.readUInt16LE(offset);\n    }\n    else {\n        return buf.readUInt16BE(offset);\n    }\n}\nfunction readUInt32(buffer, offset, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.from(buffer);\n    if (littleEndian === \"LE\") {\n        return buf.readUInt32LE(offset);\n    }\n    else {\n        return buf.readUInt32BE(offset);\n    }\n}\nfunction readUInt64(buffer, offset, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    const buf = Buffer.from(buffer);\n    if (littleEndian === \"LE\") {\n        return buf.readBigUInt64LE(offset);\n    }\n    else {\n        return buf.readBigUInt64BE(offset);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdWludDhhcnJheS10b29sc0AwLjAuOC9ub2RlX21vZHVsZXMvdWludDhhcnJheS10b29scy9zcmMvbWpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixvQkFBb0IsYUFBYSxNQUFNO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vdWludDhhcnJheS10b29sc0AwLjAuOC9ub2RlX21vZHVsZXMvdWludDhhcnJheS10b29scy9zcmMvbWpzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiB0b1V0ZjgoYnl0ZXMpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMgfHwgW10pLnRvU3RyaW5nKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbVV0Zjgocykge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oQnVmZmVyLmZyb20ocyB8fCBcIlwiLCBcInV0ZjhcIikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdChhcnJheXMpIHtcbiAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKEJ1ZmZlci5jb25jYXQoYXJyYXlzKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoYnl0ZXMpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oYnl0ZXMgfHwgW10pLnRvU3RyaW5nKFwiaGV4XCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZyb21IZXgoaGV4U3RyaW5nKSB7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShCdWZmZXIuZnJvbShoZXhTdHJpbmcgfHwgXCJcIiwgXCJoZXhcIikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQmFzZTY0KGJ5dGVzKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJ5dGVzKS50b1N0cmluZyhcImJhc2U2NFwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQmFzZTY0KGJhc2U2NCkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oQnVmZmVyLmZyb20oYmFzZTY0IHx8IFwiXCIsIFwiYmFzZTY0XCIpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKHYxLCB2Mikge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2MSkuY29tcGFyZShCdWZmZXIuZnJvbSh2MikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlVUludDgoYnVmZmVyLCBvZmZzZXQsIHZhbHVlKSB7XG4gICAgaWYgKG9mZnNldCArIDEgPiBidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9mZnNldCBpcyBvdXRzaWRlIHRoZSBib3VuZHMgb2YgVWludDhBcnJheVwiKTtcbiAgICB9XG4gICAgY29uc3QgYnVmID0gQnVmZmVyLmFsbG9jKDEpO1xuICAgIGJ1Zi53cml0ZVVJbnQ4KHZhbHVlLCAwKTtcbiAgICBidWZmZXIuc2V0KFVpbnQ4QXJyYXkuZnJvbShidWYpLCBvZmZzZXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlVUludDE2KGJ1ZmZlciwgb2Zmc2V0LCB2YWx1ZSwgbGl0dGxlRW5kaWFuKSB7XG4gICAgaWYgKG9mZnNldCArIDIgPiBidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9mZnNldCBpcyBvdXRzaWRlIHRoZSBib3VuZHMgb2YgVWludDhBcnJheVwiKTtcbiAgICB9XG4gICAgbGl0dGxlRW5kaWFuID0gbGl0dGxlRW5kaWFuLnRvVXBwZXJDYXNlKCk7XG4gICAgY29uc3QgYnVmID0gQnVmZmVyLmFsbG9jKDIpO1xuICAgIGlmIChsaXR0bGVFbmRpYW4gPT09IFwiTEVcIikge1xuICAgICAgICBidWYud3JpdGVVSW50MTZMRSh2YWx1ZSwgMCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBidWYud3JpdGVVSW50MTZCRSh2YWx1ZSwgMCk7XG4gICAgfVxuICAgIGJ1ZmZlci5zZXQoVWludDhBcnJheS5mcm9tKGJ1ZiksIG9mZnNldCk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JpdGVVSW50MzIoYnVmZmVyLCBvZmZzZXQsIHZhbHVlLCBsaXR0bGVFbmRpYW4pIHtcbiAgICBpZiAob2Zmc2V0ICsgNCA+IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT2Zmc2V0IGlzIG91dHNpZGUgdGhlIGJvdW5kcyBvZiBVaW50OEFycmF5XCIpO1xuICAgIH1cbiAgICBsaXR0bGVFbmRpYW4gPSBsaXR0bGVFbmRpYW4udG9VcHBlckNhc2UoKTtcbiAgICBjb25zdCBidWYgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgaWYgKGxpdHRsZUVuZGlhbiA9PT0gXCJMRVwiKSB7XG4gICAgICAgIGJ1Zi53cml0ZVVJbnQzMkxFKHZhbHVlLCAwKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGJ1Zi53cml0ZVVJbnQzMkJFKHZhbHVlLCAwKTtcbiAgICB9XG4gICAgYnVmZmVyLnNldChVaW50OEFycmF5LmZyb20oYnVmKSwgb2Zmc2V0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQ2NChidWZmZXIsIG9mZnNldCwgdmFsdWUsIGxpdHRsZUVuZGlhbikge1xuICAgIGlmIChvZmZzZXQgKyA4ID4gYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPZmZzZXQgaXMgb3V0c2lkZSB0aGUgYm91bmRzIG9mIFVpbnQ4QXJyYXlcIik7XG4gICAgfVxuICAgIGxpdHRsZUVuZGlhbiA9IGxpdHRsZUVuZGlhbi50b1VwcGVyQ2FzZSgpO1xuICAgIGNvbnN0IGJ1ZiA9IEJ1ZmZlci5hbGxvYyg4KTtcbiAgICBpZiAodmFsdWUgPiAweGZmZmZmZmZmZmZmZmZmZmZuKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHZhbHVlIG9mIFwidmFsdWVcIiBpcyBvdXQgb2YgcmFuZ2UuIEl0IG11c3QgYmUgPj0gMCBhbmQgPD0gJHsweGZmZmZmZmZmZmZmZmZmZmZufS4gUmVjZWl2ZWQgJHt2YWx1ZX1gKTtcbiAgICB9XG4gICAgaWYgKGxpdHRsZUVuZGlhbiA9PT0gXCJMRVwiKSB7XG4gICAgICAgIGJ1Zi53cml0ZUJpZ1VJbnQ2NExFKHZhbHVlLCAwKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGJ1Zi53cml0ZUJpZ1VJbnQ2NEJFKHZhbHVlLCAwKTtcbiAgICB9XG4gICAgYnVmZmVyLnNldChVaW50OEFycmF5LmZyb20oYnVmKSwgb2Zmc2V0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWFkVUludDgoYnVmZmVyLCBvZmZzZXQpIHtcbiAgICBpZiAob2Zmc2V0ICsgMSA+IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT2Zmc2V0IGlzIG91dHNpZGUgdGhlIGJvdW5kcyBvZiBVaW50OEFycmF5XCIpO1xuICAgIH1cbiAgICBjb25zdCBidWYgPSBCdWZmZXIuZnJvbShidWZmZXIpO1xuICAgIHJldHVybiBidWYucmVhZFVJbnQ4KG9mZnNldCk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVhZFVJbnQxNihidWZmZXIsIG9mZnNldCwgbGl0dGxlRW5kaWFuKSB7XG4gICAgaWYgKG9mZnNldCArIDIgPiBidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9mZnNldCBpcyBvdXRzaWRlIHRoZSBib3VuZHMgb2YgVWludDhBcnJheVwiKTtcbiAgICB9XG4gICAgbGl0dGxlRW5kaWFuID0gbGl0dGxlRW5kaWFuLnRvVXBwZXJDYXNlKCk7XG4gICAgY29uc3QgYnVmID0gQnVmZmVyLmZyb20oYnVmZmVyKTtcbiAgICBpZiAobGl0dGxlRW5kaWFuID09PSBcIkxFXCIpIHtcbiAgICAgICAgcmV0dXJuIGJ1Zi5yZWFkVUludDE2TEUob2Zmc2V0KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBidWYucmVhZFVJbnQxNkJFKG9mZnNldCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50MzIoYnVmZmVyLCBvZmZzZXQsIGxpdHRsZUVuZGlhbikge1xuICAgIGlmIChvZmZzZXQgKyA0ID4gYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJPZmZzZXQgaXMgb3V0c2lkZSB0aGUgYm91bmRzIG9mIFVpbnQ4QXJyYXlcIik7XG4gICAgfVxuICAgIGxpdHRsZUVuZGlhbiA9IGxpdHRsZUVuZGlhbi50b1VwcGVyQ2FzZSgpO1xuICAgIGNvbnN0IGJ1ZiA9IEJ1ZmZlci5mcm9tKGJ1ZmZlcik7XG4gICAgaWYgKGxpdHRsZUVuZGlhbiA9PT0gXCJMRVwiKSB7XG4gICAgICAgIHJldHVybiBidWYucmVhZFVJbnQzMkxFKG9mZnNldCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYnVmLnJlYWRVSW50MzJCRShvZmZzZXQpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiByZWFkVUludDY0KGJ1ZmZlciwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4pIHtcbiAgICBpZiAob2Zmc2V0ICsgOCA+IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT2Zmc2V0IGlzIG91dHNpZGUgdGhlIGJvdW5kcyBvZiBVaW50OEFycmF5XCIpO1xuICAgIH1cbiAgICBsaXR0bGVFbmRpYW4gPSBsaXR0bGVFbmRpYW4udG9VcHBlckNhc2UoKTtcbiAgICBjb25zdCBidWYgPSBCdWZmZXIuZnJvbShidWZmZXIpO1xuICAgIGlmIChsaXR0bGVFbmRpYW4gPT09IFwiTEVcIikge1xuICAgICAgICByZXR1cm4gYnVmLnJlYWRCaWdVSW50NjRMRShvZmZzZXQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGJ1Zi5yZWFkQmlnVUludDY0QkUob2Zmc2V0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/index.js\n");

/***/ })

};
;