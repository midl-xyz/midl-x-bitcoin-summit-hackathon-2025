/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./app/components/PsbtBuilder.tsx":
/*!****************************************!*\
  !*** ./app/components/PsbtBuilder.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PsbtBuilder: () => (/* binding */ PsbtBuilder)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/usePsbtBuilder */ \"(app-pages-browser)/./app/hooks/usePsbtBuilder.ts\");\n/* __next_internal_client_entry_do_not_use__ PsbtBuilder auto */ \nvar _s = $RefreshSig$();\n\n\nfunction PsbtBuilder(param) {\n    let { selectionResult, onPsbtCreated } = param;\n    _s();\n    const { createPsbt } = (0,_hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__.usePsbtBuilder)();\n    const [outputs, setOutputs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            address: \"\",\n            value: \"\"\n        }\n    ]);\n    const [feeRate, setFeeRate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"1\");\n    const [isBuilding, setIsBuilding] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const formatBTC = (sats)=>(sats / 100000000).toFixed(8);\n    const addOutput = ()=>{\n        setOutputs([\n            ...outputs,\n            {\n                address: \"\",\n                value: \"\"\n            }\n        ]);\n    };\n    const removeOutput = (index)=>{\n        if (outputs.length > 1) {\n            setOutputs(outputs.filter((_, i)=>i !== index));\n        }\n    };\n    const updateOutput = (index, field, value)=>{\n        const newOutputs = [\n            ...outputs\n        ];\n        newOutputs[index] = {\n            ...newOutputs[index],\n            [field]: value\n        };\n        setOutputs(newOutputs);\n    };\n    const handleBuildPsbt = async ()=>{\n        if (!selectionResult) return;\n        try {\n            setIsBuilding(true);\n            setError(null);\n            // Validate outputs\n            const validOutputs = outputs.filter((o)=>o.address && o.value);\n            if (validOutputs.length === 0) {\n                throw new Error(\"At least one valid output is required\");\n            }\n            const psbtOutputs = validOutputs.map((output)=>({\n                    address: output.address,\n                    value: Math.floor(parseFloat(output.value) * 100000000)\n                }));\n            const result = await createPsbt(selectionResult.utxos, psbtOutputs, parseInt(feeRate));\n            onPsbtCreated(result.psbtBase64);\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to create PSBT\");\n        } finally{\n            setIsBuilding(false);\n        }\n    };\n    if (!selectionResult) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"card\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                    className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                    children: \"PSBT Builder\"\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                    lineNumber: 95,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center text-gray-500 dark:text-gray-400\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Select UTXOs first to build a PSBT\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                    lineNumber: 98,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n            lineNumber: 94,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"card\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"PSBT Builder\"\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                lineNumber: 107,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                        className: \"font-medium text-gray-900 dark:text-white mb-2\",\n                        children: \"Selected UTXOs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 113,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-4 text-sm\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Count: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 118,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: selectionResult.utxos.length\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 119,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 117,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Total: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 122,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: [\n                                            formatBTC(selectionResult.total_amount),\n                                            \" BTC\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 123,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 121,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Strategy: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 128,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: selectionResult.strategy\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 129,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 127,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Change: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 132,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: [\n                                            formatBTC(selectionResult.change_amount),\n                                            \" BTC\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                        lineNumber: 133,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 131,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 116,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                lineNumber: 112,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                className: \"font-medium text-gray-900 dark:text-white\",\n                                children: \"Outputs\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 143,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: addOutput,\n                                className: \"btn-secondary text-sm\",\n                                children: \"Add Output\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 144,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 142,\n                        columnNumber: 9\n                    }, this),\n                    outputs.map((output, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-2 items-end\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n                                            children: \"Address\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                            lineNumber: 152,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"text\",\n                                            value: output.address,\n                                            onChange: (e)=>updateOutput(index, \"address\", e.target.value),\n                                            placeholder: \"bcrt1q...\",\n                                            className: \"input-field\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                            lineNumber: 155,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                    lineNumber: 151,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"w-32\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n                                            children: \"Amount (BTC)\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                            lineNumber: 164,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"number\",\n                                            step: \"0.00000001\",\n                                            value: output.value,\n                                            onChange: (e)=>updateOutput(index, \"value\", e.target.value),\n                                            placeholder: \"0.00000000\",\n                                            className: \"input-field\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                            lineNumber: 167,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                    lineNumber: 163,\n                                    columnNumber: 13\n                                }, this),\n                                outputs.length > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>removeOutput(index),\n                                    className: \"btn-secondary text-sm h-10\",\n                                    children: \"Remove\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                    lineNumber: 177,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, index, true, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                            lineNumber: 150,\n                            columnNumber: 11\n                        }, this)),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-32\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                                children: \"Fee Rate (sat/vB)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 188,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                value: feeRate,\n                                onChange: (e)=>setFeeRate(e.target.value),\n                                className: \"input-field\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                                lineNumber: 191,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 187,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleBuildPsbt,\n                        disabled: isBuilding,\n                        className: \"btn-primary w-full\",\n                        children: isBuilding ? \"Building PSBT...\" : \"Create PSBT\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 199,\n                        columnNumber: 9\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 rounded-lg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-red-700 dark:text-red-300 text-sm\",\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                            lineNumber: 209,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                        lineNumber: 208,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n                lineNumber: 141,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtBuilder.tsx\",\n        lineNumber: 106,\n        columnNumber: 5\n    }, this);\n}\n_s(PsbtBuilder, \"ZUBwItlgSYkqr4gjdbDE36V8Pbs=\", false, function() {\n    return [\n        _hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__.usePsbtBuilder\n    ];\n});\n_c = PsbtBuilder;\nvar _c;\n$RefreshReg$(_c, \"PsbtBuilder\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/PsbtBuilder.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/PsbtSigner.tsx":
/*!***************************************!*\
  !*** ./app/components/PsbtSigner.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PsbtSigner: () => (/* binding */ PsbtSigner)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/usePsbtBuilder */ \"(app-pages-browser)/./app/hooks/usePsbtBuilder.ts\");\n/* __next_internal_client_entry_do_not_use__ PsbtSigner auto */ \nvar _s = $RefreshSig$();\n\n// Note: MIDL signing integration would go here\n\nfunction PsbtSigner(param) {\n    let { psbtBase64 } = param;\n    _s();\n    const { analyzePsbt } = (0,_hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__.usePsbtBuilder)();\n    const [signedTx, setSignedTx] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isSigning, setIsSigning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const formatBTC = (sats)=>(sats / 100000000).toFixed(8);\n    const handleSignPsbt = async ()=>{\n        if (!psbtBase64) return;\n        try {\n            setIsSigning(true);\n            setError(null);\n            // For demo purposes, we'll show the PSBT structure\n            // In a real implementation, this would integrate with MIDL's signing\n            setSignedTx(\"Demo: PSBT ready for signing with connected wallet\");\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to sign PSBT\");\n        } finally{\n            setIsSigning(false);\n        }\n    };\n    if (!psbtBase64) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"card\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                    className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                    children: \"PSBT Signer\"\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                    lineNumber: 40,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center text-gray-500 dark:text-gray-400\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Create a PSBT first to sign it\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                    lineNumber: 43,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n            lineNumber: 39,\n            columnNumber: 7\n        }, this);\n    }\n    let psbtAnalysis = null;\n    try {\n        psbtAnalysis = analyzePsbt(psbtBase64);\n    } catch (err) {\n    // Handle analysis error\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"card\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"PSBT Signer\"\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 59,\n                columnNumber: 7\n            }, this),\n            psbtAnalysis && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                        className: \"font-medium text-gray-900 dark:text-white mb-3\",\n                        children: \"PSBT Analysis\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm mb-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Inputs: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 72,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: psbtAnalysis.inputCount\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: [\n                                            \"Outputs:\",\n                                            \" \"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 76,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: psbtAnalysis.outputCount\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 79,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                lineNumber: 75,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: [\n                                            \"Total In:\",\n                                            \" \"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 82,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: [\n                                            formatBTC(psbtAnalysis.totalInput),\n                                            \" BTC\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 85,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                lineNumber: 81,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-500 dark:text-gray-400\",\n                                        children: \"Fee: \"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 90,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"font-medium\",\n                                        children: [\n                                            formatBTC(psbtAnalysis.fee),\n                                            \" BTC\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                        lineNumber: 91,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                lineNumber: 89,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 70,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                className: \"font-medium text-gray-900 dark:text-white\",\n                                children: \"Outputs:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                lineNumber: 99,\n                                columnNumber: 13\n                            }, this),\n                            psbtAnalysis.outputs.map((output, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between items-center text-sm bg-white dark:bg-gray-800 p-2 rounded\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"font-mono text-xs\",\n                                            children: output.address || \"Unknown\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                            lineNumber: 107,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"font-medium\",\n                                            children: [\n                                                formatBTC(output.value),\n                                                \" BTC\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                            lineNumber: 110,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                                    lineNumber: 103,\n                                    columnNumber: 15\n                                }, this))\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 98,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 65,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                        children: \"PSBT (Base64)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 121,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        value: psbtBase64,\n                        readOnly: true,\n                        rows: 4,\n                        className: \"input-field font-mono text-xs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 124,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 120,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleSignPsbt,\n                disabled: isSigning,\n                className: \"btn-primary w-full mb-4\",\n                children: isSigning ? \"Preparing for signing...\" : \"Prepare PSBT for Signing\"\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 133,\n                columnNumber: 7\n            }, this),\n            signedTx && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                        children: \"Signed Transaction\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 144,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        value: signedTx,\n                        readOnly: true,\n                        rows: 4,\n                        className: \"input-field font-mono text-xs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 147,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-2 p-3 bg-green-100 dark:bg-green-900 border border-green-300 dark:border-green-700 rounded-lg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-green-700 dark:text-green-300 text-sm\",\n                            children: \"✅ PSBT prepared! Ready for wallet signing integration.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                            lineNumber: 154,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                        lineNumber: 153,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 143,\n                columnNumber: 9\n            }, this),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-3 bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 rounded-lg\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-red-700 dark:text-red-300 text-sm\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                    lineNumber: 164,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 163,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 p-3 bg-blue-100 dark:bg-blue-900 border border-blue-300 dark:border-blue-700 rounded-lg\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-blue-700 dark:text-blue-300 text-sm\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                            children: \"Note:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                            lineNumber: 171,\n                            columnNumber: 11\n                        }, this),\n                        \" This demo integrates UTXO selection from the UTXO Indexer-Selector with MIDL's signing infrastructure. The PSBT is created from selected UTXOs and then signed using MIDL's transaction intention system.\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                    lineNumber: 170,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n                lineNumber: 169,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/PsbtSigner.tsx\",\n        lineNumber: 58,\n        columnNumber: 5\n    }, this);\n}\n_s(PsbtSigner, \"StMURJAeXFjvDTDI/OOoo70wAeU=\", false, function() {\n    return [\n        _hooks_usePsbtBuilder__WEBPACK_IMPORTED_MODULE_2__.usePsbtBuilder\n    ];\n});\n_c = PsbtSigner;\nvar _c;\n$RefreshReg$(_c, \"PsbtSigner\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/PsbtSigner.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/UtxoSelector.tsx":
/*!*****************************************!*\
  !*** ./app/components/UtxoSelector.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UtxoSelector: () => (/* binding */ UtxoSelector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useUtxoIndexer */ \"(app-pages-browser)/./app/hooks/useUtxoIndexer.ts\");\n/* __next_internal_client_entry_do_not_use__ UtxoSelector auto */ \nvar _s = $RefreshSig$();\n\n\nfunction UtxoSelector(param) {\n    let { onUtxosSelected } = param;\n    _s();\n    const { selectUtxos, isLoading, error } = (0,_hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_2__.useUtxoIndexer)();\n    const [targetAmount, setTargetAmount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [strategy, setStrategy] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"largest_first\");\n    const [maxUtxos, setMaxUtxos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"10\");\n    const formatBTC = (sats)=>(sats / 100000000).toFixed(8);\n    const handleSelect = async ()=>{\n        if (!targetAmount) return;\n        const amountSats = Math.floor(parseFloat(targetAmount) * 100000000);\n        const result = await selectUtxos(amountSats, strategy, maxUtxos ? parseInt(maxUtxos) : undefined);\n        if (result) {\n            onUtxosSelected(result);\n        }\n    };\n    const strategies = [\n        {\n            value: \"largest_first\",\n            label: \"Largest First\"\n        },\n        {\n            value: \"smallest_first\",\n            label: \"Smallest First\"\n        },\n        {\n            value: \"branch_and_bound\",\n            label: \"Branch and Bound\"\n        },\n        {\n            value: \"oldest_first\",\n            label: \"Oldest First\"\n        },\n        {\n            value: \"newest_first\",\n            label: \"Newest First\"\n        }\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"card\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"UTXO Selection\"\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                                children: \"Target Amount (BTC)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 66,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                step: \"0.00000001\",\n                                value: targetAmount,\n                                onChange: (e)=>setTargetAmount(e.target.value),\n                                placeholder: \"0.00000000\",\n                                className: \"input-field\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 69,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                        lineNumber: 65,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                                children: \"Selection Strategy\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 80,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                value: strategy,\n                                onChange: (e)=>setStrategy(e.target.value),\n                                className: \"input-field\",\n                                children: strategies.map((s)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: s.value,\n                                        children: s.label\n                                    }, s.value, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                        lineNumber: 89,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 83,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                                children: \"Max UTXOs (optional)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 97,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                value: maxUtxos,\n                                onChange: (e)=>setMaxUtxos(e.target.value),\n                                placeholder: \"10\",\n                                className: \"input-field\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                                lineNumber: 100,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                        lineNumber: 96,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleSelect,\n                        disabled: isLoading || !targetAmount,\n                        className: \"btn-primary w-full\",\n                        children: isLoading ? \"Selecting UTXOs...\" : \"Select UTXOs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                        lineNumber: 109,\n                        columnNumber: 9\n                    }, this),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 rounded-lg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-red-700 dark:text-red-300 text-sm\",\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                            lineNumber: 119,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                        lineNumber: 118,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoSelector.tsx\",\n        lineNumber: 59,\n        columnNumber: 5\n    }, this);\n}\n_s(UtxoSelector, \"iIt5E5P2wuPk9JsP7G5HDm64DN8=\", false, function() {\n    return [\n        _hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_2__.useUtxoIndexer\n    ];\n});\n_c = UtxoSelector;\nvar _c;\n$RefreshReg$(_c, \"UtxoSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/UtxoSelector.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/UtxoStats.tsx":
/*!**************************************!*\
  !*** ./app/components/UtxoStats.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UtxoStats: () => (/* binding */ UtxoStats)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useUtxoIndexer */ \"(app-pages-browser)/./app/hooks/useUtxoIndexer.ts\");\n/* __next_internal_client_entry_do_not_use__ UtxoStats auto */ \nvar _s = $RefreshSig$();\n\nfunction UtxoStats() {\n    _s();\n    const { stats, isLoading, error, fetchStats } = (0,_hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_1__.useUtxoIndexer)();\n    const formatBTC = (sats)=>(sats / 100000000).toFixed(8);\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-red-600 dark:text-red-400\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-semibold mb-2\",\n                        children: \"Connection Error\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 14,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: fetchStats,\n                        className: \"btn-secondary mt-3\",\n                        children: \"Retry\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 13,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n            lineNumber: 12,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"card\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"UTXO Indexer Statistics\"\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 26,\n                columnNumber: 7\n            }, this),\n            isLoading && !stats ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"animate-pulse\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n                    children: [\n                        ...Array(4)\n                    ].map((_, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-16 bg-gray-200 dark:bg-gray-700 rounded\"\n                        }, i, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                            lineNumber: 34,\n                            columnNumber: 15\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 31,\n                columnNumber: 9\n            }, this) : stats ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-2xl font-bold text-blue-600 dark:text-blue-400\",\n                                children: stats.total_utxos.toLocaleString()\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 44,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                                children: \"Total UTXOs\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 47,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-2xl font-bold text-green-600 dark:text-green-400\",\n                                children: formatBTC(stats.total_value)\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 53,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                                children: \"Total BTC\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 56,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 52,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-2xl font-bold text-purple-600 dark:text-purple-400\",\n                                children: stats.current_height.toLocaleString()\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                                children: \"Current Height\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 65,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-2xl font-bold text-orange-600 dark:text-orange-400\",\n                                children: [\n                                    stats.progress_percent.toFixed(1),\n                                    \"%\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                                children: \"Sync Progress\"\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                                lineNumber: 74,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 70,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 42,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center text-gray-500 dark:text-gray-400\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"No data available\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 81,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: fetchStats,\n                        className: \"btn-primary mt-3\",\n                        children: \"Load Stats\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                        lineNumber: 82,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 80,\n                columnNumber: 9\n            }, this),\n            stats && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex justify-between items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-sm text-gray-500 dark:text-gray-400\",\n                            children: [\n                                \"Last updated: \",\n                                new Date().toLocaleTimeString()\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                            lineNumber: 91,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: fetchStats,\n                            disabled: isLoading,\n                            className: \"btn-secondary text-xs\",\n                            children: isLoading ? \"Refreshing...\" : \"Refresh\"\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                            lineNumber: 94,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                    lineNumber: 90,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n                lineNumber: 89,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/components/UtxoStats.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n_s(UtxoStats, \"Zxb0FGKisoP/1+DMiBBw5tU1y/A=\", false, function() {\n    return [\n        _hooks_useUtxoIndexer__WEBPACK_IMPORTED_MODULE_1__.useUtxoIndexer\n    ];\n});\n_c = UtxoStats;\nvar _c;\n$RefreshReg$(_c, \"UtxoStats\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL1V0eG9TdGF0cy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFeUQ7QUFFbEQsU0FBU0M7O0lBQ2QsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUUsR0FBR0wscUVBQWNBO0lBRTlELE1BQU1NLFlBQVksQ0FBQ0MsT0FBaUIsQ0FBQ0EsT0FBTyxTQUFRLEVBQUdDLE9BQU8sQ0FBQztJQUUvRCxJQUFJSixPQUFPO1FBQ1QscUJBQ0UsOERBQUNLO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQUdELFdBQVU7a0NBQTZCOzs7Ozs7a0NBQzNDLDhEQUFDRTt3QkFBRUYsV0FBVTtrQ0FBV047Ozs7OztrQ0FDeEIsOERBQUNTO3dCQUFPQyxTQUFTVDt3QkFBWUssV0FBVTtrQ0FBcUI7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTXBFO0lBRUEscUJBQ0UsOERBQUNEO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBR0QsV0FBVTswQkFBMkQ7Ozs7OztZQUl4RVAsYUFBYSxDQUFDRCxzQkFDYiw4REFBQ087Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNEO29CQUFJQyxXQUFVOzhCQUNaOzJCQUFJSyxNQUFNO3FCQUFHLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxHQUFHQyxrQkFDckIsOERBQUNUOzRCQUVDQyxXQUFVOzJCQURMUTs7Ozs7Ozs7Ozs7Ozs7dUJBTVhoQixzQkFDRiw4REFBQ087Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUNaUixNQUFNaUIsV0FBVyxDQUFDQyxjQUFjOzs7Ozs7MENBRW5DLDhEQUFDWDtnQ0FBSUMsV0FBVTswQ0FBMkM7Ozs7Ozs7Ozs7OztrQ0FLNUQsOERBQUNEO3dCQUFJQyxXQUFVOzswQ0FDYiw4REFBQ0Q7Z0NBQUlDLFdBQVU7MENBQ1pKLFVBQVVKLE1BQU1tQixXQUFXOzs7Ozs7MENBRTlCLDhEQUFDWjtnQ0FBSUMsV0FBVTswQ0FBMkM7Ozs7Ozs7Ozs7OztrQ0FLNUQsOERBQUNEO3dCQUFJQyxXQUFVOzswQ0FDYiw4REFBQ0Q7Z0NBQUlDLFdBQVU7MENBQ1pSLE1BQU1vQixjQUFjLENBQUNGLGNBQWM7Ozs7OzswQ0FFdEMsOERBQUNYO2dDQUFJQyxXQUFVOzBDQUEyQzs7Ozs7Ozs7Ozs7O2tDQUs1RCw4REFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRDtnQ0FBSUMsV0FBVTs7b0NBQ1pSLE1BQU1xQixnQkFBZ0IsQ0FBQ2YsT0FBTyxDQUFDO29DQUFHOzs7Ozs7OzBDQUVyQyw4REFBQ0M7Z0NBQUlDLFdBQVU7MENBQTJDOzs7Ozs7Ozs7Ozs7Ozs7OztxQ0FNOUQsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0U7a0NBQUU7Ozs7OztrQ0FDSCw4REFBQ0M7d0JBQU9DLFNBQVNUO3dCQUFZSyxXQUFVO2tDQUFtQjs7Ozs7Ozs7Ozs7O1lBTTdEUix1QkFDQyw4REFBQ087Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNEO29CQUFJQyxXQUFVOztzQ0FDYiw4REFBQ2M7NEJBQUtkLFdBQVU7O2dDQUEyQztnQ0FDMUMsSUFBSWUsT0FBT0Msa0JBQWtCOzs7Ozs7O3NDQUU5Qyw4REFBQ2I7NEJBQ0NDLFNBQVNUOzRCQUNUc0IsVUFBVXhCOzRCQUNWTyxXQUFVO3NDQUVUUCxZQUFZLGtCQUFrQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPN0M7R0FyR2dCRjs7UUFDa0NELGlFQUFjQTs7O0tBRGhEQyIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vYXBwL2NvbXBvbmVudHMvVXR4b1N0YXRzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlVXR4b0luZGV4ZXIgfSBmcm9tIFwiLi4vaG9va3MvdXNlVXR4b0luZGV4ZXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFV0eG9TdGF0cygpIHtcbiAgY29uc3QgeyBzdGF0cywgaXNMb2FkaW5nLCBlcnJvciwgZmV0Y2hTdGF0cyB9ID0gdXNlVXR4b0luZGV4ZXIoKTtcblxuICBjb25zdCBmb3JtYXRCVEMgPSAoc2F0czogbnVtYmVyKSA9PiAoc2F0cyAvIDEwMDAwMDAwMCkudG9GaXhlZCg4KTtcblxuICBpZiAoZXJyb3IpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1yZWQtNjAwIGRhcms6dGV4dC1yZWQtNDAwXCI+XG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yXCI+Q29ubmVjdGlvbiBFcnJvcjwvaDM+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbVwiPntlcnJvcn08L3A+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtmZXRjaFN0YXRzfSBjbGFzc05hbWU9XCJidG4tc2Vjb25kYXJ5IG10LTNcIj5cbiAgICAgICAgICAgIFJldHJ5XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XG4gICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LXdoaXRlIG1iLTRcIj5cbiAgICAgICAgVVRYTyBJbmRleGVyIFN0YXRpc3RpY3NcbiAgICAgIDwvaDM+XG5cbiAgICAgIHtpc0xvYWRpbmcgJiYgIXN0YXRzID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuaW1hdGUtcHVsc2VcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTIgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTRcIj5cbiAgICAgICAgICAgIHtbLi4uQXJyYXkoNCldLm1hcCgoXywgaSkgPT4gKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAga2V5PXtpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImgtMTYgYmctZ3JheS0yMDAgZGFyazpiZy1ncmF5LTcwMCByb3VuZGVkXCJcbiAgICAgICAgICAgICAgPjwvZGl2PlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IHN0YXRzID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTIgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWJsdWUtNjAwIGRhcms6dGV4dC1ibHVlLTQwMFwiPlxuICAgICAgICAgICAgICB7c3RhdHMudG90YWxfdXR4b3MudG9Mb2NhbGVTdHJpbmcoKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCI+XG4gICAgICAgICAgICAgIFRvdGFsIFVUWE9zXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtZ3JlZW4tNjAwIGRhcms6dGV4dC1ncmVlbi00MDBcIj5cbiAgICAgICAgICAgICAge2Zvcm1hdEJUQyhzdGF0cy50b3RhbF92YWx1ZSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiPlxuICAgICAgICAgICAgICBUb3RhbCBCVENcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1wdXJwbGUtNjAwIGRhcms6dGV4dC1wdXJwbGUtNDAwXCI+XG4gICAgICAgICAgICAgIHtzdGF0cy5jdXJyZW50X2hlaWdodC50b0xvY2FsZVN0cmluZygpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIj5cbiAgICAgICAgICAgICAgQ3VycmVudCBIZWlnaHRcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1vcmFuZ2UtNjAwIGRhcms6dGV4dC1vcmFuZ2UtNDAwXCI+XG4gICAgICAgICAgICAgIHtzdGF0cy5wcm9ncmVzc19wZXJjZW50LnRvRml4ZWQoMSl9JVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIj5cbiAgICAgICAgICAgICAgU3luYyBQcm9ncmVzc1xuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiPlxuICAgICAgICAgIDxwPk5vIGRhdGEgYXZhaWxhYmxlPC9wPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17ZmV0Y2hTdGF0c30gY2xhc3NOYW1lPVwiYnRuLXByaW1hcnkgbXQtM1wiPlxuICAgICAgICAgICAgTG9hZCBTdGF0c1xuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG5cbiAgICAgIHtzdGF0cyAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNCBwdC00IGJvcmRlci10IGJvcmRlci1ncmF5LTIwMCBkYXJrOmJvcmRlci1ncmF5LTcwMFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCI+XG4gICAgICAgICAgICAgIExhc3QgdXBkYXRlZDoge25ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCl9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2ZldGNoU3RhdHN9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmd9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0bi1zZWNvbmRhcnkgdGV4dC14c1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtpc0xvYWRpbmcgPyBcIlJlZnJlc2hpbmcuLi5cIiA6IFwiUmVmcmVzaFwifVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VVdHhvSW5kZXhlciIsIlV0eG9TdGF0cyIsInN0YXRzIiwiaXNMb2FkaW5nIiwiZXJyb3IiLCJmZXRjaFN0YXRzIiwiZm9ybWF0QlRDIiwic2F0cyIsInRvRml4ZWQiLCJkaXYiLCJjbGFzc05hbWUiLCJoMyIsInAiLCJidXR0b24iLCJvbkNsaWNrIiwiQXJyYXkiLCJtYXAiLCJfIiwiaSIsInRvdGFsX3V0eG9zIiwidG9Mb2NhbGVTdHJpbmciLCJ0b3RhbF92YWx1ZSIsImN1cnJlbnRfaGVpZ2h0IiwicHJvZ3Jlc3NfcGVyY2VudCIsInNwYW4iLCJEYXRlIiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwiZGlzYWJsZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/UtxoStats.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/hooks/usePsbtBuilder.ts":
/*!*************************************!*\
  !*** ./app/hooks/usePsbtBuilder.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePsbtBuilder: () => (/* binding */ usePsbtBuilder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bitcoinjs-lib */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js\")[\"Buffer\"];\n/* __next_internal_client_entry_do_not_use__ usePsbtBuilder auto */ \n\nfunction usePsbtBuilder() {\n    const createPsbt = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"usePsbtBuilder.useCallback[createPsbt]\": async function(utxos, outputs) {\n            let feeRate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, network = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__.networks.regtest;\n            try {\n                const psbt = new bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__.Psbt({\n                    network\n                });\n                // Add inputs from selected UTXOs\n                for (const utxo of utxos){\n                    const [txid, voutStr] = utxo.outpoint.split(\":\");\n                    const vout = parseInt(voutStr, 10);\n                    // For regtest, we'll use a simple witness UTXO\n                    // In production, you'd need to fetch the full transaction or witness UTXO\n                    psbt.addInput({\n                        hash: txid,\n                        index: vout,\n                        witnessUtxo: {\n                            script: Buffer.from(utxo.output.script_pubkey, \"hex\"),\n                            value: utxo.output.value\n                        }\n                    });\n                }\n                // Calculate total input value\n                const totalInput = utxos.reduce({\n                    \"usePsbtBuilder.useCallback[createPsbt].totalInput\": (sum, utxo)=>sum + utxo.output.value\n                }[\"usePsbtBuilder.useCallback[createPsbt].totalInput\"], 0);\n                // Calculate total output value\n                const totalOutput = outputs.reduce({\n                    \"usePsbtBuilder.useCallback[createPsbt].totalOutput\": (sum, output)=>sum + output.value\n                }[\"usePsbtBuilder.useCallback[createPsbt].totalOutput\"], 0);\n                // Add outputs\n                for (const output of outputs){\n                    psbt.addOutput({\n                        address: output.address,\n                        value: output.value\n                    });\n                }\n                // Calculate fee (simple estimation)\n                const estimatedSize = utxos.length * 148 + outputs.length * 34 + 10; // rough estimation\n                const calculatedFee = estimatedSize * feeRate;\n                // Add change output if necessary\n                const change = totalInput - totalOutput - calculatedFee;\n                if (change > 546) {\n                    // dust threshold\n                    // For demo purposes, we'll use a fixed change address\n                    // In production, you'd generate a proper change address\n                    const changeAddress = \"bcrt1qw508d6qejxtdg4y5r3zarvary0c5xw7kygt080\"; // example regtest address\n                    psbt.addOutput({\n                        address: changeAddress,\n                        value: change\n                    });\n                }\n                const psbtBase64 = psbt.toBase64();\n                return {\n                    psbt,\n                    psbtBase64,\n                    fee: calculatedFee,\n                    inputCount: utxos.length,\n                    outputCount: outputs.length + (change > 546 ? 1 : 0)\n                };\n            } catch (error) {\n                console.error(\"PSBT creation failed:\", error);\n                throw new Error(\"Failed to create PSBT: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n            }\n        }\n    }[\"usePsbtBuilder.useCallback[createPsbt]\"], []);\n    const analyzePsbt = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"usePsbtBuilder.useCallback[analyzePsbt]\": (psbtBase64)=>{\n            try {\n                const psbt = bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__.Psbt.fromBase64(psbtBase64);\n                const inputs = psbt.data.inputs.map({\n                    \"usePsbtBuilder.useCallback[analyzePsbt].inputs\": (input, index)=>({\n                            index,\n                            witnessUtxo: input.witnessUtxo,\n                            nonWitnessUtxo: input.nonWitnessUtxo,\n                            sighashType: input.sighashType\n                        })\n                }[\"usePsbtBuilder.useCallback[analyzePsbt].inputs\"]);\n                const outputs = psbt.txOutputs.map({\n                    \"usePsbtBuilder.useCallback[analyzePsbt].outputs\": (output, index)=>({\n                            index,\n                            address: output.address,\n                            value: output.value\n                        })\n                }[\"usePsbtBuilder.useCallback[analyzePsbt].outputs\"]);\n                const totalInput = inputs.reduce({\n                    \"usePsbtBuilder.useCallback[analyzePsbt].totalInput\": (sum, input)=>{\n                        var _input_witnessUtxo;\n                        const value = ((_input_witnessUtxo = input.witnessUtxo) === null || _input_witnessUtxo === void 0 ? void 0 : _input_witnessUtxo.value) || 0;\n                        return sum + value;\n                    }\n                }[\"usePsbtBuilder.useCallback[analyzePsbt].totalInput\"], 0);\n                const totalOutput = outputs.reduce({\n                    \"usePsbtBuilder.useCallback[analyzePsbt].totalOutput\": (sum, output)=>sum + output.value\n                }[\"usePsbtBuilder.useCallback[analyzePsbt].totalOutput\"], 0);\n                const fee = totalInput - totalOutput;\n                return {\n                    inputs,\n                    outputs,\n                    totalInput,\n                    totalOutput,\n                    fee,\n                    inputCount: inputs.length,\n                    outputCount: outputs.length\n                };\n            } catch (error) {\n                console.error(\"PSBT analysis failed:\", error);\n                throw new Error(\"Failed to analyze PSBT: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n            }\n        }\n    }[\"usePsbtBuilder.useCallback[analyzePsbt]\"], []);\n    return {\n        createPsbt,\n        analyzePsbt\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/usePsbtBuilder.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/hooks/useUtxoIndexer.ts":
/*!*************************************!*\
  !*** ./app/hooks/useUtxoIndexer.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useUtxoIndexer: () => (/* binding */ useUtxoIndexer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useUtxoIndexer auto */ \nconst API_BASE = \"http://localhost:3030\" || 0;\nfunction useUtxoIndexer() {\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Helper function for API calls\n    const apiCall = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useUtxoIndexer.useCallback[apiCall]\": async function(endpoint) {\n            let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n            const response = await fetch(\"\".concat(API_BASE).concat(endpoint), {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ...options.headers\n                },\n                ...options\n            });\n            if (!response.ok) {\n                throw new Error(\"API Error: \".concat(response.status));\n            }\n            return response.json();\n        }\n    }[\"useUtxoIndexer.useCallback[apiCall]\"], []);\n    // Fetch current stats\n    const fetchStats = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useUtxoIndexer.useCallback[fetchStats]\": async ()=>{\n            try {\n                setIsLoading(true);\n                const result = await apiCall(\"/stats\");\n                if (result.success) {\n                    setStats(result.data);\n                    setError(null);\n                } else {\n                    setError(result.error);\n                }\n            } catch (err) {\n                setError(err instanceof Error ? err.message : \"Unknown error\");\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useUtxoIndexer.useCallback[fetchStats]\"], [\n        apiCall\n    ]);\n    // Select UTXOs\n    const selectUtxos = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useUtxoIndexer.useCallback[selectUtxos]\": async function(targetAmount) {\n            let strategy = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"largest_first\", maxUtxos = arguments.length > 2 ? arguments[2] : void 0;\n            try {\n                setIsLoading(true);\n                const result = await apiCall(\"/select\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        target_amount: targetAmount,\n                        strategy,\n                        max_utxos: maxUtxos\n                    })\n                });\n                if (result.success) {\n                    setError(null);\n                    return result.data;\n                } else {\n                    setError(result.error);\n                    return null;\n                }\n            } catch (err) {\n                setError(err instanceof Error ? err.message : \"Selection failed\");\n                return null;\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useUtxoIndexer.useCallback[selectUtxos]\"], [\n        apiCall\n    ]);\n    // Get UTXOs with filters\n    const getUtxos = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useUtxoIndexer.useCallback[getUtxos]\": async function() {\n            let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n            try {\n                setIsLoading(true);\n                const params = new URLSearchParams();\n                Object.entries(filters).forEach({\n                    \"useUtxoIndexer.useCallback[getUtxos]\": (param)=>{\n                        let [key, value] = param;\n                        if (value !== undefined) {\n                            params.append(key.replace(/([A-Z])/g, \"_$1\").toLowerCase(), value.toString());\n                        }\n                    }\n                }[\"useUtxoIndexer.useCallback[getUtxos]\"]);\n                const result = await apiCall(\"/utxos\".concat(params.toString() ? \"?\" + params : \"\"));\n                if (result.success) {\n                    setError(null);\n                    return result.data;\n                } else {\n                    setError(result.error);\n                    return [];\n                }\n            } catch (err) {\n                setError(err instanceof Error ? err.message : \"Failed to fetch UTXOs\");\n                return [];\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useUtxoIndexer.useCallback[getUtxos]\"], [\n        apiCall\n    ]);\n    // Check health\n    const checkHealth = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useUtxoIndexer.useCallback[checkHealth]\": async ()=>{\n            try {\n                const result = await apiCall(\"/health\");\n                return result.success ? result.data : null;\n            } catch (err) {\n                console.error(\"Health check failed:\", err);\n                return null;\n            }\n        }\n    }[\"useUtxoIndexer.useCallback[checkHealth]\"], [\n        apiCall\n    ]);\n    // Auto-refresh stats\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useUtxoIndexer.useEffect\": ()=>{\n            fetchStats();\n            const interval = setInterval(fetchStats, 30000); // Refresh every 30 seconds\n            return ({\n                \"useUtxoIndexer.useEffect\": ()=>clearInterval(interval)\n            })[\"useUtxoIndexer.useEffect\"];\n        }\n    }[\"useUtxoIndexer.useEffect\"], [\n        fetchStats\n    ]);\n    return {\n        stats,\n        isLoading,\n        error,\n        fetchStats,\n        selectUtxos,\n        getUtxos,\n        checkHealth\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useUtxoIndexer.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_UtxoStats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/UtxoStats */ \"(app-pages-browser)/./app/components/UtxoStats.tsx\");\n/* harmony import */ var _components_UtxoSelector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/UtxoSelector */ \"(app-pages-browser)/./app/components/UtxoSelector.tsx\");\n/* harmony import */ var _components_PsbtBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/PsbtBuilder */ \"(app-pages-browser)/./app/components/PsbtBuilder.tsx\");\n/* harmony import */ var _components_PsbtSigner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/PsbtSigner */ \"(app-pages-browser)/./app/components/PsbtSigner.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction Home() {\n    _s();\n    const [selectionResult, setSelectionResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [psbtBase64, setPsbtBase64] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleUtxosSelected = (result)=>{\n        setSelectionResult(result);\n        setPsbtBase64(null); // Reset PSBT when new UTXOs are selected\n    };\n    const handlePsbtCreated = (psbt)=>{\n        setPsbtBase64(psbt);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"px-4 sm:px-6 lg:px-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-3xl font-bold text-gray-900 dark:text-white\",\n                        children: \"UTXO PSBT Demo\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"mt-2 text-gray-600 dark:text-gray-400\",\n                        children: \"Demonstrating UTXO selection, PSBT creation, and signing with MIDL integration\"\n                    }, void 0, false, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                lineNumber: 43,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-8\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UtxoStats__WEBPACK_IMPORTED_MODULE_2__.UtxoStats, {}, void 0, false, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                    lineNumber: 55,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                lineNumber: 54,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UtxoSelector__WEBPACK_IMPORTED_MODULE_3__.UtxoSelector, {\n                                onUtxosSelected: handleUtxosSelected\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 11\n                            }, this),\n                            selectionResult && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"card\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                                        children: \"Selection Results\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                        lineNumber: 66,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"space-y-4\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"grid grid-cols-2 gap-4 text-sm\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-gray-500 dark:text-gray-400\",\n                                                                children: [\n                                                                    \"Selected UTXOs:\",\n                                                                    \" \"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 73,\n                                                                columnNumber: 21\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"font-medium\",\n                                                                children: selectionResult.utxos.length\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 76,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 72,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-gray-500 dark:text-gray-400\",\n                                                                children: [\n                                                                    \"Total Amount:\",\n                                                                    \" \"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 81,\n                                                                columnNumber: 21\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"font-medium\",\n                                                                children: [\n                                                                    (selectionResult.total_amount / 100000000).toFixed(8),\n                                                                    \" \",\n                                                                    \"BTC\"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 84,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 80,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-gray-500 dark:text-gray-400\",\n                                                                children: [\n                                                                    \"Change:\",\n                                                                    \" \"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 90,\n                                                                columnNumber: 21\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"font-medium\",\n                                                                children: [\n                                                                    (selectionResult.change_amount / 100000000).toFixed(8),\n                                                                    \" \",\n                                                                    \"BTC\"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 93,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 89,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-gray-500 dark:text-gray-400\",\n                                                                children: [\n                                                                    \"Strategy:\",\n                                                                    \" \"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 99,\n                                                                columnNumber: 21\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"font-medium\",\n                                                                children: selectionResult.strategy\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 102,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 98,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                lineNumber: 71,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                                        className: \"font-medium text-gray-900 dark:text-white mb-2\",\n                                                        children: \"Selected UTXOs:\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 110,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"max-h-40 overflow-y-auto space-y-1\",\n                                                        children: [\n                                                            selectionResult.utxos.slice(0, 10).map((utxo, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    className: \"flex justify-between items-center text-xs bg-gray-50 dark:bg-gray-700 p-2 rounded\",\n                                                                    children: [\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                            className: \"font-mono truncate\",\n                                                                            children: [\n                                                                                utxo.outpoint.slice(0, 20),\n                                                                                \"...\"\n                                                                            ]\n                                                                        }, void 0, true, {\n                                                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                            lineNumber: 119,\n                                                                            columnNumber: 25\n                                                                        }, this),\n                                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                            className: \"font-medium\",\n                                                                            children: [\n                                                                                (utxo.output.value / 100000000).toFixed(8),\n                                                                                \" BTC\"\n                                                                            ]\n                                                                        }, void 0, true, {\n                                                                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                            lineNumber: 122,\n                                                                            columnNumber: 25\n                                                                        }, this)\n                                                                    ]\n                                                                }, index, true, {\n                                                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                    lineNumber: 115,\n                                                                    columnNumber: 23\n                                                                }, this)),\n                                                            selectionResult.utxos.length > 10 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                className: \"text-xs text-gray-500 dark:text-gray-400 text-center\",\n                                                                children: [\n                                                                    \"... and \",\n                                                                    selectionResult.utxos.length - 10,\n                                                                    \" more UTXOs\"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                                lineNumber: 128,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                        lineNumber: 113,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                                lineNumber: 109,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                lineNumber: 65,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PsbtBuilder__WEBPACK_IMPORTED_MODULE_4__.PsbtBuilder, {\n                                selectionResult: selectionResult,\n                                onPsbtCreated: handlePsbtCreated\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                lineNumber: 141,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PsbtSigner__WEBPACK_IMPORTED_MODULE_5__.PsbtSigner, {\n                                psbtBase64: psbtBase64\n                            }, void 0, false, {\n                                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                lineNumber: 146,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                        lineNumber: 140,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                lineNumber: 59,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-12 pt-8 border-t border-gray-200 dark:border-gray-700\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center text-sm text-gray-500 dark:text-gray-400\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"mb-2\",\n                            children: \"This demo showcases the integration between:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                            lineNumber: 153,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-wrap justify-center gap-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded\",\n                                    children: \"UTXO Indexer-Selector\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                    lineNumber: 155,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded\",\n                                    children: \"PSBT Creation\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                    lineNumber: 158,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 px-2 py-1 rounded\",\n                                    children: \"MIDL Signing\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                                    lineNumber: 161,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                            lineNumber: 154,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                    lineNumber: 152,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n                lineNumber: 151,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/btc/midl-x-bitcoin-summit-hackathon-2025/utxo-psbt-demo/app/page.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"M3SCyuKaMxJ0K+Yexl880ybwe4s=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chi: () => (/* binding */ Chi),\n/* harmony export */   HashMD: () => (/* binding */ HashMD),\n/* harmony export */   Maj: () => (/* binding */ Maj),\n/* harmony export */   SHA224_IV: () => (/* binding */ SHA224_IV),\n/* harmony export */   SHA256_IV: () => (/* binding */ SHA256_IV),\n/* harmony export */   SHA384_IV: () => (/* binding */ SHA384_IV),\n/* harmony export */   SHA512_IV: () => (/* binding */ SHA512_IV),\n/* harmony export */   setBigUint64: () => (/* binding */ setBigUint64)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js\");\n/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nfunction Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nfunction Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);\n    }\n    update(data) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aoutput)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clean)(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nconst SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nconst SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nconst SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nconst SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   add3H: () => (/* binding */ add3H),\n/* harmony export */   add3L: () => (/* binding */ add3L),\n/* harmony export */   add4H: () => (/* binding */ add4H),\n/* harmony export */   add4L: () => (/* binding */ add4L),\n/* harmony export */   add5H: () => (/* binding */ add5H),\n/* harmony export */   add5L: () => (/* binding */ add5L),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   rotlBH: () => (/* binding */ rotlBH),\n/* harmony export */   rotlBL: () => (/* binding */ rotlBL),\n/* harmony export */   rotlSH: () => (/* binding */ rotlSH),\n/* harmony export */   rotlSL: () => (/* binding */ rotlSL),\n/* harmony export */   rotr32H: () => (/* binding */ rotr32H),\n/* harmony export */   rotr32L: () => (/* binding */ rotr32L),\n/* harmony export */   rotrBH: () => (/* binding */ rotrBH),\n/* harmony export */   rotrBL: () => (/* binding */ rotrBL),\n/* harmony export */   rotrSH: () => (/* binding */ rotrSH),\n/* harmony export */   rotrSL: () => (/* binding */ rotrSL),\n/* harmony export */   shrSH: () => (/* binding */ shrSH),\n/* harmony export */   shrSL: () => (/* binding */ shrSL),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\n/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0IsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNnTDtBQUNoTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxHQUFHLEVBQUM7QUFDbkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW50ZXJuYWwgaGVscGVycyBmb3IgdTY0LiBCaWdVaW50NjRBcnJheSBpcyB0b28gc2xvdyBhcyBwZXIgMjAyNSwgc28gd2UgaW1wbGVtZW50IGl0IHVzaW5nIFVpbnQzMkFycmF5LlxuICogQHRvZG8gcmUtY2hlY2sgaHR0cHM6Ly9pc3N1ZXMuY2hyb21pdW0ub3JnL2lzc3Vlcy80MjIxMjU4OFxuICogQG1vZHVsZVxuICovXG5jb25zdCBVMzJfTUFTSzY0ID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyICoqIDMyIC0gMSk7XG5jb25zdCBfMzJuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgzMik7XG5mdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZnVuY3Rpb24gc3BsaXQobHN0LCBsZSA9IGZhbHNlKSB7XG4gICAgY29uc3QgbGVuID0gbHN0Lmxlbmd0aDtcbiAgICBsZXQgQWggPSBuZXcgVWludDMyQXJyYXkobGVuKTtcbiAgICBsZXQgQWwgPSBuZXcgVWludDMyQXJyYXkobGVuKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHsgaCwgbCB9ID0gZnJvbUJpZyhsc3RbaV0sIGxlKTtcbiAgICAgICAgW0FoW2ldLCBBbFtpXV0gPSBbaCwgbF07XG4gICAgfVxuICAgIHJldHVybiBbQWgsIEFsXTtcbn1cbmNvbnN0IHRvQmlnID0gKGgsIGwpID0+IChCaWdJbnQoaCA+Pj4gMCkgPDwgXzMybikgfCBCaWdJbnQobCA+Pj4gMCk7XG4vLyBmb3IgU2hpZnQgaW4gWzAsIDMyKVxuY29uc3Qgc2hyU0ggPSAoaCwgX2wsIHMpID0+IGggPj4+IHM7XG5jb25zdCBzaHJTTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoMzIgLSBzKSkgfCAobCA+Pj4gcyk7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdHJTSCA9IChoLCBsLCBzKSA9PiAoaCA+Pj4gcykgfCAobCA8PCAoMzIgLSBzKSk7XG5jb25zdCByb3RyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90ckJIID0gKGgsIGwsIHMpID0+IChoIDw8ICg2NCAtIHMpKSB8IChsID4+PiAocyAtIDMyKSk7XG5jb25zdCByb3RyQkwgPSAoaCwgbCwgcykgPT4gKGggPj4+IChzIC0gMzIpKSB8IChsIDw8ICg2NCAtIHMpKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3Igc2hpZnQ9PT0zMiAoanVzdCBzd2FwcyBsJmgpXG5jb25zdCByb3RyMzJIID0gKF9oLCBsKSA9PiBsO1xuY29uc3Qgcm90cjMyTCA9IChoLCBfbCkgPT4gaDtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RsU0ggPSAoaCwgbCwgcykgPT4gKGggPDwgcykgfCAobCA+Pj4gKDMyIC0gcykpO1xuY29uc3Qgcm90bFNMID0gKGgsIGwsIHMpID0+IChsIDw8IHMpIHwgKGggPj4+ICgzMiAtIHMpKTtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90bEJIID0gKGgsIGwsIHMpID0+IChsIDw8IChzIC0gMzIpKSB8IChoID4+PiAoNjQgLSBzKSk7XG5jb25zdCByb3RsQkwgPSAoaCwgbCwgcykgPT4gKGggPDwgKHMgLSAzMikpIHwgKGwgPj4+ICg2NCAtIHMpKTtcbi8vIEpTIHVzZXMgMzItYml0IHNpZ25lZCBpbnRlZ2VycyBmb3IgYml0d2lzZSBvcGVyYXRpb25zIHdoaWNoIG1lYW5zIHdlIGNhbm5vdFxuLy8gc2ltcGxlIHRha2UgY2Fycnkgb3V0IG9mIGxvdyBiaXQgc3VtIGJ5IHNoaWZ0LCB3ZSBuZWVkIHRvIHVzZSBkaXZpc2lvbi5cbmZ1bmN0aW9uIGFkZChBaCwgQWwsIEJoLCBCbCkge1xuICAgIGNvbnN0IGwgPSAoQWwgPj4+IDApICsgKEJsID4+PiAwKTtcbiAgICByZXR1cm4geyBoOiAoQWggKyBCaCArICgobCAvIDIgKiogMzIpIHwgMCkpIHwgMCwgbDogbCB8IDAgfTtcbn1cbi8vIEFkZGl0aW9uIHdpdGggbW9yZSB0aGFuIDIgZWxlbWVudHNcbmNvbnN0IGFkZDNMID0gKEFsLCBCbCwgQ2wpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKTtcbmNvbnN0IGFkZDNIID0gKGxvdywgQWgsIEJoLCBDaCkgPT4gKEFoICsgQmggKyBDaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuY29uc3QgYWRkNEwgPSAoQWwsIEJsLCBDbCwgRGwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCk7XG5jb25zdCBhZGQ0SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoKSA9PiAoQWggKyBCaCArIENoICsgRGggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDVMID0gKEFsLCBCbCwgQ2wsIERsLCBFbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApICsgKERsID4+PiAwKSArIChFbCA+Pj4gMCk7XG5jb25zdCBhZGQ1SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoLCBFaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgRWggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbi8vIHByZXR0aWVyLWlnbm9yZVxuZXhwb3J0IHsgYWRkLCBhZGQzSCwgYWRkM0wsIGFkZDRILCBhZGQ0TCwgYWRkNUgsIGFkZDVMLCBmcm9tQmlnLCByb3RsQkgsIHJvdGxCTCwgcm90bFNILCByb3RsU0wsIHJvdHIzMkgsIHJvdHIzMkwsIHJvdHJCSCwgcm90ckJMLCByb3RyU0gsIHJvdHJTTCwgc2hyU0gsIHNoclNMLCBzcGxpdCwgdG9CaWcgfTtcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgdTY0ID0ge1xuICAgIGZyb21CaWcsIHNwbGl0LCB0b0JpZyxcbiAgICBzaHJTSCwgc2hyU0wsXG4gICAgcm90clNILCByb3RyU0wsIHJvdHJCSCwgcm90ckJMLFxuICAgIHJvdHIzMkgsIHJvdHIzMkwsXG4gICAgcm90bFNILCByb3RsU0wsIHJvdGxCSCwgcm90bEJMLFxuICAgIGFkZCwgYWRkM0wsIGFkZDNILCBhZGQ0TCwgYWRkNEgsIGFkZDVILCBhZGQ1TCxcbn07XG5leHBvcnQgZGVmYXVsdCB1NjQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fdTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/crypto.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/crypto.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto)\n/* harmony export */ });\nconst crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNyeXB0byA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JyAmJiAnY3J5cHRvJyBpbiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcy5jcnlwdG8gOiB1bmRlZmluZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/legacy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/legacy.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MD5: () => (/* binding */ MD5),\n/* harmony export */   RIPEMD160: () => (/* binding */ RIPEMD160),\n/* harmony export */   SHA1: () => (/* binding */ SHA1),\n/* harmony export */   md5: () => (/* binding */ md5),\n/* harmony export */   ripemd160: () => (/* binding */ ripemd160),\n/* harmony export */   sha1: () => (/* binding */ sha1)\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js\");\n/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\n\n\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n/** SHA1 legacy hash class. */\nclass SHA1 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor() {\n        super(64, 20, 8, false);\n        this.A = SHA1_IV[0] | 0;\n        this.B = SHA1_IV[1] | 0;\n        this.C = SHA1_IV[2] | 0;\n        this.D = SHA1_IV[3] | 0;\n        this.E = SHA1_IV[4] | 0;\n    }\n    get() {\n        const { A, B, C, D, E } = this;\n        return [A, B, C, D, E];\n    }\n    set(A, B, C, D, E) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA1_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 80; i++)\n            SHA1_W[i] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n        // Compression function main loop, 80 rounds\n        let { A, B, C, D, E } = this;\n        for (let i = 0; i < 80; i++) {\n            let F, K;\n            if (i < 20) {\n                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(B, C, D);\n                K = 0x5a827999;\n            }\n            else if (i < 40) {\n                F = B ^ C ^ D;\n                K = 0x6ed9eba1;\n            }\n            else if (i < 60) {\n                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(B, C, D);\n                K = 0x8f1bbcdc;\n            }\n            else {\n                F = B ^ C ^ D;\n                K = 0xca62c1d6;\n            }\n            const T = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(A, 5) + F + E + K + SHA1_W[i]) | 0;\n            E = D;\n            D = C;\n            C = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(B, 30);\n            B = A;\n            A = T;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        this.set(A, B, C, D, E);\n    }\n    roundClean() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(SHA1_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);\n    }\n}\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nconst sha1 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA1());\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) => Math.floor(p32 * Math.abs(Math.sin(i + 1))));\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nclass MD5 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor() {\n        super(64, 16, 8, true);\n        this.A = MD5_IV[0] | 0;\n        this.B = MD5_IV[1] | 0;\n        this.C = MD5_IV[2] | 0;\n        this.D = MD5_IV[3] | 0;\n    }\n    get() {\n        const { A, B, C, D } = this;\n        return [A, B, C, D];\n    }\n    set(A, B, C, D) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            MD5_W[i] = view.getUint32(offset, true);\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D } = this;\n        for (let i = 0; i < 64; i++) {\n            let F, g, s;\n            if (i < 16) {\n                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(B, C, D);\n                g = i;\n                s = [7, 12, 17, 22];\n            }\n            else if (i < 32) {\n                F = (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(D, B, C);\n                g = (5 * i + 1) % 16;\n                s = [5, 9, 14, 20];\n            }\n            else if (i < 48) {\n                F = B ^ C ^ D;\n                g = (3 * i + 5) % 16;\n                s = [4, 11, 16, 23];\n            }\n            else {\n                F = C ^ (B | ~D);\n                g = (7 * i) % 16;\n                s = [6, 10, 15, 21];\n            }\n            F = F + A + K[i] + MD5_W[g];\n            A = D;\n            D = C;\n            C = B;\n            B = B + (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(F, s[i % 4]);\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        this.set(A, B, C, D);\n    }\n    roundClean() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(MD5_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);\n    }\n}\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nconst md5 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new MD5());\n// RIPEMD-160\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n    const L = [Id160];\n    const R = [Pi160];\n    const res = [L, R];\n    for (let i = 0; i < 4; i++)\n        for (let j of res)\n            j.push(j[i].map((k) => Rho160[k]));\n    return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\nconst shifts160 = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    if (group === 1)\n        return (x & y) | (~x & z);\n    if (group === 2)\n        return (x | ~y) ^ z;\n    if (group === 3)\n        return (x & z) | (y & ~z);\n    return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nclass RIPEMD160 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF_160[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotl)(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(BUF_160);\n    }\n    destroy() {\n        this.destroyed = true;\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nconst ripemd160 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new RIPEMD160());\n//# sourceMappingURL=legacy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9sZWdhY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEM7QUFDVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG1CQUFtQiwwQ0FBTTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQyx3QkFBd0IsK0NBQUk7QUFDNUI7QUFDQSxjQUFjLGdCQUFnQjtBQUM5Qix3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0Esb0JBQW9CLDJDQUFHO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJDQUFHO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrQ0FBSTtBQUMzQjtBQUNBO0FBQ0EsZ0JBQWdCLCtDQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ08sNkJBQTZCLHVEQUFZO0FBQ2hEO0FBQ0E7QUFDQSx1Q0FBdUMsWUFBWTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sa0JBQWtCLDBDQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsYUFBYTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0EsY0FBYyxhQUFhO0FBQzNCLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQSxvQkFBb0IsMkNBQUc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkNBQUc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQ0FBSTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0QkFBNEIsdURBQVk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3QiwwQ0FBTTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscUJBQXFCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXO0FBQ3ZDO0FBQ0EsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCxrRUFBa0U7QUFDbEUsNEJBQTRCLFFBQVE7QUFDcEMsNEJBQTRCLCtDQUFJO0FBQ2hDLHVDQUF1QywrQ0FBSSxnQ0FBZ0M7QUFDM0U7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDLDRCQUE0QiwrQ0FBSTtBQUNoQyx1Q0FBdUMsK0NBQUksZ0NBQWdDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyx1REFBWTtBQUNyRCIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL0Bub2JsZStoYXNoZXNAMS44LjAvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2xlZ2FjeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcblxuU0hBMSAoUkZDIDMxNzQpLCBNRDUgKFJGQyAxMzIxKSBhbmQgUklQRU1EMTYwIChSRkMgMjI4NikgbGVnYWN5LCB3ZWFrIGhhc2ggZnVuY3Rpb25zLlxuRG9uJ3QgdXNlIHRoZW0gaW4gYSBuZXcgcHJvdG9jb2wuIFdoYXQgXCJ3ZWFrXCIgbWVhbnM6XG5cbi0gQ29sbGlzaW9ucyBjYW4gYmUgbWFkZSB3aXRoIDJeMTggZWZmb3J0IGluIE1ENSwgMl42MCBpbiBTSEExLCAyXjgwIGluIFJJUEVNRDE2MC5cbi0gTm8gcHJhY3RpY2FsIHByZS1pbWFnZSBhdHRhY2tzIChvbmx5IHRoZW9yZXRpY2FsLCAyXjEyMy40KVxuLSBITUFDIHNlZW1zIGtpbmRhIG9rOiBodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzYxNTFcbiAqIEBtb2R1bGVcbiAqL1xuaW1wb3J0IHsgQ2hpLCBIYXNoTUQsIE1haiB9IGZyb20gXCIuL19tZC5qc1wiO1xuaW1wb3J0IHsgY2xlYW4sIGNyZWF0ZUhhc2hlciwgcm90bCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG4vKiogSW5pdGlhbCBTSEExIHN0YXRlICovXG5jb25zdCBTSEExX0lWID0gLyogQF9fUFVSRV9fICovIFVpbnQzMkFycmF5LmZyb20oW1xuICAgIDB4Njc0NTIzMDEsIDB4ZWZjZGFiODksIDB4OThiYWRjZmUsIDB4MTAzMjU0NzYsIDB4YzNkMmUxZjAsXG5dKTtcbi8vIFJldXNhYmxlIHRlbXBvcmFyeSBidWZmZXJcbmNvbnN0IFNIQTFfVyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgVWludDMyQXJyYXkoODApO1xuLyoqIFNIQTEgbGVnYWN5IGhhc2ggY2xhc3MuICovXG5leHBvcnQgY2xhc3MgU0hBMSBleHRlbmRzIEhhc2hNRCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKDY0LCAyMCwgOCwgZmFsc2UpO1xuICAgICAgICB0aGlzLkEgPSBTSEExX0lWWzBdIHwgMDtcbiAgICAgICAgdGhpcy5CID0gU0hBMV9JVlsxXSB8IDA7XG4gICAgICAgIHRoaXMuQyA9IFNIQTFfSVZbMl0gfCAwO1xuICAgICAgICB0aGlzLkQgPSBTSEExX0lWWzNdIHwgMDtcbiAgICAgICAgdGhpcy5FID0gU0hBMV9JVls0XSB8IDA7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBBLCBCLCBDLCBELCBFIH0gPSB0aGlzO1xuICAgICAgICByZXR1cm4gW0EsIEIsIEMsIEQsIEVdO1xuICAgIH1cbiAgICBzZXQoQSwgQiwgQywgRCwgRSkge1xuICAgICAgICB0aGlzLkEgPSBBIHwgMDtcbiAgICAgICAgdGhpcy5CID0gQiB8IDA7XG4gICAgICAgIHRoaXMuQyA9IEMgfCAwO1xuICAgICAgICB0aGlzLkQgPSBEIHwgMDtcbiAgICAgICAgdGhpcy5FID0gRSB8IDA7XG4gICAgfVxuICAgIHByb2Nlc3Modmlldywgb2Zmc2V0KSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7IGkrKywgb2Zmc2V0ICs9IDQpXG4gICAgICAgICAgICBTSEExX1dbaV0gPSB2aWV3LmdldFVpbnQzMihvZmZzZXQsIGZhbHNlKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDE2OyBpIDwgODA7IGkrKylcbiAgICAgICAgICAgIFNIQTFfV1tpXSA9IHJvdGwoU0hBMV9XW2kgLSAzXSBeIFNIQTFfV1tpIC0gOF0gXiBTSEExX1dbaSAtIDE0XSBeIFNIQTFfV1tpIC0gMTZdLCAxKTtcbiAgICAgICAgLy8gQ29tcHJlc3Npb24gZnVuY3Rpb24gbWFpbiBsb29wLCA4MCByb3VuZHNcbiAgICAgICAgbGV0IHsgQSwgQiwgQywgRCwgRSB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4MDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgRiwgSztcbiAgICAgICAgICAgIGlmIChpIDwgMjApIHtcbiAgICAgICAgICAgICAgICBGID0gQ2hpKEIsIEMsIEQpO1xuICAgICAgICAgICAgICAgIEsgPSAweDVhODI3OTk5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaSA8IDQwKSB7XG4gICAgICAgICAgICAgICAgRiA9IEIgXiBDIF4gRDtcbiAgICAgICAgICAgICAgICBLID0gMHg2ZWQ5ZWJhMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGkgPCA2MCkge1xuICAgICAgICAgICAgICAgIEYgPSBNYWooQiwgQywgRCk7XG4gICAgICAgICAgICAgICAgSyA9IDB4OGYxYmJjZGM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBGID0gQiBeIEMgXiBEO1xuICAgICAgICAgICAgICAgIEsgPSAweGNhNjJjMWQ2O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgVCA9IChyb3RsKEEsIDUpICsgRiArIEUgKyBLICsgU0hBMV9XW2ldKSB8IDA7XG4gICAgICAgICAgICBFID0gRDtcbiAgICAgICAgICAgIEQgPSBDO1xuICAgICAgICAgICAgQyA9IHJvdGwoQiwgMzApO1xuICAgICAgICAgICAgQiA9IEE7XG4gICAgICAgICAgICBBID0gVDtcbiAgICAgICAgfVxuICAgICAgICAvLyBBZGQgdGhlIGNvbXByZXNzZWQgY2h1bmsgdG8gdGhlIGN1cnJlbnQgaGFzaCB2YWx1ZVxuICAgICAgICBBID0gKEEgKyB0aGlzLkEpIHwgMDtcbiAgICAgICAgQiA9IChCICsgdGhpcy5CKSB8IDA7XG4gICAgICAgIEMgPSAoQyArIHRoaXMuQykgfCAwO1xuICAgICAgICBEID0gKEQgKyB0aGlzLkQpIHwgMDtcbiAgICAgICAgRSA9IChFICsgdGhpcy5FKSB8IDA7XG4gICAgICAgIHRoaXMuc2V0KEEsIEIsIEMsIEQsIEUpO1xuICAgIH1cbiAgICByb3VuZENsZWFuKCkge1xuICAgICAgICBjbGVhbihTSEExX1cpO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLnNldCgwLCAwLCAwLCAwLCAwKTtcbiAgICAgICAgY2xlYW4odGhpcy5idWZmZXIpO1xuICAgIH1cbn1cbi8qKiBTSEExIChSRkMgMzE3NCkgbGVnYWN5IGhhc2ggZnVuY3Rpb24uIEl0IHdhcyBjcnlwdG9ncmFwaGljYWxseSBicm9rZW4uICovXG5leHBvcnQgY29uc3Qgc2hhMSA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVIYXNoZXIoKCkgPT4gbmV3IFNIQTEoKSk7XG4vKiogUGVyLXJvdW5kIGNvbnN0YW50cyAqL1xuY29uc3QgcDMyID0gLyogQF9fUFVSRV9fICovIE1hdGgucG93KDIsIDMyKTtcbmNvbnN0IEsgPSAvKiBAX19QVVJFX18gKi8gQXJyYXkuZnJvbSh7IGxlbmd0aDogNjQgfSwgKF8sIGkpID0+IE1hdGguZmxvb3IocDMyICogTWF0aC5hYnMoTWF0aC5zaW4oaSArIDEpKSkpO1xuLyoqIG1kNSBpbml0aWFsIHN0YXRlOiBzYW1lIGFzIHNoYTEsIGJ1dCA0IHUzMiBpbnN0ZWFkIG9mIDUuICovXG5jb25zdCBNRDVfSVYgPSAvKiBAX19QVVJFX18gKi8gU0hBMV9JVi5zbGljZSgwLCA0KTtcbi8vIFJldXNhYmxlIHRlbXBvcmFyeSBidWZmZXJcbmNvbnN0IE1ENV9XID0gLyogQF9fUFVSRV9fICovIG5ldyBVaW50MzJBcnJheSgxNik7XG4vKiogTUQ1IGxlZ2FjeSBoYXNoIGNsYXNzLiAqL1xuZXhwb3J0IGNsYXNzIE1ENSBleHRlbmRzIEhhc2hNRCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKDY0LCAxNiwgOCwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuQSA9IE1ENV9JVlswXSB8IDA7XG4gICAgICAgIHRoaXMuQiA9IE1ENV9JVlsxXSB8IDA7XG4gICAgICAgIHRoaXMuQyA9IE1ENV9JVlsyXSB8IDA7XG4gICAgICAgIHRoaXMuRCA9IE1ENV9JVlszXSB8IDA7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBBLCBCLCBDLCBEIH0gPSB0aGlzO1xuICAgICAgICByZXR1cm4gW0EsIEIsIEMsIERdO1xuICAgIH1cbiAgICBzZXQoQSwgQiwgQywgRCkge1xuICAgICAgICB0aGlzLkEgPSBBIHwgMDtcbiAgICAgICAgdGhpcy5CID0gQiB8IDA7XG4gICAgICAgIHRoaXMuQyA9IEMgfCAwO1xuICAgICAgICB0aGlzLkQgPSBEIHwgMDtcbiAgICB9XG4gICAgcHJvY2Vzcyh2aWV3LCBvZmZzZXQpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgaSsrLCBvZmZzZXQgKz0gNClcbiAgICAgICAgICAgIE1ENV9XW2ldID0gdmlldy5nZXRVaW50MzIob2Zmc2V0LCB0cnVlKTtcbiAgICAgICAgLy8gQ29tcHJlc3Npb24gZnVuY3Rpb24gbWFpbiBsb29wLCA2NCByb3VuZHNcbiAgICAgICAgbGV0IHsgQSwgQiwgQywgRCB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2NDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgRiwgZywgcztcbiAgICAgICAgICAgIGlmIChpIDwgMTYpIHtcbiAgICAgICAgICAgICAgICBGID0gQ2hpKEIsIEMsIEQpO1xuICAgICAgICAgICAgICAgIGcgPSBpO1xuICAgICAgICAgICAgICAgIHMgPSBbNywgMTIsIDE3LCAyMl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpIDwgMzIpIHtcbiAgICAgICAgICAgICAgICBGID0gQ2hpKEQsIEIsIEMpO1xuICAgICAgICAgICAgICAgIGcgPSAoNSAqIGkgKyAxKSAlIDE2O1xuICAgICAgICAgICAgICAgIHMgPSBbNSwgOSwgMTQsIDIwXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGkgPCA0OCkge1xuICAgICAgICAgICAgICAgIEYgPSBCIF4gQyBeIEQ7XG4gICAgICAgICAgICAgICAgZyA9ICgzICogaSArIDUpICUgMTY7XG4gICAgICAgICAgICAgICAgcyA9IFs0LCAxMSwgMTYsIDIzXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIEYgPSBDIF4gKEIgfCB+RCk7XG4gICAgICAgICAgICAgICAgZyA9ICg3ICogaSkgJSAxNjtcbiAgICAgICAgICAgICAgICBzID0gWzYsIDEwLCAxNSwgMjFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgRiA9IEYgKyBBICsgS1tpXSArIE1ENV9XW2ddO1xuICAgICAgICAgICAgQSA9IEQ7XG4gICAgICAgICAgICBEID0gQztcbiAgICAgICAgICAgIEMgPSBCO1xuICAgICAgICAgICAgQiA9IEIgKyByb3RsKEYsIHNbaSAlIDRdKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBZGQgdGhlIGNvbXByZXNzZWQgY2h1bmsgdG8gdGhlIGN1cnJlbnQgaGFzaCB2YWx1ZVxuICAgICAgICBBID0gKEEgKyB0aGlzLkEpIHwgMDtcbiAgICAgICAgQiA9IChCICsgdGhpcy5CKSB8IDA7XG4gICAgICAgIEMgPSAoQyArIHRoaXMuQykgfCAwO1xuICAgICAgICBEID0gKEQgKyB0aGlzLkQpIHwgMDtcbiAgICAgICAgdGhpcy5zZXQoQSwgQiwgQywgRCk7XG4gICAgfVxuICAgIHJvdW5kQ2xlYW4oKSB7XG4gICAgICAgIGNsZWFuKE1ENV9XKTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5zZXQoMCwgMCwgMCwgMCk7XG4gICAgICAgIGNsZWFuKHRoaXMuYnVmZmVyKTtcbiAgICB9XG59XG4vKipcbiAqIE1ENSAoUkZDIDEzMjEpIGxlZ2FjeSBoYXNoIGZ1bmN0aW9uLiBJdCB3YXMgY3J5cHRvZ3JhcGhpY2FsbHkgYnJva2VuLlxuICogTUQ1IGFyY2hpdGVjdHVyZSBpcyBzaW1pbGFyIHRvIFNIQTEsIHdpdGggc29tZSBkaWZmZXJlbmNlczpcbiAqIC0gUmVkdWNlZCBvdXRwdXQgbGVuZ3RoOiAxNiBieXRlcyAoMTI4IGJpdCkgaW5zdGVhZCBvZiAyMFxuICogLSA2NCByb3VuZHMsIGluc3RlYWQgb2YgODBcbiAqIC0gTGl0dGxlLWVuZGlhbjogY291bGQgYmUgZmFzdGVyLCBidXQgd2lsbCByZXF1aXJlIG1vcmUgY29kZVxuICogLSBOb24tbGluZWFyIGluZGV4IHNlbGVjdGlvbjogaHVnZSBzcGVlZC11cCBmb3IgdW5yb2xsXG4gKiAtIFBlciByb3VuZCBjb25zdGFudHM6IG1vcmUgbWVtb3J5IGFjY2Vzc2VzLCBhZGRpdGlvbmFsIHNwZWVkLXVwIGZvciB1bnJvbGxcbiAqL1xuZXhwb3J0IGNvbnN0IG1kNSA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVIYXNoZXIoKCkgPT4gbmV3IE1ENSgpKTtcbi8vIFJJUEVNRC0xNjBcbmNvbnN0IFJobzE2MCA9IC8qIEBfX1BVUkVfXyAqLyBVaW50OEFycmF5LmZyb20oW1xuICAgIDcsIDQsIDEzLCAxLCAxMCwgNiwgMTUsIDMsIDEyLCAwLCA5LCA1LCAyLCAxNCwgMTEsIDgsXG5dKTtcbmNvbnN0IElkMTYwID0gLyogQF9fUFVSRV9fICovICgoKSA9PiBVaW50OEFycmF5LmZyb20obmV3IEFycmF5KDE2KS5maWxsKDApLm1hcCgoXywgaSkgPT4gaSkpKSgpO1xuY29uc3QgUGkxNjAgPSAvKiBAX19QVVJFX18gKi8gKCgpID0+IElkMTYwLm1hcCgoaSkgPT4gKDkgKiBpICsgNSkgJSAxNikpKCk7XG5jb25zdCBpZHhMUiA9IC8qIEBfX1BVUkVfXyAqLyAoKCkgPT4ge1xuICAgIGNvbnN0IEwgPSBbSWQxNjBdO1xuICAgIGNvbnN0IFIgPSBbUGkxNjBdO1xuICAgIGNvbnN0IHJlcyA9IFtMLCBSXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKylcbiAgICAgICAgZm9yIChsZXQgaiBvZiByZXMpXG4gICAgICAgICAgICBqLnB1c2goaltpXS5tYXAoKGspID0+IFJobzE2MFtrXSkpO1xuICAgIHJldHVybiByZXM7XG59KSgpO1xuY29uc3QgaWR4TCA9IC8qIEBfX1BVUkVfXyAqLyAoKCkgPT4gaWR4TFJbMF0pKCk7XG5jb25zdCBpZHhSID0gLyogQF9fUFVSRV9fICovICgoKSA9PiBpZHhMUlsxXSkoKTtcbi8vIGNvbnN0IFtpZHhMLCBpZHhSXSA9IGlkeExSO1xuY29uc3Qgc2hpZnRzMTYwID0gLyogQF9fUFVSRV9fICovIFtcbiAgICBbMTEsIDE0LCAxNSwgMTIsIDUsIDgsIDcsIDksIDExLCAxMywgMTQsIDE1LCA2LCA3LCA5LCA4XSxcbiAgICBbMTIsIDEzLCAxMSwgMTUsIDYsIDksIDksIDcsIDEyLCAxNSwgMTEsIDEzLCA3LCA4LCA3LCA3XSxcbiAgICBbMTMsIDE1LCAxNCwgMTEsIDcsIDcsIDYsIDgsIDEzLCAxNCwgMTMsIDEyLCA1LCA1LCA2LCA5XSxcbiAgICBbMTQsIDExLCAxMiwgMTQsIDgsIDYsIDUsIDUsIDE1LCAxMiwgMTUsIDE0LCA5LCA5LCA4LCA2XSxcbiAgICBbMTUsIDEyLCAxMywgMTMsIDksIDUsIDgsIDYsIDE0LCAxMSwgMTIsIDExLCA4LCA2LCA1LCA1XSxcbl0ubWFwKChpKSA9PiBVaW50OEFycmF5LmZyb20oaSkpO1xuY29uc3Qgc2hpZnRzTDE2MCA9IC8qIEBfX1BVUkVfXyAqLyBpZHhMLm1hcCgoaWR4LCBpKSA9PiBpZHgubWFwKChqKSA9PiBzaGlmdHMxNjBbaV1bal0pKTtcbmNvbnN0IHNoaWZ0c1IxNjAgPSAvKiBAX19QVVJFX18gKi8gaWR4Ui5tYXAoKGlkeCwgaSkgPT4gaWR4Lm1hcCgoaikgPT4gc2hpZnRzMTYwW2ldW2pdKSk7XG5jb25zdCBLbDE2MCA9IC8qIEBfX1BVUkVfXyAqLyBVaW50MzJBcnJheS5mcm9tKFtcbiAgICAweDAwMDAwMDAwLCAweDVhODI3OTk5LCAweDZlZDllYmExLCAweDhmMWJiY2RjLCAweGE5NTNmZDRlLFxuXSk7XG5jb25zdCBLcjE2MCA9IC8qIEBfX1BVUkVfXyAqLyBVaW50MzJBcnJheS5mcm9tKFtcbiAgICAweDUwYTI4YmU2LCAweDVjNGRkMTI0LCAweDZkNzAzZWYzLCAweDdhNmQ3NmU5LCAweDAwMDAwMDAwLFxuXSk7XG4vLyBJdCdzIGNhbGxlZCBmKCkgaW4gc3BlYy5cbmZ1bmN0aW9uIHJpcGVtZF9mKGdyb3VwLCB4LCB5LCB6KSB7XG4gICAgaWYgKGdyb3VwID09PSAwKVxuICAgICAgICByZXR1cm4geCBeIHkgXiB6O1xuICAgIGlmIChncm91cCA9PT0gMSlcbiAgICAgICAgcmV0dXJuICh4ICYgeSkgfCAofnggJiB6KTtcbiAgICBpZiAoZ3JvdXAgPT09IDIpXG4gICAgICAgIHJldHVybiAoeCB8IH55KSBeIHo7XG4gICAgaWYgKGdyb3VwID09PSAzKVxuICAgICAgICByZXR1cm4gKHggJiB6KSB8ICh5ICYgfnopO1xuICAgIHJldHVybiB4IF4gKHkgfCB+eik7XG59XG4vLyBSZXVzYWJsZSB0ZW1wb3JhcnkgYnVmZmVyXG5jb25zdCBCVUZfMTYwID0gLyogQF9fUFVSRV9fICovIG5ldyBVaW50MzJBcnJheSgxNik7XG5leHBvcnQgY2xhc3MgUklQRU1EMTYwIGV4dGVuZHMgSGFzaE1EIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoNjQsIDIwLCA4LCB0cnVlKTtcbiAgICAgICAgdGhpcy5oMCA9IDB4Njc0NTIzMDEgfCAwO1xuICAgICAgICB0aGlzLmgxID0gMHhlZmNkYWI4OSB8IDA7XG4gICAgICAgIHRoaXMuaDIgPSAweDk4YmFkY2ZlIHwgMDtcbiAgICAgICAgdGhpcy5oMyA9IDB4MTAzMjU0NzYgfCAwO1xuICAgICAgICB0aGlzLmg0ID0gMHhjM2QyZTFmMCB8IDA7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBoMCwgaDEsIGgyLCBoMywgaDQgfSA9IHRoaXM7XG4gICAgICAgIHJldHVybiBbaDAsIGgxLCBoMiwgaDMsIGg0XTtcbiAgICB9XG4gICAgc2V0KGgwLCBoMSwgaDIsIGgzLCBoNCkge1xuICAgICAgICB0aGlzLmgwID0gaDAgfCAwO1xuICAgICAgICB0aGlzLmgxID0gaDEgfCAwO1xuICAgICAgICB0aGlzLmgyID0gaDIgfCAwO1xuICAgICAgICB0aGlzLmgzID0gaDMgfCAwO1xuICAgICAgICB0aGlzLmg0ID0gaDQgfCAwO1xuICAgIH1cbiAgICBwcm9jZXNzKHZpZXcsIG9mZnNldCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyssIG9mZnNldCArPSA0KVxuICAgICAgICAgICAgQlVGXzE2MFtpXSA9IHZpZXcuZ2V0VWludDMyKG9mZnNldCwgdHJ1ZSk7XG4gICAgICAgIC8vIHByZXR0aWVyLWlnbm9yZVxuICAgICAgICBsZXQgYWwgPSB0aGlzLmgwIHwgMCwgYXIgPSBhbCwgYmwgPSB0aGlzLmgxIHwgMCwgYnIgPSBibCwgY2wgPSB0aGlzLmgyIHwgMCwgY3IgPSBjbCwgZGwgPSB0aGlzLmgzIHwgMCwgZHIgPSBkbCwgZWwgPSB0aGlzLmg0IHwgMCwgZXIgPSBlbDtcbiAgICAgICAgLy8gSW5zdGVhZCBvZiBpdGVyYXRpbmcgMCB0byA4MCwgd2Ugc3BsaXQgaXQgaW50byA1IGdyb3Vwc1xuICAgICAgICAvLyBBbmQgdXNlIHRoZSBncm91cHMgaW4gY29uc3RhbnRzLCBmdW5jdGlvbnMsIGV0Yy4gTXVjaCBzaW1wbGVyXG4gICAgICAgIGZvciAobGV0IGdyb3VwID0gMDsgZ3JvdXAgPCA1OyBncm91cCsrKSB7XG4gICAgICAgICAgICBjb25zdCByR3JvdXAgPSA0IC0gZ3JvdXA7XG4gICAgICAgICAgICBjb25zdCBoYmwgPSBLbDE2MFtncm91cF0sIGhiciA9IEtyMTYwW2dyb3VwXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICBjb25zdCBybCA9IGlkeExbZ3JvdXBdLCByciA9IGlkeFJbZ3JvdXBdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgICAgIGNvbnN0IHNsID0gc2hpZnRzTDE2MFtncm91cF0sIHNyID0gc2hpZnRzUjE2MFtncm91cF07IC8vIHByZXR0aWVyLWlnbm9yZVxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGwgPSAocm90bChhbCArIHJpcGVtZF9mKGdyb3VwLCBibCwgY2wsIGRsKSArIEJVRl8xNjBbcmxbaV1dICsgaGJsLCBzbFtpXSkgKyBlbCkgfCAwO1xuICAgICAgICAgICAgICAgIGFsID0gZWwsIGVsID0gZGwsIGRsID0gcm90bChjbCwgMTApIHwgMCwgY2wgPSBibCwgYmwgPSB0bDsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAyIGxvb3BzIGFyZSAxMCUgZmFzdGVyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ciA9IChyb3RsKGFyICsgcmlwZW1kX2Yockdyb3VwLCBiciwgY3IsIGRyKSArIEJVRl8xNjBbcnJbaV1dICsgaGJyLCBzcltpXSkgKyBlcikgfCAwO1xuICAgICAgICAgICAgICAgIGFyID0gZXIsIGVyID0gZHIsIGRyID0gcm90bChjciwgMTApIHwgMCwgY3IgPSBiciwgYnIgPSB0cjsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gQWRkIHRoZSBjb21wcmVzc2VkIGNodW5rIHRvIHRoZSBjdXJyZW50IGhhc2ggdmFsdWVcbiAgICAgICAgdGhpcy5zZXQoKHRoaXMuaDEgKyBjbCArIGRyKSB8IDAsICh0aGlzLmgyICsgZGwgKyBlcikgfCAwLCAodGhpcy5oMyArIGVsICsgYXIpIHwgMCwgKHRoaXMuaDQgKyBhbCArIGJyKSB8IDAsICh0aGlzLmgwICsgYmwgKyBjcikgfCAwKTtcbiAgICB9XG4gICAgcm91bmRDbGVhbigpIHtcbiAgICAgICAgY2xlYW4oQlVGXzE2MCk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgY2xlYW4odGhpcy5idWZmZXIpO1xuICAgICAgICB0aGlzLnNldCgwLCAwLCAwLCAwLCAwKTtcbiAgICB9XG59XG4vKipcbiAqIFJJUEVNRC0xNjAgLSBhIGxlZ2FjeSBoYXNoIGZ1bmN0aW9uIGZyb20gMTk5MHMuXG4gKiAqIGh0dHBzOi8vaG9tZXMuZXNhdC5rdWxldXZlbi5iZS9+Ym9zc2VsYWUvcmlwZW1kMTYwLmh0bWxcbiAqICogaHR0cHM6Ly9ob21lcy5lc2F0Lmt1bGV1dmVuLmJlL35ib3NzZWxhZS9yaXBlbWQxNjAvcGRmL0FCLTk2MDEvQUItOTYwMS5wZGZcbiAqL1xuZXhwb3J0IGNvbnN0IHJpcGVtZDE2MCA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVIYXNoZXIoKCkgPT4gbmV3IFJJUEVNRDE2MCgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxlZ2FjeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/legacy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/ripemd160.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/ripemd160.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RIPEMD160: () => (/* binding */ RIPEMD160),\n/* harmony export */   ripemd160: () => (/* binding */ ripemd160)\n/* harmony export */ });\n/* harmony import */ var _legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacy.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/legacy.js\");\n/**\n * RIPEMD-160 legacy hash function.\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n * @module\n * @deprecated\n */\n\n/** @deprecated Use import from `noble/hashes/legacy` module */\nconst RIPEMD160 = _legacy_js__WEBPACK_IMPORTED_MODULE_0__.RIPEMD160;\n/** @deprecated Use import from `noble/hashes/legacy` module */\nconst ripemd160 = _legacy_js__WEBPACK_IMPORTED_MODULE_0__.ripemd160;\n//# sourceMappingURL=ripemd160.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9yaXBlbWQxNjAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0U7QUFDL0U7QUFDTyxrQkFBa0IsaURBQVU7QUFDbkM7QUFDTyxrQkFBa0IsaURBQVU7QUFDbkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9yaXBlbWQxNjAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSSVBFTUQtMTYwIGxlZ2FjeSBoYXNoIGZ1bmN0aW9uLlxuICogaHR0cHM6Ly9ob21lcy5lc2F0Lmt1bGV1dmVuLmJlL35ib3NzZWxhZS9yaXBlbWQxNjAuaHRtbFxuICogaHR0cHM6Ly9ob21lcy5lc2F0Lmt1bGV1dmVuLmJlL35ib3NzZWxhZS9yaXBlbWQxNjAvcGRmL0FCLTk2MDEvQUItOTYwMS5wZGZcbiAqIEBtb2R1bGVcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmltcG9ydCB7IFJJUEVNRDE2MCBhcyBSSVBFTUQxNjBuLCByaXBlbWQxNjAgYXMgcmlwZW1kMTYwbiB9IGZyb20gXCIuL2xlZ2FjeS5qc1wiO1xuLyoqIEBkZXByZWNhdGVkIFVzZSBpbXBvcnQgZnJvbSBgbm9ibGUvaGFzaGVzL2xlZ2FjeWAgbW9kdWxlICovXG5leHBvcnQgY29uc3QgUklQRU1EMTYwID0gUklQRU1EMTYwbjtcbi8qKiBAZGVwcmVjYXRlZCBVc2UgaW1wb3J0IGZyb20gYG5vYmxlL2hhc2hlcy9sZWdhY3lgIG1vZHVsZSAqL1xuZXhwb3J0IGNvbnN0IHJpcGVtZDE2MCA9IHJpcGVtZDE2MG47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yaXBlbWQxNjAuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/ripemd160.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA224: () => (/* binding */ SHA224),\n/* harmony export */   SHA256: () => (/* binding */ SHA256),\n/* harmony export */   SHA384: () => (/* binding */ SHA384),\n/* harmony export */   SHA512: () => (/* binding */ SHA512),\n/* harmony export */   SHA512_224: () => (/* binding */ SHA512_224),\n/* harmony export */   SHA512_256: () => (/* binding */ SHA512_256),\n/* harmony export */   sha224: () => (/* binding */ sha224),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha384: () => (/* binding */ sha384),\n/* harmony export */   sha512: () => (/* binding */ sha512),\n/* harmony export */   sha512_224: () => (/* binding */ sha512_224),\n/* harmony export */   sha512_256: () => (/* binding */ sha512_256)\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_u64.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js\");\n/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\n\n\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[0] | 0;\n        this.B = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[1] | 0;\n        this.C = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[2] | 0;\n        this.D = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[3] | 0;\n        this.E = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[4] | 0;\n        this.F = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[5] | 0;\n        this.G = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[6] | 0;\n        this.H = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);\n            const T2 = (sigma0 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);\n    }\n}\nclass SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[0] | 0;\n        this.B = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[1] | 0;\n        this.C = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[2] | 0;\n        this.D = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[3] | 0;\n        this.E = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[4] | 0;\n        this.F = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[5] | 0;\n        this.G = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[6] | 0;\n        this.H = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_2__.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[0] | 0;\n        this.Al = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[1] | 0;\n        this.Bh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[2] | 0;\n        this.Bl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[3] | 0;\n        this.Ch = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[4] | 0;\n        this.Cl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[5] | 0;\n        this.Dh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[6] | 0;\n        this.Dl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[7] | 0;\n        this.Eh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[8] | 0;\n        this.El = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[9] | 0;\n        this.Fh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[10] | 0;\n        this.Fl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[11] | 0;\n        this.Gh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[12] | 0;\n        this.Gl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[13] | 0;\n        this.Hh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[14] | 0;\n        this.Hl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_2__.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_2__.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.clean)(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[0] | 0;\n        this.Al = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[1] | 0;\n        this.Bh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[2] | 0;\n        this.Bl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[3] | 0;\n        this.Ch = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[4] | 0;\n        this.Cl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[5] | 0;\n        this.Dh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[6] | 0;\n        this.Dl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[7] | 0;\n        this.Eh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[8] | 0;\n        this.El = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[9] | 0;\n        this.Fh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[10] | 0;\n        this.Fl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[11] | 0;\n        this.Gh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[12] | 0;\n        this.Gl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[13] | 0;\n        this.Hh = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[14] | 0;\n        this.Hl = _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nconst sha256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nconst sha224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nconst sha512 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nconst sha384 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nconst sha512_256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nconst sha512_224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createHasher)(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA224: () => (/* binding */ SHA224),\n/* harmony export */   SHA256: () => (/* binding */ SHA256),\n/* harmony export */   sha224: () => (/* binding */ sha224),\n/* harmony export */   sha256: () => (/* binding */ sha256)\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sha2.js */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js\");\n/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\n\n/** @deprecated Use import from `noble/hashes/sha2` module */\nconst SHA256 = _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA256;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nconst sha256 = _sha2_js__WEBPACK_IMPORTED_MODULE_0__.sha256;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nconst SHA224 = _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA224;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nconst sha224 = _sha2_js__WEBPACK_IMPORTED_MODULE_0__.sha224;\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9zaGEyNTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3RztBQUN4RztBQUNPLGVBQWUsNENBQU87QUFDN0I7QUFDTyxlQUFlLDRDQUFPO0FBQzdCO0FBQ08sZUFBZSw0Q0FBTztBQUM3QjtBQUNPLGVBQWUsNENBQU87QUFDN0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9Abm9ibGUraGFzaGVzQDEuOC4wL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9zaGEyNTYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTSEEyLTI1NiBhLmsuYS4gc2hhMjU2LiBJbiBKUywgaXQgaXMgdGhlIGZhc3Rlc3QgaGFzaCwgZXZlbiBmYXN0ZXIgdGhhbiBCbGFrZTMuXG4gKlxuICogVG8gYnJlYWsgc2hhMjU2IHVzaW5nIGJpcnRoZGF5IGF0dGFjaywgYXR0YWNrZXJzIG5lZWQgdG8gdHJ5IDJeMTI4IGhhc2hlcy5cbiAqIEJUQyBuZXR3b3JrIGlzIGRvaW5nIDJeNzAgaGFzaGVzL3NlYyAoMl45NSBoYXNoZXMveWVhcikgYXMgcGVyIDIwMjUuXG4gKlxuICogQ2hlY2sgb3V0IFtGSVBTIDE4MC00XShodHRwczovL252bHB1YnMubmlzdC5nb3YvbmlzdHB1YnMvRklQUy9OSVNULkZJUFMuMTgwLTQucGRmKS5cbiAqIEBtb2R1bGVcbiAqIEBkZXByZWNhdGVkXG4gKi9cbmltcG9ydCB7IFNIQTIyNCBhcyBTSEEyMjRuLCBzaGEyMjQgYXMgc2hhMjI0biwgU0hBMjU2IGFzIFNIQTI1Nm4sIHNoYTI1NiBhcyBzaGEyNTZuLCB9IGZyb20gXCIuL3NoYTIuanNcIjtcbi8qKiBAZGVwcmVjYXRlZCBVc2UgaW1wb3J0IGZyb20gYG5vYmxlL2hhc2hlcy9zaGEyYCBtb2R1bGUgKi9cbmV4cG9ydCBjb25zdCBTSEEyNTYgPSBTSEEyNTZuO1xuLyoqIEBkZXByZWNhdGVkIFVzZSBpbXBvcnQgZnJvbSBgbm9ibGUvaGFzaGVzL3NoYTJgIG1vZHVsZSAqL1xuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IHNoYTI1Nm47XG4vKiogQGRlcHJlY2F0ZWQgVXNlIGltcG9ydCBmcm9tIGBub2JsZS9oYXNoZXMvc2hhMmAgbW9kdWxlICovXG5leHBvcnQgY29uc3QgU0hBMjI0ID0gU0hBMjI0bjtcbi8qKiBAZGVwcmVjYXRlZCBVc2UgaW1wb3J0IGZyb20gYG5vYmxlL2hhc2hlcy9zaGEyYCBtb2R1bGUgKi9cbmV4cG9ydCBjb25zdCBzaGEyMjQgPSBzaGEyMjRuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   abytes: () => (/* binding */ abytes),\n/* harmony export */   aexists: () => (/* binding */ aexists),\n/* harmony export */   ahash: () => (/* binding */ ahash),\n/* harmony export */   anumber: () => (/* binding */ anumber),\n/* harmony export */   aoutput: () => (/* binding */ aoutput),\n/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),\n/* harmony export */   byteSwap: () => (/* binding */ byteSwap),\n/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),\n/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   clean: () => (/* binding */ clean),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   createHasher: () => (/* binding */ createHasher),\n/* harmony export */   createOptHasher: () => (/* binding */ createOptHasher),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   createXOFer: () => (/* binding */ createXOFer),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   kdfInputToBytes: () => (/* binding */ kdfInputToBytes),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   rotl: () => (/* binding */ rotl),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   swap32IfBE: () => (/* binding */ swap32IfBE),\n/* harmony export */   swap8IfBE: () => (/* binding */ swap8IfBE),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),\n/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),\n/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/crypto.js\");\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nfunction u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nfunction u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nfunction clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nfunction rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nfunction rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nconst isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nfunction byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nconst swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nconst byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nconst swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nconst nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nfunction kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nclass Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nfunction createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nconst wrapConstructor = createHasher;\nconst wrapConstructorWithOpts = createOptHasher;\nconst wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes === 'function') {\n        return Uint8Array.from(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/base-x@5.0.1/node_modules/base-x/src/esm/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/base-x@5.0.1/node_modules/base-x/src/esm/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (psz < source.length) {\n      // Find code of next character\n      const charCode = source.charCodeAt(psz)\n      // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n      // Decode character\n      let carry = BASE_MAP[charCode]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (base);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iYXNlLXhANS4wLjEvbm9kZV9tb2R1bGVzL2Jhc2UteC9zcmMvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQSxrQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQSxrQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWSxTQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QywrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxJQUFJIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmFzZS14QDUuMC4xL25vZGVfbW9kdWxlcy9iYXNlLXgvc3JjL2VzbS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBiYXNlLXggZW5jb2RpbmcgLyBkZWNvZGluZ1xuLy8gQ29weXJpZ2h0IChjKSAyMDE4IGJhc2UteCBjb250cmlidXRvcnNcbi8vIENvcHlyaWdodCAoYykgMjAxNC0yMDE4IFRoZSBCaXRjb2luIENvcmUgZGV2ZWxvcGVycyAoYmFzZTU4LmNwcClcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgc29mdHdhcmUgbGljZW5zZSwgc2VlIHRoZSBhY2NvbXBhbnlpbmdcbi8vIGZpbGUgTElDRU5TRSBvciBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocC5cbmZ1bmN0aW9uIGJhc2UgKEFMUEhBQkVUKSB7XG4gIGlmIChBTFBIQUJFVC5sZW5ndGggPj0gMjU1KSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0FscGhhYmV0IHRvbyBsb25nJykgfVxuICBjb25zdCBCQVNFX01BUCA9IG5ldyBVaW50OEFycmF5KDI1NilcbiAgZm9yIChsZXQgaiA9IDA7IGogPCBCQVNFX01BUC5sZW5ndGg7IGorKykge1xuICAgIEJBU0VfTUFQW2pdID0gMjU1XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBBTFBIQUJFVC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHggPSBBTFBIQUJFVC5jaGFyQXQoaSlcbiAgICBjb25zdCB4YyA9IHguY2hhckNvZGVBdCgwKVxuICAgIGlmIChCQVNFX01BUFt4Y10gIT09IDI1NSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKHggKyAnIGlzIGFtYmlndW91cycpIH1cbiAgICBCQVNFX01BUFt4Y10gPSBpXG4gIH1cbiAgY29uc3QgQkFTRSA9IEFMUEhBQkVULmxlbmd0aFxuICBjb25zdCBMRUFERVIgPSBBTFBIQUJFVC5jaGFyQXQoMClcbiAgY29uc3QgRkFDVE9SID0gTWF0aC5sb2coQkFTRSkgLyBNYXRoLmxvZygyNTYpIC8vIGxvZyhCQVNFKSAvIGxvZygyNTYpLCByb3VuZGVkIHVwXG4gIGNvbnN0IGlGQUNUT1IgPSBNYXRoLmxvZygyNTYpIC8gTWF0aC5sb2coQkFTRSkgLy8gbG9nKDI1NikgLyBsb2coQkFTRSksIHJvdW5kZWQgdXBcbiAgZnVuY3Rpb24gZW5jb2RlIChzb3VyY2UpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgICBpZiAoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkgeyB9IGVsc2UgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBuZXcgVWludDhBcnJheShzb3VyY2UuYnVmZmVyLCBzb3VyY2UuYnl0ZU9mZnNldCwgc291cmNlLmJ5dGVMZW5ndGgpXG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgIHNvdXJjZSA9IFVpbnQ4QXJyYXkuZnJvbShzb3VyY2UpXG4gICAgfVxuICAgIGlmICghKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnIH1cbiAgICAvLyBTa2lwICYgY291bnQgbGVhZGluZyB6ZXJvZXMuXG4gICAgbGV0IHplcm9lcyA9IDBcbiAgICBsZXQgbGVuZ3RoID0gMFxuICAgIGxldCBwYmVnaW4gPSAwXG4gICAgY29uc3QgcGVuZCA9IHNvdXJjZS5sZW5ndGhcbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kICYmIHNvdXJjZVtwYmVnaW5dID09PSAwKSB7XG4gICAgICBwYmVnaW4rK1xuICAgICAgemVyb2VzKytcbiAgICB9XG4gICAgLy8gQWxsb2NhdGUgZW5vdWdoIHNwYWNlIGluIGJpZy1lbmRpYW4gYmFzZTU4IHJlcHJlc2VudGF0aW9uLlxuICAgIGNvbnN0IHNpemUgPSAoKHBlbmQgLSBwYmVnaW4pICogaUZBQ1RPUiArIDEpID4+PiAwXG4gICAgY29uc3QgYjU4ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSlcbiAgICAvLyBQcm9jZXNzIHRoZSBieXRlcy5cbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kKSB7XG4gICAgICBsZXQgY2FycnkgPSBzb3VyY2VbcGJlZ2luXVxuICAgICAgLy8gQXBwbHkgXCJiNTggPSBiNTggKiAyNTYgKyBjaFwiLlxuICAgICAgbGV0IGkgPSAwXG4gICAgICBmb3IgKGxldCBpdDEgPSBzaXplIC0gMTsgKGNhcnJ5ICE9PSAwIHx8IGkgPCBsZW5ndGgpICYmIChpdDEgIT09IC0xKTsgaXQxLS0sIGkrKykge1xuICAgICAgICBjYXJyeSArPSAoMjU2ICogYjU4W2l0MV0pID4+PiAwXG4gICAgICAgIGI1OFtpdDFdID0gKGNhcnJ5ICUgQkFTRSkgPj4+IDBcbiAgICAgICAgY2FycnkgPSAoY2FycnkgLyBCQVNFKSA+Pj4gMFxuICAgICAgfVxuICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7IHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKSB9XG4gICAgICBsZW5ndGggPSBpXG4gICAgICBwYmVnaW4rK1xuICAgIH1cbiAgICAvLyBTa2lwIGxlYWRpbmcgemVyb2VzIGluIGJhc2U1OCByZXN1bHQuXG4gICAgbGV0IGl0MiA9IHNpemUgLSBsZW5ndGhcbiAgICB3aGlsZSAoaXQyICE9PSBzaXplICYmIGI1OFtpdDJdID09PSAwKSB7XG4gICAgICBpdDIrK1xuICAgIH1cbiAgICAvLyBUcmFuc2xhdGUgdGhlIHJlc3VsdCBpbnRvIGEgc3RyaW5nLlxuICAgIGxldCBzdHIgPSBMRUFERVIucmVwZWF0KHplcm9lcylcbiAgICBmb3IgKDsgaXQyIDwgc2l6ZTsgKytpdDIpIHsgc3RyICs9IEFMUEhBQkVULmNoYXJBdChiNThbaXQyXSkgfVxuICAgIHJldHVybiBzdHJcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUgKHNvdXJjZSkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnc3RyaW5nJykgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBTdHJpbmcnKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KCkgfVxuICAgIGxldCBwc3ogPSAwXG4gICAgLy8gU2tpcCBhbmQgY291bnQgbGVhZGluZyAnMSdzLlxuICAgIGxldCB6ZXJvZXMgPSAwXG4gICAgbGV0IGxlbmd0aCA9IDBcbiAgICB3aGlsZSAoc291cmNlW3Bzel0gPT09IExFQURFUikge1xuICAgICAgemVyb2VzKytcbiAgICAgIHBzeisrXG4gICAgfVxuICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2UyNTYgcmVwcmVzZW50YXRpb24uXG4gICAgY29uc3Qgc2l6ZSA9ICgoKHNvdXJjZS5sZW5ndGggLSBwc3opICogRkFDVE9SKSArIDEpID4+PiAwIC8vIGxvZyg1OCkgLyBsb2coMjU2KSwgcm91bmRlZCB1cC5cbiAgICBjb25zdCBiMjU2ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSlcbiAgICAvLyBQcm9jZXNzIHRoZSBjaGFyYWN0ZXJzLlxuICAgIHdoaWxlIChwc3ogPCBzb3VyY2UubGVuZ3RoKSB7XG4gICAgICAvLyBGaW5kIGNvZGUgb2YgbmV4dCBjaGFyYWN0ZXJcbiAgICAgIGNvbnN0IGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQocHN6KVxuICAgICAgLy8gQmFzZSBtYXAgY2FuIG5vdCBiZSBpbmRleGVkIHVzaW5nIGNoYXIgY29kZVxuICAgICAgaWYgKGNoYXJDb2RlID4gMjU1KSB7IHJldHVybiB9XG4gICAgICAvLyBEZWNvZGUgY2hhcmFjdGVyXG4gICAgICBsZXQgY2FycnkgPSBCQVNFX01BUFtjaGFyQ29kZV1cbiAgICAgIC8vIEludmFsaWQgY2hhcmFjdGVyXG4gICAgICBpZiAoY2FycnkgPT09IDI1NSkgeyByZXR1cm4gfVxuICAgICAgbGV0IGkgPSAwXG4gICAgICBmb3IgKGxldCBpdDMgPSBzaXplIC0gMTsgKGNhcnJ5ICE9PSAwIHx8IGkgPCBsZW5ndGgpICYmIChpdDMgIT09IC0xKTsgaXQzLS0sIGkrKykge1xuICAgICAgICBjYXJyeSArPSAoQkFTRSAqIGIyNTZbaXQzXSkgPj4+IDBcbiAgICAgICAgYjI1NltpdDNdID0gKGNhcnJ5ICUgMjU2KSA+Pj4gMFxuICAgICAgICBjYXJyeSA9IChjYXJyeSAvIDI1NikgPj4+IDBcbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5JykgfVxuICAgICAgbGVuZ3RoID0gaVxuICAgICAgcHN6KytcbiAgICB9XG4gICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiMjU2LlxuICAgIGxldCBpdDQgPSBzaXplIC0gbGVuZ3RoXG4gICAgd2hpbGUgKGl0NCAhPT0gc2l6ZSAmJiBiMjU2W2l0NF0gPT09IDApIHtcbiAgICAgIGl0NCsrXG4gICAgfVxuICAgIGNvbnN0IHZjaCA9IG5ldyBVaW50OEFycmF5KHplcm9lcyArIChzaXplIC0gaXQ0KSlcbiAgICBsZXQgaiA9IHplcm9lc1xuICAgIHdoaWxlIChpdDQgIT09IHNpemUpIHtcbiAgICAgIHZjaFtqKytdID0gYjI1NltpdDQrK11cbiAgICB9XG4gICAgcmV0dXJuIHZjaFxuICB9XG4gIGZ1bmN0aW9uIGRlY29kZSAoc3RyaW5nKSB7XG4gICAgY29uc3QgYnVmZmVyID0gZGVjb2RlVW5zYWZlKHN0cmluZylcbiAgICBpZiAoYnVmZmVyKSB7IHJldHVybiBidWZmZXIgfVxuICAgIHRocm93IG5ldyBFcnJvcignTm9uLWJhc2UnICsgQkFTRSArICcgY2hhcmFjdGVyJylcbiAgfVxuICByZXR1cm4ge1xuICAgIGVuY29kZSxcbiAgICBkZWNvZGVVbnNhZmUsXG4gICAgZGVjb2RlXG4gIH1cbn1cbmV4cG9ydCBkZWZhdWx0IGJhc2VcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/base-x@5.0.1/node_modules/base-x/src/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iYXNlNjQtanNAMS41LjEvbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CLHFCQUFxQjs7QUFFckI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJDQUEyQyxVQUFVO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iYXNlNjQtanNAMS41LjEvbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/combiner/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/combiner/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine)\n/* harmony export */ });\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction combine(psbts) {\n  const self = psbts[0];\n  const selfKeyVals = (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_0__.psbtToKeyVals)(self);\n  const others = psbts.slice(1);\n  if (others.length === 0) throw new Error('Combine: Nothing to combine');\n  const selfTx = getTx(self);\n  if (selfTx === undefined) {\n    throw new Error('Combine: Self missing transaction');\n  }\n  const selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n  const selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n  const selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n  for (const other of others) {\n    const otherTx = getTx(other);\n    if (\n      otherTx === undefined ||\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(otherTx.toBuffer(), selfTx.toBuffer()) !== 0\n    ) {\n      throw new Error(\n        'Combine: One of the Psbts does not have the same transaction.',\n      );\n    }\n    const otherKeyVals = (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_0__.psbtToKeyVals)(other);\n    const otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n    otherGlobalSet.forEach(\n      keyPusher(\n        selfGlobalSet,\n        selfKeyVals.globalKeyVals,\n        otherKeyVals.globalKeyVals,\n      ),\n    );\n    const otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n    otherInputSets.forEach((inputSet, idx) =>\n      inputSet.forEach(\n        keyPusher(\n          selfInputSets[idx],\n          selfKeyVals.inputKeyVals[idx],\n          otherKeyVals.inputKeyVals[idx],\n        ),\n      ),\n    );\n    const otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n    otherOutputSets.forEach((outputSet, idx) =>\n      outputSet.forEach(\n        keyPusher(\n          selfOutputSets[idx],\n          selfKeyVals.outputKeyVals[idx],\n          otherKeyVals.outputKeyVals[idx],\n        ),\n      ),\n    );\n  }\n  return (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_0__.psbtFromKeyVals)(selfTx, {\n    globalMapKeyVals: selfKeyVals.globalKeyVals,\n    inputKeyVals: selfKeyVals.inputKeyVals,\n    outputKeyVals: selfKeyVals.outputKeyVals,\n  });\n}\nfunction keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n  return key => {\n    if (selfSet.has(key)) return;\n    const newKv = otherKeyVals.filter(kv => uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(kv.key) === key)[0];\n    selfKeyVals.push(newKv);\n    selfSet.add(key);\n  };\n}\nfunction getTx(psbt) {\n  return psbt.globalMap.unsignedTx;\n}\nfunction getKeySet(keyVals) {\n  const set = new Set();\n  keyVals.forEach(keyVal => {\n    const hex = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key);\n    if (set.has(hex))\n      throw new Error('Combine: KeyValue Map keys should be unique');\n    set.add(hex);\n  });\n  return set;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbWJpbmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRTtBQUMxQjtBQUNuQztBQUNQO0FBQ0Esc0JBQXNCLCtEQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxREFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtEQUFhO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlFQUFlO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxtREFBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtREFBVztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29tYmluZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHNidEZyb21LZXlWYWxzLCBwc2J0VG9LZXlWYWxzIH0gZnJvbSAnLi4vcGFyc2VyL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbWJpbmUocHNidHMpIHtcbiAgY29uc3Qgc2VsZiA9IHBzYnRzWzBdO1xuICBjb25zdCBzZWxmS2V5VmFscyA9IHBzYnRUb0tleVZhbHMoc2VsZik7XG4gIGNvbnN0IG90aGVycyA9IHBzYnRzLnNsaWNlKDEpO1xuICBpZiAob3RoZXJzLmxlbmd0aCA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdDb21iaW5lOiBOb3RoaW5nIHRvIGNvbWJpbmUnKTtcbiAgY29uc3Qgc2VsZlR4ID0gZ2V0VHgoc2VsZik7XG4gIGlmIChzZWxmVHggPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ29tYmluZTogU2VsZiBtaXNzaW5nIHRyYW5zYWN0aW9uJyk7XG4gIH1cbiAgY29uc3Qgc2VsZkdsb2JhbFNldCA9IGdldEtleVNldChzZWxmS2V5VmFscy5nbG9iYWxLZXlWYWxzKTtcbiAgY29uc3Qgc2VsZklucHV0U2V0cyA9IHNlbGZLZXlWYWxzLmlucHV0S2V5VmFscy5tYXAoZ2V0S2V5U2V0KTtcbiAgY29uc3Qgc2VsZk91dHB1dFNldHMgPSBzZWxmS2V5VmFscy5vdXRwdXRLZXlWYWxzLm1hcChnZXRLZXlTZXQpO1xuICBmb3IgKGNvbnN0IG90aGVyIG9mIG90aGVycykge1xuICAgIGNvbnN0IG90aGVyVHggPSBnZXRUeChvdGhlcik7XG4gICAgaWYgKFxuICAgICAgb3RoZXJUeCA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICB0b29scy5jb21wYXJlKG90aGVyVHgudG9CdWZmZXIoKSwgc2VsZlR4LnRvQnVmZmVyKCkpICE9PSAwXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdDb21iaW5lOiBPbmUgb2YgdGhlIFBzYnRzIGRvZXMgbm90IGhhdmUgdGhlIHNhbWUgdHJhbnNhY3Rpb24uJyxcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IG90aGVyS2V5VmFscyA9IHBzYnRUb0tleVZhbHMob3RoZXIpO1xuICAgIGNvbnN0IG90aGVyR2xvYmFsU2V0ID0gZ2V0S2V5U2V0KG90aGVyS2V5VmFscy5nbG9iYWxLZXlWYWxzKTtcbiAgICBvdGhlckdsb2JhbFNldC5mb3JFYWNoKFxuICAgICAga2V5UHVzaGVyKFxuICAgICAgICBzZWxmR2xvYmFsU2V0LFxuICAgICAgICBzZWxmS2V5VmFscy5nbG9iYWxLZXlWYWxzLFxuICAgICAgICBvdGhlcktleVZhbHMuZ2xvYmFsS2V5VmFscyxcbiAgICAgICksXG4gICAgKTtcbiAgICBjb25zdCBvdGhlcklucHV0U2V0cyA9IG90aGVyS2V5VmFscy5pbnB1dEtleVZhbHMubWFwKGdldEtleVNldCk7XG4gICAgb3RoZXJJbnB1dFNldHMuZm9yRWFjaCgoaW5wdXRTZXQsIGlkeCkgPT5cbiAgICAgIGlucHV0U2V0LmZvckVhY2goXG4gICAgICAgIGtleVB1c2hlcihcbiAgICAgICAgICBzZWxmSW5wdXRTZXRzW2lkeF0sXG4gICAgICAgICAgc2VsZktleVZhbHMuaW5wdXRLZXlWYWxzW2lkeF0sXG4gICAgICAgICAgb3RoZXJLZXlWYWxzLmlucHV0S2V5VmFsc1tpZHhdLFxuICAgICAgICApLFxuICAgICAgKSxcbiAgICApO1xuICAgIGNvbnN0IG90aGVyT3V0cHV0U2V0cyA9IG90aGVyS2V5VmFscy5vdXRwdXRLZXlWYWxzLm1hcChnZXRLZXlTZXQpO1xuICAgIG90aGVyT3V0cHV0U2V0cy5mb3JFYWNoKChvdXRwdXRTZXQsIGlkeCkgPT5cbiAgICAgIG91dHB1dFNldC5mb3JFYWNoKFxuICAgICAgICBrZXlQdXNoZXIoXG4gICAgICAgICAgc2VsZk91dHB1dFNldHNbaWR4XSxcbiAgICAgICAgICBzZWxmS2V5VmFscy5vdXRwdXRLZXlWYWxzW2lkeF0sXG4gICAgICAgICAgb3RoZXJLZXlWYWxzLm91dHB1dEtleVZhbHNbaWR4XSxcbiAgICAgICAgKSxcbiAgICAgICksXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcHNidEZyb21LZXlWYWxzKHNlbGZUeCwge1xuICAgIGdsb2JhbE1hcEtleVZhbHM6IHNlbGZLZXlWYWxzLmdsb2JhbEtleVZhbHMsXG4gICAgaW5wdXRLZXlWYWxzOiBzZWxmS2V5VmFscy5pbnB1dEtleVZhbHMsXG4gICAgb3V0cHV0S2V5VmFsczogc2VsZktleVZhbHMub3V0cHV0S2V5VmFscyxcbiAgfSk7XG59XG5mdW5jdGlvbiBrZXlQdXNoZXIoc2VsZlNldCwgc2VsZktleVZhbHMsIG90aGVyS2V5VmFscykge1xuICByZXR1cm4ga2V5ID0+IHtcbiAgICBpZiAoc2VsZlNldC5oYXMoa2V5KSkgcmV0dXJuO1xuICAgIGNvbnN0IG5ld0t2ID0gb3RoZXJLZXlWYWxzLmZpbHRlcihrdiA9PiB0b29scy50b0hleChrdi5rZXkpID09PSBrZXkpWzBdO1xuICAgIHNlbGZLZXlWYWxzLnB1c2gobmV3S3YpO1xuICAgIHNlbGZTZXQuYWRkKGtleSk7XG4gIH07XG59XG5mdW5jdGlvbiBnZXRUeChwc2J0KSB7XG4gIHJldHVybiBwc2J0Lmdsb2JhbE1hcC51bnNpZ25lZFR4O1xufVxuZnVuY3Rpb24gZ2V0S2V5U2V0KGtleVZhbHMpIHtcbiAgY29uc3Qgc2V0ID0gbmV3IFNldCgpO1xuICBrZXlWYWxzLmZvckVhY2goa2V5VmFsID0+IHtcbiAgICBjb25zdCBoZXggPSB0b29scy50b0hleChrZXlWYWwua2V5KTtcbiAgICBpZiAoc2V0LmhhcyhoZXgpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21iaW5lOiBLZXlWYWx1ZSBNYXAga2V5cyBzaG91bGQgYmUgdW5pcXVlJyk7XG4gICAgc2V0LmFkZChoZXgpO1xuICB9KTtcbiAgcmV0dXJuIHNldDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/combiner/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/globalXpub.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/globalXpub.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAddToArray: () => (/* binding */ canAddToArray),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error(\n      'Decode Error: could not decode globalXpub with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error(\n      'Decode Error: globalXpub has invalid extended pubkey in key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if ((keyVal.value.length / 4) % 1 !== 0) {\n    throw new Error(\n      'Decode Error: Global GLOBAL_XPUB value length should be multiple of 4',\n    );\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm',\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt32(keyVal.value, i * 4 + 4, 'LE');\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nfunction encode(data) {\n  const head = new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.GlobalTypes.GLOBAL_XPUB]);\n  const key = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = new Uint8Array(splitPath.length * 4);\n  value.set(data.masterFingerprint, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(value, offset, num, 'LE');\n    offset += 4;\n  });\n  return {\n    key,\n    value,\n  };\n}\nconst expected =\n  '{ masterFingerprint: Uint8Array; extendedPubkey: Uint8Array; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return (\n    epk instanceof Uint8Array &&\n    epk.length === 78 &&\n    [2, 3].indexOf(epk[45]) > -1 &&\n    mfp instanceof Uint8Array &&\n    mfp.length === 4 &&\n    typeof p === 'string' &&\n    !!p.match(/^m(\\/\\d+'?)*$/)\n  );\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(item.extendedPubkey);\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(v.extendedPubkey, item.extendedPubkey))\n      .length === 0\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9nbG9iYWwvZ2xvYmFsWHB1Yi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ1I7QUFDMUM7QUFDTztBQUNQLHdCQUF3Qix1REFBVztBQUNuQztBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdEQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLCtCQUErQix1REFBVztBQUMxQyxjQUFjLG9EQUFZO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHlEQUFpQjtBQUNyQjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxLQUFLLCtCQUErQiw0QkFBNEIsZUFBZTtBQUN4RTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsbURBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFhO0FBQ25DO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2dsb2JhbC9nbG9iYWxYcHViLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdsb2JhbFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmNvbnN0IHJhbmdlID0gbiA9PiBbLi4uQXJyYXkobikua2V5cygpXTtcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBHbG9iYWxUeXBlcy5HTE9CQUxfWFBVQikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgZ2xvYmFsWHB1YiB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIGlmIChrZXlWYWwua2V5Lmxlbmd0aCAhPT0gNzkgfHwgIVsyLCAzXS5pbmNsdWRlcyhrZXlWYWwua2V5WzQ2XSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiBnbG9iYWxYcHViIGhhcyBpbnZhbGlkIGV4dGVuZGVkIHB1YmtleSBpbiBrZXkgMHgnICtcbiAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgKTtcbiAgfVxuICBpZiAoKGtleVZhbC52YWx1ZS5sZW5ndGggLyA0KSAlIDEgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiBHbG9iYWwgR0xPQkFMX1hQVUIgdmFsdWUgbGVuZ3RoIHNob3VsZCBiZSBtdWx0aXBsZSBvZiA0JyxcbiAgICApO1xuICB9XG4gIGNvbnN0IGV4dGVuZGVkUHVia2V5ID0ga2V5VmFsLmtleS5zbGljZSgxKTtcbiAgY29uc3QgZGF0YSA9IHtcbiAgICBtYXN0ZXJGaW5nZXJwcmludDoga2V5VmFsLnZhbHVlLnNsaWNlKDAsIDQpLFxuICAgIGV4dGVuZGVkUHVia2V5LFxuICAgIHBhdGg6ICdtJyxcbiAgfTtcbiAgZm9yIChjb25zdCBpIG9mIHJhbmdlKGtleVZhbC52YWx1ZS5sZW5ndGggLyA0IC0gMSkpIHtcbiAgICBjb25zdCB2YWwgPSB0b29scy5yZWFkVUludDMyKGtleVZhbC52YWx1ZSwgaSAqIDQgKyA0LCAnTEUnKTtcbiAgICBjb25zdCBpc0hhcmQgPSAhISh2YWwgJiAweDgwMDAwMDAwKTtcbiAgICBjb25zdCBpZHggPSB2YWwgJiAweDdmZmZmZmZmO1xuICAgIGRhdGEucGF0aCArPSAnLycgKyBpZHgudG9TdHJpbmcoMTApICsgKGlzSGFyZCA/IFwiJ1wiIDogJycpO1xuICB9XG4gIHJldHVybiBkYXRhO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gIGNvbnN0IGhlYWQgPSBuZXcgVWludDhBcnJheShbR2xvYmFsVHlwZXMuR0xPQkFMX1hQVUJdKTtcbiAgY29uc3Qga2V5ID0gdG9vbHMuY29uY2F0KFtoZWFkLCBkYXRhLmV4dGVuZGVkUHVia2V5XSk7XG4gIGNvbnN0IHNwbGl0UGF0aCA9IGRhdGEucGF0aC5zcGxpdCgnLycpO1xuICBjb25zdCB2YWx1ZSA9IG5ldyBVaW50OEFycmF5KHNwbGl0UGF0aC5sZW5ndGggKiA0KTtcbiAgdmFsdWUuc2V0KGRhdGEubWFzdGVyRmluZ2VycHJpbnQsIDApO1xuICBsZXQgb2Zmc2V0ID0gNDtcbiAgc3BsaXRQYXRoLnNsaWNlKDEpLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgIGNvbnN0IGlzSGFyZCA9IGxldmVsLnNsaWNlKC0xKSA9PT0gXCInXCI7XG4gICAgbGV0IG51bSA9IDB4N2ZmZmZmZmYgJiBwYXJzZUludChpc0hhcmQgPyBsZXZlbC5zbGljZSgwLCAtMSkgOiBsZXZlbCwgMTApO1xuICAgIGlmIChpc0hhcmQpIG51bSArPSAweDgwMDAwMDAwO1xuICAgIHRvb2xzLndyaXRlVUludDMyKHZhbHVlLCBvZmZzZXQsIG51bSwgJ0xFJyk7XG4gICAgb2Zmc2V0ICs9IDQ7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIGtleSxcbiAgICB2YWx1ZSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBleHBlY3RlZCA9XG4gICd7IG1hc3RlckZpbmdlcnByaW50OiBVaW50OEFycmF5OyBleHRlbmRlZFB1YmtleTogVWludDhBcnJheTsgcGF0aDogc3RyaW5nOyB9JztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIGNvbnN0IGVwayA9IGRhdGEuZXh0ZW5kZWRQdWJrZXk7XG4gIGNvbnN0IG1mcCA9IGRhdGEubWFzdGVyRmluZ2VycHJpbnQ7XG4gIGNvbnN0IHAgPSBkYXRhLnBhdGg7XG4gIHJldHVybiAoXG4gICAgZXBrIGluc3RhbmNlb2YgVWludDhBcnJheSAmJlxuICAgIGVway5sZW5ndGggPT09IDc4ICYmXG4gICAgWzIsIDNdLmluZGV4T2YoZXBrWzQ1XSkgPiAtMSAmJlxuICAgIG1mcCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICBtZnAubGVuZ3RoID09PSA0ICYmXG4gICAgdHlwZW9mIHAgPT09ICdzdHJpbmcnICYmXG4gICAgISFwLm1hdGNoKC9ebShcXC9cXGQrJz8pKiQvKVxuICApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFkZFRvQXJyYXkoYXJyYXksIGl0ZW0sIGR1cGVTZXQpIHtcbiAgY29uc3QgZHVwZVN0cmluZyA9IHRvb2xzLnRvSGV4KGl0ZW0uZXh0ZW5kZWRQdWJrZXkpO1xuICBpZiAoZHVwZVNldC5oYXMoZHVwZVN0cmluZykpIHJldHVybiBmYWxzZTtcbiAgZHVwZVNldC5hZGQoZHVwZVN0cmluZyk7XG4gIHJldHVybiAoXG4gICAgYXJyYXkuZmlsdGVyKHYgPT4gdG9vbHMuY29tcGFyZSh2LmV4dGVuZGVkUHVia2V5LCBpdGVtLmV4dGVuZGVkUHVia2V5KSlcbiAgICAgIC5sZW5ndGggPT09IDBcbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/globalXpub.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/unsignedTx.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/unsignedTx.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n\nfunction encode(data) {\n  return {\n    key: new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.GlobalTypes.UNSIGNED_TX]),\n    value: data.toBuffer(),\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9nbG9iYWwvdW5zaWduZWRUeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUMzQztBQUNQO0FBQ0EseUJBQXlCLHVEQUFXO0FBQ3BDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2dsb2JhbC91bnNpZ25lZFR4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdsb2JhbFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IG5ldyBVaW50OEFycmF5KFtHbG9iYWxUeXBlcy5VTlNJR05FRF9UWF0pLFxuICAgIHZhbHVlOiBkYXRhLnRvQnVmZmVyKCksXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/unsignedTx.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   globals: () => (/* binding */ globals),\n/* harmony export */   inputs: () => (/* binding */ inputs),\n/* harmony export */   outputs: () => (/* binding */ outputs)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var _global_globalXpub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global/globalXpub.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/globalXpub.js\");\n/* harmony import */ var _global_unsignedTx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global/unsignedTx.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/global/unsignedTx.js\");\n/* harmony import */ var _input_finalScriptSig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input/finalScriptSig.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptSig.js\");\n/* harmony import */ var _input_finalScriptWitness_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./input/finalScriptWitness.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptWitness.js\");\n/* harmony import */ var _input_nonWitnessUtxo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./input/nonWitnessUtxo.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/nonWitnessUtxo.js\");\n/* harmony import */ var _input_partialSig_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./input/partialSig.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/partialSig.js\");\n/* harmony import */ var _input_porCommitment_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./input/porCommitment.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/porCommitment.js\");\n/* harmony import */ var _input_sighashType_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./input/sighashType.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/sighashType.js\");\n/* harmony import */ var _input_tapKeySig_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./input/tapKeySig.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapKeySig.js\");\n/* harmony import */ var _input_tapLeafScript_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./input/tapLeafScript.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapLeafScript.js\");\n/* harmony import */ var _input_tapMerkleRoot_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./input/tapMerkleRoot.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapMerkleRoot.js\");\n/* harmony import */ var _input_tapScriptSig_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./input/tapScriptSig.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapScriptSig.js\");\n/* harmony import */ var _input_witnessUtxo_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./input/witnessUtxo.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/witnessUtxo.js\");\n/* harmony import */ var _output_tapTree_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./output/tapTree.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/output/tapTree.js\");\n/* harmony import */ var _shared_bip32Derivation_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./shared/bip32Derivation.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/bip32Derivation.js\");\n/* harmony import */ var _shared_checkPubkey_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./shared/checkPubkey.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/checkPubkey.js\");\n/* harmony import */ var _shared_redeemScript_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./shared/redeemScript.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/redeemScript.js\");\n/* harmony import */ var _shared_tapBip32Derivation_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./shared/tapBip32Derivation.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapBip32Derivation.js\");\n/* harmony import */ var _shared_tapInternalKey_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./shared/tapInternalKey.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapInternalKey.js\");\n/* harmony import */ var _shared_witnessScript_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./shared/witnessScript.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/witnessScript.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst globals = {\n  unsignedTx: _global_unsignedTx_js__WEBPACK_IMPORTED_MODULE_2__,\n  globalXpub: _global_globalXpub_js__WEBPACK_IMPORTED_MODULE_1__,\n  // pass an Array of key bytes that require pubkey beside the key\n  checkPubkey: _shared_checkPubkey_js__WEBPACK_IMPORTED_MODULE_16__.makeChecker([]),\n};\nconst inputs = {\n  nonWitnessUtxo: _input_nonWitnessUtxo_js__WEBPACK_IMPORTED_MODULE_5__,\n  partialSig: _input_partialSig_js__WEBPACK_IMPORTED_MODULE_6__,\n  sighashType: _input_sighashType_js__WEBPACK_IMPORTED_MODULE_8__,\n  finalScriptSig: _input_finalScriptSig_js__WEBPACK_IMPORTED_MODULE_3__,\n  finalScriptWitness: _input_finalScriptWitness_js__WEBPACK_IMPORTED_MODULE_4__,\n  porCommitment: _input_porCommitment_js__WEBPACK_IMPORTED_MODULE_7__,\n  witnessUtxo: _input_witnessUtxo_js__WEBPACK_IMPORTED_MODULE_13__,\n  bip32Derivation: _shared_bip32Derivation_js__WEBPACK_IMPORTED_MODULE_15__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.BIP32_DERIVATION),\n  redeemScript: _shared_redeemScript_js__WEBPACK_IMPORTED_MODULE_17__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.REDEEM_SCRIPT),\n  witnessScript: _shared_witnessScript_js__WEBPACK_IMPORTED_MODULE_20__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.WITNESS_SCRIPT),\n  checkPubkey: _shared_checkPubkey_js__WEBPACK_IMPORTED_MODULE_16__.makeChecker([\n    _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.PARTIAL_SIG,\n    _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.BIP32_DERIVATION,\n  ]),\n  tapKeySig: _input_tapKeySig_js__WEBPACK_IMPORTED_MODULE_9__,\n  tapScriptSig: _input_tapScriptSig_js__WEBPACK_IMPORTED_MODULE_12__,\n  tapLeafScript: _input_tapLeafScript_js__WEBPACK_IMPORTED_MODULE_10__,\n  tapBip32Derivation: _shared_tapBip32Derivation_js__WEBPACK_IMPORTED_MODULE_18__.makeConverter(\n    _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapInternalKey: _shared_tapInternalKey_js__WEBPACK_IMPORTED_MODULE_19__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_INTERNAL_KEY),\n  tapMerkleRoot: _input_tapMerkleRoot_js__WEBPACK_IMPORTED_MODULE_11__,\n};\nconst outputs = {\n  bip32Derivation: _shared_bip32Derivation_js__WEBPACK_IMPORTED_MODULE_15__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.BIP32_DERIVATION),\n  redeemScript: _shared_redeemScript_js__WEBPACK_IMPORTED_MODULE_17__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.REDEEM_SCRIPT),\n  witnessScript: _shared_witnessScript_js__WEBPACK_IMPORTED_MODULE_20__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.WITNESS_SCRIPT),\n  checkPubkey: _shared_checkPubkey_js__WEBPACK_IMPORTED_MODULE_16__.makeChecker([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.BIP32_DERIVATION]),\n  tapBip32Derivation: _shared_tapBip32Derivation_js__WEBPACK_IMPORTED_MODULE_18__.makeConverter(\n    _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapTree: _output_tapTree_js__WEBPACK_IMPORTED_MODULE_14__,\n  tapInternalKey: _shared_tapInternalKey_js__WEBPACK_IMPORTED_MODULE_19__.makeConverter(_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.TAP_INTERNAL_KEY),\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkQ7QUFDTjtBQUNBO0FBQ087QUFDUTtBQUNSO0FBQ1I7QUFDTTtBQUNKO0FBQ0o7QUFDUTtBQUNBO0FBQ0Y7QUFDRjtBQUNQO0FBQ2dCO0FBQ1I7QUFDRTtBQUNZO0FBQ1I7QUFDRjtBQUMzRDtBQUNBLFlBQVk7QUFDWixZQUFZO0FBQ1o7QUFDQSxlQUFlLGdFQUF1QjtBQUN0QztBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWixhQUFhO0FBQ2IsZ0JBQWdCO0FBQ2hCLG9CQUFvQjtBQUNwQixlQUFlO0FBQ2YsYUFBYTtBQUNiLG1CQUFtQixzRUFBNkIsQ0FBQyxzREFBVTtBQUMzRCxnQkFBZ0IsbUVBQTBCLENBQUMsc0RBQVU7QUFDckQsaUJBQWlCLG9FQUEyQixDQUFDLHNEQUFVO0FBQ3ZELGVBQWUsZ0VBQXVCO0FBQ3RDLElBQUksc0RBQVU7QUFDZCxJQUFJLHNEQUFVO0FBQ2Q7QUFDQSxXQUFXO0FBQ1gsY0FBYztBQUNkLGVBQWU7QUFDZixzQkFBc0IseUVBQWdDO0FBQ3RELElBQUksc0RBQVU7QUFDZDtBQUNBLGtCQUFrQixxRUFBNEIsQ0FBQyxzREFBVTtBQUN6RCxlQUFlO0FBQ2Y7QUFDQTtBQUNBLG1CQUFtQixzRUFBNkIsQ0FBQyx1REFBVztBQUM1RCxnQkFBZ0IsbUVBQTBCLENBQUMsdURBQVc7QUFDdEQsaUJBQWlCLG9FQUEyQixDQUFDLHVEQUFXO0FBQ3hELGVBQWUsZ0VBQXVCLEVBQUUsdURBQVc7QUFDbkQsc0JBQXNCLHlFQUFnQztBQUN0RCxJQUFJLHVEQUFXO0FBQ2Y7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLHFFQUE0QixDQUFDLHVEQUFXO0FBQzFEO0FBQ29DIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRUeXBlcywgT3V0cHV0VHlwZXMgfSBmcm9tICcuLi90eXBlRmllbGRzLmpzJztcbmltcG9ydCAqIGFzIGdsb2JhbFhwdWIgZnJvbSAnLi9nbG9iYWwvZ2xvYmFsWHB1Yi5qcyc7XG5pbXBvcnQgKiBhcyB1bnNpZ25lZFR4IGZyb20gJy4vZ2xvYmFsL3Vuc2lnbmVkVHguanMnO1xuaW1wb3J0ICogYXMgZmluYWxTY3JpcHRTaWcgZnJvbSAnLi9pbnB1dC9maW5hbFNjcmlwdFNpZy5qcyc7XG5pbXBvcnQgKiBhcyBmaW5hbFNjcmlwdFdpdG5lc3MgZnJvbSAnLi9pbnB1dC9maW5hbFNjcmlwdFdpdG5lc3MuanMnO1xuaW1wb3J0ICogYXMgbm9uV2l0bmVzc1V0eG8gZnJvbSAnLi9pbnB1dC9ub25XaXRuZXNzVXR4by5qcyc7XG5pbXBvcnQgKiBhcyBwYXJ0aWFsU2lnIGZyb20gJy4vaW5wdXQvcGFydGlhbFNpZy5qcyc7XG5pbXBvcnQgKiBhcyBwb3JDb21taXRtZW50IGZyb20gJy4vaW5wdXQvcG9yQ29tbWl0bWVudC5qcyc7XG5pbXBvcnQgKiBhcyBzaWdoYXNoVHlwZSBmcm9tICcuL2lucHV0L3NpZ2hhc2hUeXBlLmpzJztcbmltcG9ydCAqIGFzIHRhcEtleVNpZyBmcm9tICcuL2lucHV0L3RhcEtleVNpZy5qcyc7XG5pbXBvcnQgKiBhcyB0YXBMZWFmU2NyaXB0IGZyb20gJy4vaW5wdXQvdGFwTGVhZlNjcmlwdC5qcyc7XG5pbXBvcnQgKiBhcyB0YXBNZXJrbGVSb290IGZyb20gJy4vaW5wdXQvdGFwTWVya2xlUm9vdC5qcyc7XG5pbXBvcnQgKiBhcyB0YXBTY3JpcHRTaWcgZnJvbSAnLi9pbnB1dC90YXBTY3JpcHRTaWcuanMnO1xuaW1wb3J0ICogYXMgd2l0bmVzc1V0eG8gZnJvbSAnLi9pbnB1dC93aXRuZXNzVXR4by5qcyc7XG5pbXBvcnQgKiBhcyB0YXBUcmVlIGZyb20gJy4vb3V0cHV0L3RhcFRyZWUuanMnO1xuaW1wb3J0ICogYXMgYmlwMzJEZXJpdmF0aW9uIGZyb20gJy4vc2hhcmVkL2JpcDMyRGVyaXZhdGlvbi5qcyc7XG5pbXBvcnQgKiBhcyBjaGVja1B1YmtleSBmcm9tICcuL3NoYXJlZC9jaGVja1B1YmtleS5qcyc7XG5pbXBvcnQgKiBhcyByZWRlZW1TY3JpcHQgZnJvbSAnLi9zaGFyZWQvcmVkZWVtU2NyaXB0LmpzJztcbmltcG9ydCAqIGFzIHRhcEJpcDMyRGVyaXZhdGlvbiBmcm9tICcuL3NoYXJlZC90YXBCaXAzMkRlcml2YXRpb24uanMnO1xuaW1wb3J0ICogYXMgdGFwSW50ZXJuYWxLZXkgZnJvbSAnLi9zaGFyZWQvdGFwSW50ZXJuYWxLZXkuanMnO1xuaW1wb3J0ICogYXMgd2l0bmVzc1NjcmlwdCBmcm9tICcuL3NoYXJlZC93aXRuZXNzU2NyaXB0LmpzJztcbmNvbnN0IGdsb2JhbHMgPSB7XG4gIHVuc2lnbmVkVHgsXG4gIGdsb2JhbFhwdWIsXG4gIC8vIHBhc3MgYW4gQXJyYXkgb2Yga2V5IGJ5dGVzIHRoYXQgcmVxdWlyZSBwdWJrZXkgYmVzaWRlIHRoZSBrZXlcbiAgY2hlY2tQdWJrZXk6IGNoZWNrUHVia2V5Lm1ha2VDaGVja2VyKFtdKSxcbn07XG5jb25zdCBpbnB1dHMgPSB7XG4gIG5vbldpdG5lc3NVdHhvLFxuICBwYXJ0aWFsU2lnLFxuICBzaWdoYXNoVHlwZSxcbiAgZmluYWxTY3JpcHRTaWcsXG4gIGZpbmFsU2NyaXB0V2l0bmVzcyxcbiAgcG9yQ29tbWl0bWVudCxcbiAgd2l0bmVzc1V0eG8sXG4gIGJpcDMyRGVyaXZhdGlvbjogYmlwMzJEZXJpdmF0aW9uLm1ha2VDb252ZXJ0ZXIoSW5wdXRUeXBlcy5CSVAzMl9ERVJJVkFUSU9OKSxcbiAgcmVkZWVtU2NyaXB0OiByZWRlZW1TY3JpcHQubWFrZUNvbnZlcnRlcihJbnB1dFR5cGVzLlJFREVFTV9TQ1JJUFQpLFxuICB3aXRuZXNzU2NyaXB0OiB3aXRuZXNzU2NyaXB0Lm1ha2VDb252ZXJ0ZXIoSW5wdXRUeXBlcy5XSVRORVNTX1NDUklQVCksXG4gIGNoZWNrUHVia2V5OiBjaGVja1B1YmtleS5tYWtlQ2hlY2tlcihbXG4gICAgSW5wdXRUeXBlcy5QQVJUSUFMX1NJRyxcbiAgICBJbnB1dFR5cGVzLkJJUDMyX0RFUklWQVRJT04sXG4gIF0pLFxuICB0YXBLZXlTaWcsXG4gIHRhcFNjcmlwdFNpZyxcbiAgdGFwTGVhZlNjcmlwdCxcbiAgdGFwQmlwMzJEZXJpdmF0aW9uOiB0YXBCaXAzMkRlcml2YXRpb24ubWFrZUNvbnZlcnRlcihcbiAgICBJbnB1dFR5cGVzLlRBUF9CSVAzMl9ERVJJVkFUSU9OLFxuICApLFxuICB0YXBJbnRlcm5hbEtleTogdGFwSW50ZXJuYWxLZXkubWFrZUNvbnZlcnRlcihJbnB1dFR5cGVzLlRBUF9JTlRFUk5BTF9LRVkpLFxuICB0YXBNZXJrbGVSb290LFxufTtcbmNvbnN0IG91dHB1dHMgPSB7XG4gIGJpcDMyRGVyaXZhdGlvbjogYmlwMzJEZXJpdmF0aW9uLm1ha2VDb252ZXJ0ZXIoT3V0cHV0VHlwZXMuQklQMzJfREVSSVZBVElPTiksXG4gIHJlZGVlbVNjcmlwdDogcmVkZWVtU2NyaXB0Lm1ha2VDb252ZXJ0ZXIoT3V0cHV0VHlwZXMuUkVERUVNX1NDUklQVCksXG4gIHdpdG5lc3NTY3JpcHQ6IHdpdG5lc3NTY3JpcHQubWFrZUNvbnZlcnRlcihPdXRwdXRUeXBlcy5XSVRORVNTX1NDUklQVCksXG4gIGNoZWNrUHVia2V5OiBjaGVja1B1YmtleS5tYWtlQ2hlY2tlcihbT3V0cHV0VHlwZXMuQklQMzJfREVSSVZBVElPTl0pLFxuICB0YXBCaXAzMkRlcml2YXRpb246IHRhcEJpcDMyRGVyaXZhdGlvbi5tYWtlQ29udmVydGVyKFxuICAgIE91dHB1dFR5cGVzLlRBUF9CSVAzMl9ERVJJVkFUSU9OLFxuICApLFxuICB0YXBUcmVlLFxuICB0YXBJbnRlcm5hbEtleTogdGFwSW50ZXJuYWxLZXkubWFrZUNvbnZlcnRlcihPdXRwdXRUeXBlcy5UQVBfSU5URVJOQUxfS0VZKSxcbn07XG5leHBvcnQgeyBnbG9iYWxzLCBpbnB1dHMsIG91dHB1dHMgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptSig.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptSig.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.FINAL_SCRIPTSIG) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptSig with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  return keyVal.value;\n}\nfunction encode(data) {\n  const key = new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.FINAL_SCRIPTSIG]);\n  return {\n    key,\n    value: data,\n  };\n}\nconst expected = 'Uint8Array';\nfunction check(data) {\n  return data instanceof Uint8Array;\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.finalScriptSig === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9maW5hbFNjcmlwdFNpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlEO0FBQ1A7QUFDbkM7QUFDUCx3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixzREFBVTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9maW5hbFNjcmlwdFNpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBJbnB1dFR5cGVzLkZJTkFMX1NDUklQVFNJRykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgZmluYWxTY3JpcHRTaWcgd2l0aCBrZXkgMHgnICtcbiAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgKTtcbiAgfVxuICByZXR1cm4ga2V5VmFsLnZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gIGNvbnN0IGtleSA9IG5ldyBVaW50OEFycmF5KFtJbnB1dFR5cGVzLkZJTkFMX1NDUklQVFNJR10pO1xuICByZXR1cm4ge1xuICAgIGtleSxcbiAgICB2YWx1ZTogZGF0YSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBleHBlY3RlZCA9ICdVaW50OEFycmF5JztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIHJldHVybiBkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgcmV0dXJuICEhY3VycmVudERhdGEgJiYgISFuZXdEYXRhICYmIGN1cnJlbnREYXRhLmZpbmFsU2NyaXB0U2lnID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptSig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptWitness.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptWitness.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.FINAL_SCRIPTWITNESS) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptWitness with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  return keyVal.value;\n}\nfunction encode(data) {\n  const key = new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.FINAL_SCRIPTWITNESS]);\n  return {\n    key,\n    value: data,\n  };\n}\nconst expected = 'Uint8Array';\nfunction check(data) {\n  return data instanceof Uint8Array;\n}\nfunction canAdd(currentData, newData) {\n  return (\n    !!currentData && !!newData && currentData.finalScriptWitness === undefined\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9maW5hbFNjcmlwdFdpdG5lc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRDtBQUNQO0FBQ25DO0FBQ1Asd0JBQXdCLHNEQUFVO0FBQ2xDO0FBQ0E7QUFDQSxRQUFRLG1EQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw4QkFBOEIsc0RBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2lucHV0L2ZpbmFsU2NyaXB0V2l0bmVzcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBJbnB1dFR5cGVzLkZJTkFMX1NDUklQVFdJVE5FU1MpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiBjb3VsZCBub3QgZGVjb2RlIGZpbmFsU2NyaXB0V2l0bmVzcyB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIHJldHVybiBrZXlWYWwudmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgY29uc3Qga2V5ID0gbmV3IFVpbnQ4QXJyYXkoW0lucHV0VHlwZXMuRklOQUxfU0NSSVBUV0lUTkVTU10pO1xuICByZXR1cm4ge1xuICAgIGtleSxcbiAgICB2YWx1ZTogZGF0YSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBleHBlY3RlZCA9ICdVaW50OEFycmF5JztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIHJldHVybiBkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgcmV0dXJuIChcbiAgICAhIWN1cnJlbnREYXRhICYmICEhbmV3RGF0YSAmJiBjdXJyZW50RGF0YS5maW5hbFNjcmlwdFdpdG5lc3MgPT09IHVuZGVmaW5lZFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/finalScriptWitness.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/nonWitnessUtxo.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/nonWitnessUtxo.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.NON_WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode nonWitnessUtxo with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  return keyVal.value;\n}\nfunction encode(data) {\n  return {\n    key: new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.NON_WITNESS_UTXO]),\n    value: data,\n  };\n}\nconst expected = 'Uint8Array';\nfunction check(data) {\n  return data instanceof Uint8Array;\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.nonWitnessUtxo === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9ub25XaXRuZXNzVXR4by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlEO0FBQ1A7QUFDbkM7QUFDUCx3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EseUJBQXlCLHNEQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvaW5wdXQvbm9uV2l0bmVzc1V0eG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRUeXBlcyB9IGZyb20gJy4uLy4uL3R5cGVGaWVsZHMuanMnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGtleVZhbCkge1xuICBpZiAoa2V5VmFsLmtleVswXSAhPT0gSW5wdXRUeXBlcy5OT05fV0lUTkVTU19VVFhPKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSBub25XaXRuZXNzVXR4byB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIHJldHVybiBrZXlWYWwudmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IG5ldyBVaW50OEFycmF5KFtJbnB1dFR5cGVzLk5PTl9XSVRORVNTX1VUWE9dKSxcbiAgICB2YWx1ZTogZGF0YSxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBleHBlY3RlZCA9ICdVaW50OEFycmF5JztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIHJldHVybiBkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgcmV0dXJuICEhY3VycmVudERhdGEgJiYgISFuZXdEYXRhICYmIGN1cnJlbnREYXRhLm5vbldpdG5lc3NVdHhvID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/nonWitnessUtxo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/partialSig.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/partialSig.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAddToArray: () => (/* binding */ canAddToArray),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.PARTIAL_SIG) {\n    throw new Error(\n      'Decode Error: could not decode partialSig with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (\n    !(keyVal.key.length === 34 || keyVal.key.length === 66) ||\n    ![2, 3, 4].includes(keyVal.key[1])\n  ) {\n    throw new Error(\n      'Decode Error: partialSig has invalid pubkey in key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  const pubkey = keyVal.key.slice(1);\n  return {\n    pubkey,\n    signature: keyVal.value,\n  };\n}\nfunction encode(pSig) {\n  const head = new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.PARTIAL_SIG]);\n  return {\n    key: uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([head, pSig.pubkey]),\n    value: pSig.signature,\n  };\n}\nconst expected = '{ pubkey: Uint8Array; signature: Uint8Array; }';\nfunction check(data) {\n  return (\n    data.pubkey instanceof Uint8Array &&\n    data.signature instanceof Uint8Array &&\n    [33, 65].includes(data.pubkey.length) &&\n    [2, 3, 4].includes(data.pubkey[0]) &&\n    isDerSigWithSighash(data.signature)\n  );\n}\nfunction isDerSigWithSighash(buf) {\n  if (!(buf instanceof Uint8Array) || buf.length < 9) return false;\n  if (buf[0] !== 0x30) return false;\n  if (buf.length !== buf[1] + 3) return false;\n  if (buf[2] !== 0x02) return false;\n  const rLen = buf[3];\n  if (rLen > 33 || rLen < 1) return false;\n  if (buf[3 + rLen + 1] !== 0x02) return false;\n  const sLen = buf[3 + rLen + 2];\n  if (sLen > 33 || sLen < 1) return false;\n  if (buf.length !== 3 + rLen + 2 + sLen + 2) return false;\n  return true;\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(item.pubkey);\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(v.pubkey, item.pubkey) === 0).length === 0\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9wYXJ0aWFsU2lnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUQ7QUFDUDtBQUNuQztBQUNQLHdCQUF3QixzREFBVTtBQUNsQztBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCwrQkFBK0Isc0RBQVU7QUFDekM7QUFDQSxTQUFTLG9EQUFZO0FBQ3JCO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixvQkFBb0Isd0JBQXdCO0FBQ2hFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsbURBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFhO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9wYXJ0aWFsU2lnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0VHlwZXMgfSBmcm9tICcuLi8uLi90eXBlRmllbGRzLmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgaWYgKGtleVZhbC5rZXlbMF0gIT09IElucHV0VHlwZXMuUEFSVElBTF9TSUcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiBjb3VsZCBub3QgZGVjb2RlIHBhcnRpYWxTaWcgd2l0aCBrZXkgMHgnICtcbiAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgIShrZXlWYWwua2V5Lmxlbmd0aCA9PT0gMzQgfHwga2V5VmFsLmtleS5sZW5ndGggPT09IDY2KSB8fFxuICAgICFbMiwgMywgNF0uaW5jbHVkZXMoa2V5VmFsLmtleVsxXSlcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogcGFydGlhbFNpZyBoYXMgaW52YWxpZCBwdWJrZXkgaW4ga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgY29uc3QgcHVia2V5ID0ga2V5VmFsLmtleS5zbGljZSgxKTtcbiAgcmV0dXJuIHtcbiAgICBwdWJrZXksXG4gICAgc2lnbmF0dXJlOiBrZXlWYWwudmFsdWUsXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHBTaWcpIHtcbiAgY29uc3QgaGVhZCA9IG5ldyBVaW50OEFycmF5KFtJbnB1dFR5cGVzLlBBUlRJQUxfU0lHXSk7XG4gIHJldHVybiB7XG4gICAga2V5OiB0b29scy5jb25jYXQoW2hlYWQsIHBTaWcucHVia2V5XSksXG4gICAgdmFsdWU6IHBTaWcuc2lnbmF0dXJlLFxuICB9O1xufVxuZXhwb3J0IGNvbnN0IGV4cGVjdGVkID0gJ3sgcHVia2V5OiBVaW50OEFycmF5OyBzaWduYXR1cmU6IFVpbnQ4QXJyYXk7IH0nO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKGRhdGEpIHtcbiAgcmV0dXJuIChcbiAgICBkYXRhLnB1YmtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICBkYXRhLnNpZ25hdHVyZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICBbMzMsIDY1XS5pbmNsdWRlcyhkYXRhLnB1YmtleS5sZW5ndGgpICYmXG4gICAgWzIsIDMsIDRdLmluY2x1ZGVzKGRhdGEucHVia2V5WzBdKSAmJlxuICAgIGlzRGVyU2lnV2l0aFNpZ2hhc2goZGF0YS5zaWduYXR1cmUpXG4gICk7XG59XG5mdW5jdGlvbiBpc0RlclNpZ1dpdGhTaWdoYXNoKGJ1Zikge1xuICBpZiAoIShidWYgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB8fCBidWYubGVuZ3RoIDwgOSkgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmWzBdICE9PSAweDMwKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWYubGVuZ3RoICE9PSBidWZbMV0gKyAzKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWZbMl0gIT09IDB4MDIpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgckxlbiA9IGJ1ZlszXTtcbiAgaWYgKHJMZW4gPiAzMyB8fCByTGVuIDwgMSkgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmWzMgKyByTGVuICsgMV0gIT09IDB4MDIpIHJldHVybiBmYWxzZTtcbiAgY29uc3Qgc0xlbiA9IGJ1ZlszICsgckxlbiArIDJdO1xuICBpZiAoc0xlbiA+IDMzIHx8IHNMZW4gPCAxKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWYubGVuZ3RoICE9PSAzICsgckxlbiArIDIgKyBzTGVuICsgMikgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGRUb0FycmF5KGFycmF5LCBpdGVtLCBkdXBlU2V0KSB7XG4gIGNvbnN0IGR1cGVTdHJpbmcgPSB0b29scy50b0hleChpdGVtLnB1YmtleSk7XG4gIGlmIChkdXBlU2V0LmhhcyhkdXBlU3RyaW5nKSkgcmV0dXJuIGZhbHNlO1xuICBkdXBlU2V0LmFkZChkdXBlU3RyaW5nKTtcbiAgcmV0dXJuIChcbiAgICBhcnJheS5maWx0ZXIodiA9PiB0b29scy5jb21wYXJlKHYucHVia2V5LCBpdGVtLnB1YmtleSkgPT09IDApLmxlbmd0aCA9PT0gMFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/partialSig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/porCommitment.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/porCommitment.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.POR_COMMITMENT) {\n    throw new Error(\n      'Decode Error: could not decode porCommitment with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toUtf8(keyVal.value);\n}\nfunction encode(data) {\n  const key = new Uint8Array([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.POR_COMMITMENT]);\n  return {\n    key,\n    value: uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.fromUtf8(data),\n  };\n}\nconst expected = 'string';\nfunction check(data) {\n  return typeof data === 'string';\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.porCommitment === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9wb3JDb21taXRtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUQ7QUFDUDtBQUNuQztBQUNQLHdCQUF3QixzREFBVTtBQUNsQztBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0EsU0FBUyxvREFBWTtBQUNyQjtBQUNPO0FBQ1AsOEJBQThCLHNEQUFVO0FBQ3hDO0FBQ0E7QUFDQSxXQUFXLHNEQUFjO0FBQ3pCO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2lucHV0L3BvckNvbW1pdG1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRUeXBlcyB9IGZyb20gJy4uLy4uL3R5cGVGaWVsZHMuanMnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGtleVZhbCkge1xuICBpZiAoa2V5VmFsLmtleVswXSAhPT0gSW5wdXRUeXBlcy5QT1JfQ09NTUlUTUVOVCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgcG9yQ29tbWl0bWVudCB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIHJldHVybiB0b29scy50b1V0Zjgoa2V5VmFsLnZhbHVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICBjb25zdCBrZXkgPSBuZXcgVWludDhBcnJheShbSW5wdXRUeXBlcy5QT1JfQ09NTUlUTUVOVF0pO1xuICByZXR1cm4ge1xuICAgIGtleSxcbiAgICB2YWx1ZTogdG9vbHMuZnJvbVV0ZjgoZGF0YSksXG4gIH07XG59XG5leHBvcnQgY29uc3QgZXhwZWN0ZWQgPSAnc3RyaW5nJztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnQgZnVuY3Rpb24gY2FuQWRkKGN1cnJlbnREYXRhLCBuZXdEYXRhKSB7XG4gIHJldHVybiAhIWN1cnJlbnREYXRhICYmICEhbmV3RGF0YSAmJiBjdXJyZW50RGF0YS5wb3JDb21taXRtZW50ID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/porCommitment.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/sighashType.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/sighashType.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.SIGHASH_TYPE) {\n    throw new Error(\n      'Decode Error: could not decode sighashType with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  return Number(uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt32(keyVal.value, 0, 'LE'));\n}\nfunction encode(data) {\n  const key = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.SIGHASH_TYPE]);\n  const value = new Uint8Array(4);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(value, 0, data, 'LE');\n  return {\n    key,\n    value,\n  };\n}\nconst expected = 'number';\nfunction check(data) {\n  return typeof data === 'number';\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.sighashType === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC9zaWdoYXNoVHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlEO0FBQ1A7QUFDbkM7QUFDUCx3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBLGdCQUFnQix3REFBZ0I7QUFDaEM7QUFDTztBQUNQLCtCQUErQixzREFBVTtBQUN6QztBQUNBLEVBQUUseURBQWlCO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2lucHV0L3NpZ2hhc2hUeXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0VHlwZXMgfSBmcm9tICcuLi8uLi90eXBlRmllbGRzLmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgaWYgKGtleVZhbC5rZXlbMF0gIT09IElucHV0VHlwZXMuU0lHSEFTSF9UWVBFKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSBzaWdoYXNoVHlwZSB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIHJldHVybiBOdW1iZXIodG9vbHMucmVhZFVJbnQzMihrZXlWYWwudmFsdWUsIDAsICdMRScpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICBjb25zdCBrZXkgPSBVaW50OEFycmF5LmZyb20oW0lucHV0VHlwZXMuU0lHSEFTSF9UWVBFXSk7XG4gIGNvbnN0IHZhbHVlID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gIHRvb2xzLndyaXRlVUludDMyKHZhbHVlLCAwLCBkYXRhLCAnTEUnKTtcbiAgcmV0dXJuIHtcbiAgICBrZXksXG4gICAgdmFsdWUsXG4gIH07XG59XG5leHBvcnQgY29uc3QgZXhwZWN0ZWQgPSAnbnVtYmVyJztcbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gY2FuQWRkKGN1cnJlbnREYXRhLCBuZXdEYXRhKSB7XG4gIHJldHVybiAhIWN1cnJlbnREYXRhICYmICEhbmV3RGF0YSAmJiBjdXJyZW50RGF0YS5zaWdoYXNoVHlwZSA9PT0gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/sighashType.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapKeySig.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapKeySig.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_KEY_SIG || keyVal.key.length !== 1) {\n    throw new Error(\n      'Decode Error: could not decode tapKeySig with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error(\n      'Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature',\n    );\n  }\n  return keyVal.value;\n}\nfunction encode(value) {\n  const key = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_KEY_SIG]);\n  return { key, value };\n}\nconst expected = 'Uint8Array';\nfunction check(data) {\n  return (\n    data instanceof Uint8Array && (data.length === 64 || data.length === 65)\n  );\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapKeySig === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC90YXBLZXlTaWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRDtBQUNQO0FBQ25DO0FBQ1Asd0JBQXdCLHNEQUFVO0FBQ2xDO0FBQ0E7QUFDQSxRQUFRLG1EQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsK0JBQStCLHNEQUFVO0FBQ3pDLFdBQVc7QUFDWDtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2lucHV0L3RhcEtleVNpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBJbnB1dFR5cGVzLlRBUF9LRVlfU0lHIHx8IGtleVZhbC5rZXkubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSB0YXBLZXlTaWcgd2l0aCBrZXkgMHgnICtcbiAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgKTtcbiAgfVxuICBpZiAoIWNoZWNrKGtleVZhbC52YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiB0YXBLZXlTaWcgbm90IGEgdmFsaWQgNjQtNjUtYnl0ZSBCSVAzNDAgc2lnbmF0dXJlJyxcbiAgICApO1xuICB9XG4gIHJldHVybiBrZXlWYWwudmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHZhbHVlKSB7XG4gIGNvbnN0IGtleSA9IFVpbnQ4QXJyYXkuZnJvbShbSW5wdXRUeXBlcy5UQVBfS0VZX1NJR10pO1xuICByZXR1cm4geyBrZXksIHZhbHVlIH07XG59XG5leHBvcnQgY29uc3QgZXhwZWN0ZWQgPSAnVWludDhBcnJheSc7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2soZGF0YSkge1xuICByZXR1cm4gKFxuICAgIGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIChkYXRhLmxlbmd0aCA9PT0gNjQgfHwgZGF0YS5sZW5ndGggPT09IDY1KVxuICApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFkZChjdXJyZW50RGF0YSwgbmV3RGF0YSkge1xuICByZXR1cm4gISFjdXJyZW50RGF0YSAmJiAhIW5ld0RhdGEgJiYgY3VycmVudERhdGEudGFwS2V5U2lnID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapKeySig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapLeafScript.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapLeafScript.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAddToArray: () => (/* binding */ canAddToArray),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error(\n      'Decode Error: could not decode tapLeafScript with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error(\n      'Decode Error: tapLeafScript has invalid control block in key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error(\n      'Decode Error: tapLeafScript bad leaf version in key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return { controlBlock, script, leafVersion };\n}\nfunction encode(tScript) {\n  const head = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Uint8Array.from([tScript.leafVersion]);\n  return {\n    key: uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([head, tScript.controlBlock]),\n    value: uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([tScript.script, verBuf]),\n  };\n}\nconst expected =\n  '{ controlBlock: Uint8Array; leafVersion: number, script: Uint8Array; }';\nfunction check(data) {\n  return (\n    data.controlBlock instanceof Uint8Array &&\n    (data.controlBlock.length - 1) % 32 === 0 &&\n    (data.controlBlock[0] & 0xfe) === data.leafVersion &&\n    data.script instanceof Uint8Array\n  );\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(item.controlBlock);\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(v.controlBlock, item.controlBlock) === 0)\n      .length === 0\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC90YXBMZWFmU2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUQ7QUFDUDtBQUNuQztBQUNQLHdCQUF3QixzREFBVTtBQUNsQztBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG1EQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ087QUFDUCxnQ0FBZ0Msc0RBQVU7QUFDMUM7QUFDQTtBQUNBLFNBQVMsb0RBQVk7QUFDckIsV0FBVyxvREFBWTtBQUN2QjtBQUNBO0FBQ087QUFDUCxLQUFLLDBCQUEwQiwwQ0FBMEM7QUFDbEU7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLG1EQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixxREFBYTtBQUNuQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC90YXBMZWFmU2NyaXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0VHlwZXMgfSBmcm9tICcuLi8uLi90eXBlRmllbGRzLmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgaWYgKGtleVZhbC5rZXlbMF0gIT09IElucHV0VHlwZXMuVEFQX0xFQUZfU0NSSVBUKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSB0YXBMZWFmU2NyaXB0IHdpdGgga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgaWYgKChrZXlWYWwua2V5Lmxlbmd0aCAtIDIpICUgMzIgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiB0YXBMZWFmU2NyaXB0IGhhcyBpbnZhbGlkIGNvbnRyb2wgYmxvY2sgaW4ga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgY29uc3QgbGVhZlZlcnNpb24gPSBrZXlWYWwudmFsdWVba2V5VmFsLnZhbHVlLmxlbmd0aCAtIDFdO1xuICBpZiAoKGtleVZhbC5rZXlbMV0gJiAweGZlKSAhPT0gbGVhZlZlcnNpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiB0YXBMZWFmU2NyaXB0IGJhZCBsZWFmIHZlcnNpb24gaW4ga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgY29uc3Qgc2NyaXB0ID0ga2V5VmFsLnZhbHVlLnNsaWNlKDAsIC0xKTtcbiAgY29uc3QgY29udHJvbEJsb2NrID0ga2V5VmFsLmtleS5zbGljZSgxKTtcbiAgcmV0dXJuIHsgY29udHJvbEJsb2NrLCBzY3JpcHQsIGxlYWZWZXJzaW9uIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHRTY3JpcHQpIHtcbiAgY29uc3QgaGVhZCA9IFVpbnQ4QXJyYXkuZnJvbShbSW5wdXRUeXBlcy5UQVBfTEVBRl9TQ1JJUFRdKTtcbiAgY29uc3QgdmVyQnVmID0gVWludDhBcnJheS5mcm9tKFt0U2NyaXB0LmxlYWZWZXJzaW9uXSk7XG4gIHJldHVybiB7XG4gICAga2V5OiB0b29scy5jb25jYXQoW2hlYWQsIHRTY3JpcHQuY29udHJvbEJsb2NrXSksXG4gICAgdmFsdWU6IHRvb2xzLmNvbmNhdChbdFNjcmlwdC5zY3JpcHQsIHZlckJ1Zl0pLFxuICB9O1xufVxuZXhwb3J0IGNvbnN0IGV4cGVjdGVkID1cbiAgJ3sgY29udHJvbEJsb2NrOiBVaW50OEFycmF5OyBsZWFmVmVyc2lvbjogbnVtYmVyLCBzY3JpcHQ6IFVpbnQ4QXJyYXk7IH0nO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKGRhdGEpIHtcbiAgcmV0dXJuIChcbiAgICBkYXRhLmNvbnRyb2xCbG9jayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAoZGF0YS5jb250cm9sQmxvY2subGVuZ3RoIC0gMSkgJSAzMiA9PT0gMCAmJlxuICAgIChkYXRhLmNvbnRyb2xCbG9ja1swXSAmIDB4ZmUpID09PSBkYXRhLmxlYWZWZXJzaW9uICYmXG4gICAgZGF0YS5zY3JpcHQgaW5zdGFuY2VvZiBVaW50OEFycmF5XG4gICk7XG59XG5leHBvcnQgZnVuY3Rpb24gY2FuQWRkVG9BcnJheShhcnJheSwgaXRlbSwgZHVwZVNldCkge1xuICBjb25zdCBkdXBlU3RyaW5nID0gdG9vbHMudG9IZXgoaXRlbS5jb250cm9sQmxvY2spO1xuICBpZiAoZHVwZVNldC5oYXMoZHVwZVN0cmluZykpIHJldHVybiBmYWxzZTtcbiAgZHVwZVNldC5hZGQoZHVwZVN0cmluZyk7XG4gIHJldHVybiAoXG4gICAgYXJyYXkuZmlsdGVyKHYgPT4gdG9vbHMuY29tcGFyZSh2LmNvbnRyb2xCbG9jaywgaXRlbS5jb250cm9sQmxvY2spID09PSAwKVxuICAgICAgLmxlbmd0aCA9PT0gMFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapLeafScript.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapMerkleRoot.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapMerkleRoot.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_MERKLE_ROOT || keyVal.key.length !== 1) {\n    throw new Error(\n      'Decode Error: could not decode tapMerkleRoot with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error('Decode Error: tapMerkleRoot not a 32-byte hash');\n  }\n  return keyVal.value;\n}\nfunction encode(value) {\n  const key = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_MERKLE_ROOT]);\n  return { key, value };\n}\nconst expected = 'Uint8Array';\nfunction check(data) {\n  return data instanceof Uint8Array && data.length === 32;\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapMerkleRoot === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC90YXBNZXJrbGVSb290LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUQ7QUFDUDtBQUNuQztBQUNQLHdCQUF3QixzREFBVTtBQUNsQztBQUNBO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsK0JBQStCLHNEQUFVO0FBQ3pDLFdBQVc7QUFDWDtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvaW5wdXQvdGFwTWVya2xlUm9vdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBJbnB1dFR5cGVzLlRBUF9NRVJLTEVfUk9PVCB8fCBrZXlWYWwua2V5Lmxlbmd0aCAhPT0gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgdGFwTWVya2xlUm9vdCB3aXRoIGtleSAweCcgK1xuICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIGlmICghY2hlY2soa2V5VmFsLnZhbHVlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRGVjb2RlIEVycm9yOiB0YXBNZXJrbGVSb290IG5vdCBhIDMyLWJ5dGUgaGFzaCcpO1xuICB9XG4gIHJldHVybiBrZXlWYWwudmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHZhbHVlKSB7XG4gIGNvbnN0IGtleSA9IFVpbnQ4QXJyYXkuZnJvbShbSW5wdXRUeXBlcy5UQVBfTUVSS0xFX1JPT1RdKTtcbiAgcmV0dXJuIHsga2V5LCB2YWx1ZSB9O1xufVxuZXhwb3J0IGNvbnN0IGV4cGVjdGVkID0gJ1VpbnQ4QXJyYXknO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKGRhdGEpIHtcbiAgcmV0dXJuIGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIGRhdGEubGVuZ3RoID09PSAzMjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgcmV0dXJuICEhY3VycmVudERhdGEgJiYgISFuZXdEYXRhICYmIGN1cnJlbnREYXRhLnRhcE1lcmtsZVJvb3QgPT09IHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapMerkleRoot.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapScriptSig.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapScriptSig.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAddToArray: () => (/* binding */ canAddToArray),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_SCRIPT_SIG) {\n    throw new Error(\n      'Decode Error: could not decode tapScriptSig with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (keyVal.key.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid key 0x' + uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  if (keyVal.value.length !== 64 && keyVal.value.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid signature in key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  const pubkey = keyVal.key.slice(1, 33);\n  const leafHash = keyVal.key.slice(33);\n  return {\n    pubkey,\n    leafHash,\n    signature: keyVal.value,\n  };\n}\nfunction encode(tSig) {\n  const head = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.TAP_SCRIPT_SIG]);\n  return {\n    key: uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([head, tSig.pubkey, tSig.leafHash]),\n    value: tSig.signature,\n  };\n}\nconst expected =\n  '{ pubkey: Uint8Array; leafHash: Uint8Array; signature: Uint8Array; }';\nfunction check(data) {\n  return (\n    data.pubkey instanceof Uint8Array &&\n    data.leafHash instanceof Uint8Array &&\n    data.signature instanceof Uint8Array &&\n    data.pubkey.length === 32 &&\n    data.leafHash.length === 32 &&\n    (data.signature.length === 64 || data.signature.length === 65)\n  );\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(item.pubkey) + uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(item.leafHash);\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(\n      v =>\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(v.pubkey, item.pubkey) === 0 &&\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(v.leafHash, item.leafHash) === 0,\n    ).length === 0\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC90YXBTY3JpcHRTaWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRDtBQUNQO0FBQ25DO0FBQ1Asd0JBQXdCLHNEQUFVO0FBQ2xDO0FBQ0E7QUFDQSxRQUFRLG1EQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELG1EQUFXO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG1EQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQ0FBZ0Msc0RBQVU7QUFDMUM7QUFDQSxTQUFTLG9EQUFZO0FBQ3JCO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsS0FBSyxvQkFBb0Isc0JBQXNCLHdCQUF3QjtBQUNoRTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLG1EQUFXLGdCQUFnQixtREFBVztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxREFBYTtBQUNyQixRQUFRLHFEQUFhO0FBQ3JCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL2lucHV0L3RhcFNjcmlwdFNpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dFR5cGVzIH0gZnJvbSAnLi4vLi4vdHlwZUZpZWxkcy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoa2V5VmFsKSB7XG4gIGlmIChrZXlWYWwua2V5WzBdICE9PSBJbnB1dFR5cGVzLlRBUF9TQ1JJUFRfU0lHKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSB0YXBTY3JpcHRTaWcgd2l0aCBrZXkgMHgnICtcbiAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgKTtcbiAgfVxuICBpZiAoa2V5VmFsLmtleS5sZW5ndGggIT09IDY1KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogdGFwU2NyaXB0U2lnIGhhcyBpbnZhbGlkIGtleSAweCcgKyB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICApO1xuICB9XG4gIGlmIChrZXlWYWwudmFsdWUubGVuZ3RoICE9PSA2NCAmJiBrZXlWYWwudmFsdWUubGVuZ3RoICE9PSA2NSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdEZWNvZGUgRXJyb3I6IHRhcFNjcmlwdFNpZyBoYXMgaW52YWxpZCBzaWduYXR1cmUgaW4ga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgY29uc3QgcHVia2V5ID0ga2V5VmFsLmtleS5zbGljZSgxLCAzMyk7XG4gIGNvbnN0IGxlYWZIYXNoID0ga2V5VmFsLmtleS5zbGljZSgzMyk7XG4gIHJldHVybiB7XG4gICAgcHVia2V5LFxuICAgIGxlYWZIYXNoLFxuICAgIHNpZ25hdHVyZToga2V5VmFsLnZhbHVlLFxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZSh0U2lnKSB7XG4gIGNvbnN0IGhlYWQgPSBVaW50OEFycmF5LmZyb20oW0lucHV0VHlwZXMuVEFQX1NDUklQVF9TSUddKTtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IHRvb2xzLmNvbmNhdChbaGVhZCwgdFNpZy5wdWJrZXksIHRTaWcubGVhZkhhc2hdKSxcbiAgICB2YWx1ZTogdFNpZy5zaWduYXR1cmUsXG4gIH07XG59XG5leHBvcnQgY29uc3QgZXhwZWN0ZWQgPVxuICAneyBwdWJrZXk6IFVpbnQ4QXJyYXk7IGxlYWZIYXNoOiBVaW50OEFycmF5OyBzaWduYXR1cmU6IFVpbnQ4QXJyYXk7IH0nO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKGRhdGEpIHtcbiAgcmV0dXJuIChcbiAgICBkYXRhLnB1YmtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICBkYXRhLmxlYWZIYXNoIGluc3RhbmNlb2YgVWludDhBcnJheSAmJlxuICAgIGRhdGEuc2lnbmF0dXJlIGluc3RhbmNlb2YgVWludDhBcnJheSAmJlxuICAgIGRhdGEucHVia2V5Lmxlbmd0aCA9PT0gMzIgJiZcbiAgICBkYXRhLmxlYWZIYXNoLmxlbmd0aCA9PT0gMzIgJiZcbiAgICAoZGF0YS5zaWduYXR1cmUubGVuZ3RoID09PSA2NCB8fCBkYXRhLnNpZ25hdHVyZS5sZW5ndGggPT09IDY1KVxuICApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFkZFRvQXJyYXkoYXJyYXksIGl0ZW0sIGR1cGVTZXQpIHtcbiAgY29uc3QgZHVwZVN0cmluZyA9IHRvb2xzLnRvSGV4KGl0ZW0ucHVia2V5KSArIHRvb2xzLnRvSGV4KGl0ZW0ubGVhZkhhc2gpO1xuICBpZiAoZHVwZVNldC5oYXMoZHVwZVN0cmluZykpIHJldHVybiBmYWxzZTtcbiAgZHVwZVNldC5hZGQoZHVwZVN0cmluZyk7XG4gIHJldHVybiAoXG4gICAgYXJyYXkuZmlsdGVyKFxuICAgICAgdiA9PlxuICAgICAgICB0b29scy5jb21wYXJlKHYucHVia2V5LCBpdGVtLnB1YmtleSkgPT09IDAgJiZcbiAgICAgICAgdG9vbHMuY29tcGFyZSh2LmxlYWZIYXNoLCBpdGVtLmxlYWZIYXNoKSA9PT0gMCxcbiAgICApLmxlbmd0aCA9PT0gMFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/tapScriptSig.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/witnessUtxo.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/witnessUtxo.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode witnessUtxo with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(keyVal.key),\n    );\n  }\n  const value = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readInt64(keyVal.value, 0, 'LE');\n  let _offset = 8;\n  const { numberValue: scriptLen, bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__.decode(\n    keyVal.value,\n    _offset,\n  );\n  _offset += bytes;\n  const script = keyVal.value.slice(_offset);\n  if (script.length !== scriptLen) {\n    throw new Error('Decode Error: WITNESS_UTXO script is not proper length');\n  }\n  return {\n    script,\n    value,\n  };\n}\nfunction encode(data) {\n  const { script, value } = data;\n  const varuintlen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__.encodingLength(script.length);\n  const result = new Uint8Array(8 + varuintlen + script.length);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeInt64(result, 0, BigInt(value), 'LE');\n  varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__.encode(script.length, result, 8);\n  result.set(script, 8 + varuintlen);\n  return {\n    key: Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.InputTypes.WITNESS_UTXO]),\n    value: result,\n  };\n}\nconst expected = '{ script: Uint8Array; value: bigint; }';\nfunction check(data) {\n  return data.script instanceof Uint8Array && typeof data.value === 'bigint';\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.witnessUtxo === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9pbnB1dC93aXRuZXNzVXR4by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpRDtBQUNQO0FBQ0M7QUFDcEM7QUFDUCx3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBLGdCQUFnQix1REFBZTtBQUMvQjtBQUNBLFVBQVUsZ0NBQWdDLEVBQUUsbURBQWM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFVBQVUsZ0JBQWdCO0FBQzFCLHFCQUFxQiwyREFBc0I7QUFDM0M7QUFDQSxFQUFFLHdEQUFnQjtBQUNsQixFQUFFLG1EQUFjO0FBQ2hCO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ08sb0JBQW9CLG9CQUFvQixnQkFBZ0I7QUFDeEQ7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvaW5wdXQvd2l0bmVzc1V0eG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXRUeXBlcyB9IGZyb20gJy4uLy4uL3R5cGVGaWVsZHMuanMnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5pbXBvcnQgKiBhcyB2YXJ1aW50IGZyb20gJ3ZhcnVpbnQtYml0Y29pbic7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGtleVZhbCkge1xuICBpZiAoa2V5VmFsLmtleVswXSAhPT0gSW5wdXRUeXBlcy5XSVRORVNTX1VUWE8pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnRGVjb2RlIEVycm9yOiBjb3VsZCBub3QgZGVjb2RlIHdpdG5lc3NVdHhvIHdpdGgga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgY29uc3QgdmFsdWUgPSB0b29scy5yZWFkSW50NjQoa2V5VmFsLnZhbHVlLCAwLCAnTEUnKTtcbiAgbGV0IF9vZmZzZXQgPSA4O1xuICBjb25zdCB7IG51bWJlclZhbHVlOiBzY3JpcHRMZW4sIGJ5dGVzIH0gPSB2YXJ1aW50LmRlY29kZShcbiAgICBrZXlWYWwudmFsdWUsXG4gICAgX29mZnNldCxcbiAgKTtcbiAgX29mZnNldCArPSBieXRlcztcbiAgY29uc3Qgc2NyaXB0ID0ga2V5VmFsLnZhbHVlLnNsaWNlKF9vZmZzZXQpO1xuICBpZiAoc2NyaXB0Lmxlbmd0aCAhPT0gc2NyaXB0TGVuKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdEZWNvZGUgRXJyb3I6IFdJVE5FU1NfVVRYTyBzY3JpcHQgaXMgbm90IHByb3BlciBsZW5ndGgnKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHNjcmlwdCxcbiAgICB2YWx1ZSxcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICBjb25zdCB7IHNjcmlwdCwgdmFsdWUgfSA9IGRhdGE7XG4gIGNvbnN0IHZhcnVpbnRsZW4gPSB2YXJ1aW50LmVuY29kaW5nTGVuZ3RoKHNjcmlwdC5sZW5ndGgpO1xuICBjb25zdCByZXN1bHQgPSBuZXcgVWludDhBcnJheSg4ICsgdmFydWludGxlbiArIHNjcmlwdC5sZW5ndGgpO1xuICB0b29scy53cml0ZUludDY0KHJlc3VsdCwgMCwgQmlnSW50KHZhbHVlKSwgJ0xFJyk7XG4gIHZhcnVpbnQuZW5jb2RlKHNjcmlwdC5sZW5ndGgsIHJlc3VsdCwgOCk7XG4gIHJlc3VsdC5zZXQoc2NyaXB0LCA4ICsgdmFydWludGxlbik7XG4gIHJldHVybiB7XG4gICAga2V5OiBVaW50OEFycmF5LmZyb20oW0lucHV0VHlwZXMuV0lUTkVTU19VVFhPXSksXG4gICAgdmFsdWU6IHJlc3VsdCxcbiAgfTtcbn1cbmV4cG9ydCBjb25zdCBleHBlY3RlZCA9ICd7IHNjcmlwdDogVWludDhBcnJheTsgdmFsdWU6IGJpZ2ludDsgfSc7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2soZGF0YSkge1xuICByZXR1cm4gZGF0YS5zY3JpcHQgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIHR5cGVvZiBkYXRhLnZhbHVlID09PSAnYmlnaW50Jztcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgcmV0dXJuICEhY3VycmVudERhdGEgJiYgISFuZXdEYXRhICYmIGN1cnJlbnREYXRhLndpdG5lc3NVdHhvID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/input/witnessUtxo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/output/tapTree.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/output/tapTree.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canAdd: () => (/* binding */ canAdd),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   expected: () => (/* binding */ expected)\n/* harmony export */ });\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== _typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.TAP_TREE || keyVal.key.length !== 1) {\n    throw new Error(\n      'Decode Error: could not decode tapTree with key 0x' +\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.toHex(keyVal.key),\n    );\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const { numberValue: scriptLen, bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.decode(\n      keyVal.value,\n      _offset,\n    );\n    _offset += bytes;\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen),\n    });\n    _offset += scriptLen;\n  }\n  return { leaves: data };\n}\nfunction encode(tree) {\n  const key = Uint8Array.from([_typeFields_js__WEBPACK_IMPORTED_MODULE_0__.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(\n    ...tree.leaves.map(tapLeaf => [\n      Uint8Array.of(tapLeaf.depth, tapLeaf.leafVersion),\n      varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.encode(BigInt(tapLeaf.script.length)).buffer,\n      tapLeaf.script,\n    ]),\n  );\n  return {\n    key,\n    value: uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat(bufs),\n  };\n}\nconst expected =\n  '{ leaves: [{ depth: number; leafVersion: number, script: Uint8Array; }] }';\nfunction check(data) {\n  return (\n    Array.isArray(data.leaves) &&\n    data.leaves.every(\n      tapLeaf =>\n        tapLeaf.depth >= 0 &&\n        tapLeaf.depth <= 128 &&\n        (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion &&\n        tapLeaf.script instanceof Uint8Array,\n    )\n  );\n}\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9vdXRwdXQvdGFwVHJlZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFrRDtBQUNQO0FBQ0Q7QUFDbkM7QUFDUCx3QkFBd0IsdURBQVc7QUFDbkM7QUFDQTtBQUNBLFFBQVEsbURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQyxFQUFFLG1EQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNPO0FBQ1AsK0JBQStCLHVEQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLE1BQU0sbURBQWM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0RBQVk7QUFDdkI7QUFDQTtBQUNPO0FBQ1AsS0FBSyxXQUFXLGVBQWUsMENBQTBDLEdBQUc7QUFDckU7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvb3V0cHV0L3RhcFRyZWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3V0cHV0VHlwZXMgfSBmcm9tICcuLi8uLi90eXBlRmllbGRzLmpzJztcbmltcG9ydCAqIGFzIHZhcnVpbnQgZnJvbSAndmFydWludC1iaXRjb2luJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgaWYgKGtleVZhbC5rZXlbMF0gIT09IE91dHB1dFR5cGVzLlRBUF9UUkVFIHx8IGtleVZhbC5rZXkubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSB0YXBUcmVlIHdpdGgga2V5IDB4JyArXG4gICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICk7XG4gIH1cbiAgbGV0IF9vZmZzZXQgPSAwO1xuICBjb25zdCBkYXRhID0gW107XG4gIHdoaWxlIChfb2Zmc2V0IDwga2V5VmFsLnZhbHVlLmxlbmd0aCkge1xuICAgIGNvbnN0IGRlcHRoID0ga2V5VmFsLnZhbHVlW19vZmZzZXQrK107XG4gICAgY29uc3QgbGVhZlZlcnNpb24gPSBrZXlWYWwudmFsdWVbX29mZnNldCsrXTtcbiAgICBjb25zdCB7IG51bWJlclZhbHVlOiBzY3JpcHRMZW4sIGJ5dGVzIH0gPSB2YXJ1aW50LmRlY29kZShcbiAgICAgIGtleVZhbC52YWx1ZSxcbiAgICAgIF9vZmZzZXQsXG4gICAgKTtcbiAgICBfb2Zmc2V0ICs9IGJ5dGVzO1xuICAgIGRhdGEucHVzaCh7XG4gICAgICBkZXB0aCxcbiAgICAgIGxlYWZWZXJzaW9uLFxuICAgICAgc2NyaXB0OiBrZXlWYWwudmFsdWUuc2xpY2UoX29mZnNldCwgX29mZnNldCArIHNjcmlwdExlbiksXG4gICAgfSk7XG4gICAgX29mZnNldCArPSBzY3JpcHRMZW47XG4gIH1cbiAgcmV0dXJuIHsgbGVhdmVzOiBkYXRhIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHRyZWUpIHtcbiAgY29uc3Qga2V5ID0gVWludDhBcnJheS5mcm9tKFtPdXRwdXRUeXBlcy5UQVBfVFJFRV0pO1xuICBjb25zdCBidWZzID0gW10uY29uY2F0KFxuICAgIC4uLnRyZWUubGVhdmVzLm1hcCh0YXBMZWFmID0+IFtcbiAgICAgIFVpbnQ4QXJyYXkub2YodGFwTGVhZi5kZXB0aCwgdGFwTGVhZi5sZWFmVmVyc2lvbiksXG4gICAgICB2YXJ1aW50LmVuY29kZShCaWdJbnQodGFwTGVhZi5zY3JpcHQubGVuZ3RoKSkuYnVmZmVyLFxuICAgICAgdGFwTGVhZi5zY3JpcHQsXG4gICAgXSksXG4gICk7XG4gIHJldHVybiB7XG4gICAga2V5LFxuICAgIHZhbHVlOiB0b29scy5jb25jYXQoYnVmcyksXG4gIH07XG59XG5leHBvcnQgY29uc3QgZXhwZWN0ZWQgPVxuICAneyBsZWF2ZXM6IFt7IGRlcHRoOiBudW1iZXI7IGxlYWZWZXJzaW9uOiBudW1iZXIsIHNjcmlwdDogVWludDhBcnJheTsgfV0gfSc7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2soZGF0YSkge1xuICByZXR1cm4gKFxuICAgIEFycmF5LmlzQXJyYXkoZGF0YS5sZWF2ZXMpICYmXG4gICAgZGF0YS5sZWF2ZXMuZXZlcnkoXG4gICAgICB0YXBMZWFmID0+XG4gICAgICAgIHRhcExlYWYuZGVwdGggPj0gMCAmJlxuICAgICAgICB0YXBMZWFmLmRlcHRoIDw9IDEyOCAmJlxuICAgICAgICAodGFwTGVhZi5sZWFmVmVyc2lvbiAmIDB4ZmUpID09PSB0YXBMZWFmLmxlYWZWZXJzaW9uICYmXG4gICAgICAgIHRhcExlYWYuc2NyaXB0IGluc3RhbmNlb2YgVWludDhBcnJheSxcbiAgICApXG4gICk7XG59XG5leHBvcnQgZnVuY3Rpb24gY2FuQWRkKGN1cnJlbnREYXRhLCBuZXdEYXRhKSB7XG4gIHJldHVybiAhIWN1cnJlbnREYXRhICYmICEhbmV3RGF0YSAmJiBjdXJyZW50RGF0YS50YXBUcmVlID09PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/output/tapTree.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/bip32Derivation.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/bip32Derivation.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeConverter: () => (/* binding */ makeConverter)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nconst range = n => [...Array(n).keys()];\nconst isValidDERKey = pubkey =>\n  (pubkey.length === 33 && [2, 3].includes(pubkey[0])) ||\n  (pubkey.length === 65 && 4 === pubkey[0]);\nfunction makeConverter(TYPE_BYTE, isValidPubkey = isValidDERKey) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode bip32Derivation with key 0x' +\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n      );\n    }\n    const pubkey = keyVal.key.slice(1);\n    if (!isValidPubkey(pubkey)) {\n      throw new Error(\n        'Decode Error: bip32Derivation has invalid pubkey in key 0x' +\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n      );\n    }\n    if ((keyVal.value.length / 4) % 1 !== 0) {\n      throw new Error(\n        'Decode Error: Input BIP32_DERIVATION value length should be multiple of 4',\n      );\n    }\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm',\n    };\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt32(keyVal.value, i * 4 + 4, 'LE');\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  function encode(data) {\n    const head = Uint8Array.from([TYPE_BYTE]);\n    const key = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = new Uint8Array(splitPath.length * 4);\n    value.set(data.masterFingerprint, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt32(value, offset, num, 'LE');\n      offset += 4;\n    });\n    return {\n      key,\n      value,\n    };\n  }\n  const expected =\n    '{ masterFingerprint: Uint8Array; pubkey: Uint8Array; path: string; }';\n  function check(data) {\n    return (\n      data.pubkey instanceof Uint8Array &&\n      data.masterFingerprint instanceof Uint8Array &&\n      typeof data.path === 'string' &&\n      isValidPubkey(data.pubkey) &&\n      data.masterFingerprint.length === 4\n    );\n  }\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(item.pubkey);\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return (\n      array.filter(v => uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(v.pubkey, item.pubkey) === 0).length === 0\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvYmlwMzJEZXJpdmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbURBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtREFBVztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3REFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvREFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx5REFBaUI7QUFDdkI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTywrQkFBK0Isb0JBQW9CLGVBQWU7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbURBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFEQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvc2hhcmVkL2JpcDMyRGVyaXZhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmNvbnN0IHJhbmdlID0gbiA9PiBbLi4uQXJyYXkobikua2V5cygpXTtcbmNvbnN0IGlzVmFsaWRERVJLZXkgPSBwdWJrZXkgPT5cbiAgKHB1YmtleS5sZW5ndGggPT09IDMzICYmIFsyLCAzXS5pbmNsdWRlcyhwdWJrZXlbMF0pKSB8fFxuICAocHVia2V5Lmxlbmd0aCA9PT0gNjUgJiYgNCA9PT0gcHVia2V5WzBdKTtcbmV4cG9ydCBmdW5jdGlvbiBtYWtlQ29udmVydGVyKFRZUEVfQllURSwgaXNWYWxpZFB1YmtleSA9IGlzVmFsaWRERVJLZXkpIHtcbiAgZnVuY3Rpb24gZGVjb2RlKGtleVZhbCkge1xuICAgIGlmIChrZXlWYWwua2V5WzBdICE9PSBUWVBFX0JZVEUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSBiaXAzMkRlcml2YXRpb24gd2l0aCBrZXkgMHgnICtcbiAgICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IHB1YmtleSA9IGtleVZhbC5rZXkuc2xpY2UoMSk7XG4gICAgaWYgKCFpc1ZhbGlkUHVia2V5KHB1YmtleSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0RlY29kZSBFcnJvcjogYmlwMzJEZXJpdmF0aW9uIGhhcyBpbnZhbGlkIHB1YmtleSBpbiBrZXkgMHgnICtcbiAgICAgICAgICB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICgoa2V5VmFsLnZhbHVlLmxlbmd0aCAvIDQpICUgMSAhPT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnRGVjb2RlIEVycm9yOiBJbnB1dCBCSVAzMl9ERVJJVkFUSU9OIHZhbHVlIGxlbmd0aCBzaG91bGQgYmUgbXVsdGlwbGUgb2YgNCcsXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgbWFzdGVyRmluZ2VycHJpbnQ6IGtleVZhbC52YWx1ZS5zbGljZSgwLCA0KSxcbiAgICAgIHB1YmtleSxcbiAgICAgIHBhdGg6ICdtJyxcbiAgICB9O1xuICAgIGZvciAoY29uc3QgaSBvZiByYW5nZShrZXlWYWwudmFsdWUubGVuZ3RoIC8gNCAtIDEpKSB7XG4gICAgICBjb25zdCB2YWwgPSB0b29scy5yZWFkVUludDMyKGtleVZhbC52YWx1ZSwgaSAqIDQgKyA0LCAnTEUnKTtcbiAgICAgIGNvbnN0IGlzSGFyZCA9ICEhKHZhbCAmIDB4ODAwMDAwMDApO1xuICAgICAgY29uc3QgaWR4ID0gdmFsICYgMHg3ZmZmZmZmZjtcbiAgICAgIGRhdGEucGF0aCArPSAnLycgKyBpZHgudG9TdHJpbmcoMTApICsgKGlzSGFyZCA/IFwiJ1wiIDogJycpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuICBmdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICAgIGNvbnN0IGhlYWQgPSBVaW50OEFycmF5LmZyb20oW1RZUEVfQllURV0pO1xuICAgIGNvbnN0IGtleSA9IHRvb2xzLmNvbmNhdChbaGVhZCwgZGF0YS5wdWJrZXldKTtcbiAgICBjb25zdCBzcGxpdFBhdGggPSBkYXRhLnBhdGguc3BsaXQoJy8nKTtcbiAgICBjb25zdCB2YWx1ZSA9IG5ldyBVaW50OEFycmF5KHNwbGl0UGF0aC5sZW5ndGggKiA0KTtcbiAgICB2YWx1ZS5zZXQoZGF0YS5tYXN0ZXJGaW5nZXJwcmludCwgMCk7XG4gICAgbGV0IG9mZnNldCA9IDQ7XG4gICAgc3BsaXRQYXRoLnNsaWNlKDEpLmZvckVhY2gobGV2ZWwgPT4ge1xuICAgICAgY29uc3QgaXNIYXJkID0gbGV2ZWwuc2xpY2UoLTEpID09PSBcIidcIjtcbiAgICAgIGxldCBudW0gPSAweDdmZmZmZmZmICYgcGFyc2VJbnQoaXNIYXJkID8gbGV2ZWwuc2xpY2UoMCwgLTEpIDogbGV2ZWwsIDEwKTtcbiAgICAgIGlmIChpc0hhcmQpIG51bSArPSAweDgwMDAwMDAwO1xuICAgICAgdG9vbHMud3JpdGVVSW50MzIodmFsdWUsIG9mZnNldCwgbnVtLCAnTEUnKTtcbiAgICAgIG9mZnNldCArPSA0O1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICBrZXksXG4gICAgICB2YWx1ZSxcbiAgICB9O1xuICB9XG4gIGNvbnN0IGV4cGVjdGVkID1cbiAgICAneyBtYXN0ZXJGaW5nZXJwcmludDogVWludDhBcnJheTsgcHVia2V5OiBVaW50OEFycmF5OyBwYXRoOiBzdHJpbmc7IH0nO1xuICBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGRhdGEucHVia2V5IGluc3RhbmNlb2YgVWludDhBcnJheSAmJlxuICAgICAgZGF0YS5tYXN0ZXJGaW5nZXJwcmludCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgIHR5cGVvZiBkYXRhLnBhdGggPT09ICdzdHJpbmcnICYmXG4gICAgICBpc1ZhbGlkUHVia2V5KGRhdGEucHVia2V5KSAmJlxuICAgICAgZGF0YS5tYXN0ZXJGaW5nZXJwcmludC5sZW5ndGggPT09IDRcbiAgICApO1xuICB9XG4gIGZ1bmN0aW9uIGNhbkFkZFRvQXJyYXkoYXJyYXksIGl0ZW0sIGR1cGVTZXQpIHtcbiAgICBjb25zdCBkdXBlU3RyaW5nID0gdG9vbHMudG9IZXgoaXRlbS5wdWJrZXkpO1xuICAgIGlmIChkdXBlU2V0LmhhcyhkdXBlU3RyaW5nKSkgcmV0dXJuIGZhbHNlO1xuICAgIGR1cGVTZXQuYWRkKGR1cGVTdHJpbmcpO1xuICAgIHJldHVybiAoXG4gICAgICBhcnJheS5maWx0ZXIodiA9PiB0b29scy5jb21wYXJlKHYucHVia2V5LCBpdGVtLnB1YmtleSkgPT09IDApLmxlbmd0aCA9PT0gMFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkZWNvZGUsXG4gICAgZW5jb2RlLFxuICAgIGNoZWNrLFxuICAgIGV4cGVjdGVkLFxuICAgIGNhbkFkZFRvQXJyYXksXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/bip32Derivation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/checkPubkey.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/checkPubkey.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeChecker: () => (/* binding */ makeChecker)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nfunction makeChecker(pubkeyTypes) {\n  return checkPubkey;\n  function checkPubkey(keyVal) {\n    let pubkey;\n    if (pubkeyTypes.includes(keyVal.key[0])) {\n      pubkey = keyVal.key.slice(1);\n      if (\n        !(pubkey.length === 33 || pubkey.length === 65) ||\n        ![2, 3, 4].includes(pubkey[0])\n      ) {\n        throw new Error(\n          'Format Error: invalid pubkey in key 0x' + uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n        );\n      }\n    }\n    return pubkey;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvY2hlY2tQdWJrZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxtREFBVztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvY2hlY2tQdWJrZXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5leHBvcnQgZnVuY3Rpb24gbWFrZUNoZWNrZXIocHVia2V5VHlwZXMpIHtcbiAgcmV0dXJuIGNoZWNrUHVia2V5O1xuICBmdW5jdGlvbiBjaGVja1B1YmtleShrZXlWYWwpIHtcbiAgICBsZXQgcHVia2V5O1xuICAgIGlmIChwdWJrZXlUeXBlcy5pbmNsdWRlcyhrZXlWYWwua2V5WzBdKSkge1xuICAgICAgcHVia2V5ID0ga2V5VmFsLmtleS5zbGljZSgxKTtcbiAgICAgIGlmIChcbiAgICAgICAgIShwdWJrZXkubGVuZ3RoID09PSAzMyB8fCBwdWJrZXkubGVuZ3RoID09PSA2NSkgfHxcbiAgICAgICAgIVsyLCAzLCA0XS5pbmNsdWRlcyhwdWJrZXlbMF0pXG4gICAgICApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdGb3JtYXQgRXJyb3I6IGludmFsaWQgcHVia2V5IGluIGtleSAweCcgKyB0b29scy50b0hleChrZXlWYWwua2V5KSxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHB1YmtleTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/checkPubkey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/redeemScript.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/redeemScript.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeConverter: () => (/* binding */ makeConverter)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode redeemScript with key 0x' +\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Uint8Array.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Uint8Array';\n  function check(data) {\n    return data instanceof Uint8Array;\n  }\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.redeemScript === undefined;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvcmVkZWVtU2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQ25DO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG1EQUFXO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvcmVkZWVtU2NyaXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDb252ZXJ0ZXIoVFlQRV9CWVRFKSB7XG4gIGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgICBpZiAoa2V5VmFsLmtleVswXSAhPT0gVFlQRV9CWVRFKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgcmVkZWVtU2NyaXB0IHdpdGgga2V5IDB4JyArXG4gICAgICAgICAgdG9vbHMudG9IZXgoa2V5VmFsLmtleSksXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4ga2V5VmFsLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gICAgY29uc3Qga2V5ID0gVWludDhBcnJheS5mcm9tKFtUWVBFX0JZVEVdKTtcbiAgICByZXR1cm4ge1xuICAgICAga2V5LFxuICAgICAgdmFsdWU6IGRhdGEsXG4gICAgfTtcbiAgfVxuICBjb25zdCBleHBlY3RlZCA9ICdVaW50OEFycmF5JztcbiAgZnVuY3Rpb24gY2hlY2soZGF0YSkge1xuICAgIHJldHVybiBkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheTtcbiAgfVxuICBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgICByZXR1cm4gISFjdXJyZW50RGF0YSAmJiAhIW5ld0RhdGEgJiYgY3VycmVudERhdGEucmVkZWVtU2NyaXB0ID09PSB1bmRlZmluZWQ7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkZWNvZGUsXG4gICAgZW5jb2RlLFxuICAgIGNoZWNrLFxuICAgIGV4cGVjdGVkLFxuICAgIGNhbkFkZCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/redeemScript.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapBip32Derivation.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapBip32Derivation.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeConverter: () => (/* binding */ makeConverter)\n/* harmony export */ });\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var _bip32Derivation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bip32Derivation.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/bip32Derivation.js\");\n\n\n\nconst isValidBIP340Key = pubkey => pubkey.length === 32;\nfunction makeConverter(TYPE_BYTE) {\n  const parent = _bip32Derivation_js__WEBPACK_IMPORTED_MODULE_2__.makeConverter(TYPE_BYTE, isValidBIP340Key);\n  function decode(keyVal) {\n    const { numberValue: nHashes, bytes: nHashesLen } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.decode(\n      keyVal.value,\n    );\n    const base = parent.decode({\n      key: keyVal.key,\n      value: keyVal.value.slice(nHashesLen + Number(nHashes) * 32),\n    });\n    const leafHashes = new Array(Number(nHashes));\n    for (let i = 0, _offset = nHashesLen; i < nHashes; i++, _offset += 32) {\n      leafHashes[i] = keyVal.value.slice(_offset, _offset + 32);\n    }\n    return { ...base, leafHashes };\n  }\n  function encode(data) {\n    const base = parent.encode(data);\n    const nHashesLen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encodingLength(data.leafHashes.length);\n    const nHashesBuf = new Uint8Array(nHashesLen);\n    varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encode(data.leafHashes.length, nHashesBuf);\n    const value = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat([nHashesBuf, ...data.leafHashes, base.value]);\n    return { ...base, value };\n  }\n  const expected =\n    '{ ' +\n    'masterFingerprint: Uint8Array; ' +\n    'pubkey: Uint8Array; ' +\n    'path: string; ' +\n    'leafHashes: Uint8Array[]; ' +\n    '}';\n  function check(data) {\n    return (\n      Array.isArray(data.leafHashes) &&\n      data.leafHashes.every(\n        leafHash => leafHash instanceof Uint8Array && leafHash.length === 32,\n      ) &&\n      parent.check(data)\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray: parent.canAddToArray,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvdGFwQmlwMzJEZXJpdmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDRDtBQUNjO0FBQ3hEO0FBQ087QUFDUCxpQkFBaUIsOERBQTZCO0FBQzlDO0FBQ0EsWUFBWSwwQ0FBMEMsRUFBRSxtREFBYztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMENBQTBDLGFBQWE7QUFDdkQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQXNCO0FBQzdDO0FBQ0EsSUFBSSxtREFBYztBQUNsQixrQkFBa0Isb0RBQVk7QUFDOUIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxPQUFPO0FBQ1Asb0NBQW9DO0FBQ3BDLHlCQUF5QjtBQUN6QixtQkFBbUI7QUFDbkIsK0JBQStCO0FBQy9CLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9jb252ZXJ0ZXIvc2hhcmVkL3RhcEJpcDMyRGVyaXZhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB2YXJ1aW50IGZyb20gJ3ZhcnVpbnQtYml0Y29pbic7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmltcG9ydCAqIGFzIGJpcDMyRGVyaXZhdGlvbiBmcm9tICcuL2JpcDMyRGVyaXZhdGlvbi5qcyc7XG5jb25zdCBpc1ZhbGlkQklQMzQwS2V5ID0gcHVia2V5ID0+IHB1YmtleS5sZW5ndGggPT09IDMyO1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDb252ZXJ0ZXIoVFlQRV9CWVRFKSB7XG4gIGNvbnN0IHBhcmVudCA9IGJpcDMyRGVyaXZhdGlvbi5tYWtlQ29udmVydGVyKFRZUEVfQllURSwgaXNWYWxpZEJJUDM0MEtleSk7XG4gIGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgICBjb25zdCB7IG51bWJlclZhbHVlOiBuSGFzaGVzLCBieXRlczogbkhhc2hlc0xlbiB9ID0gdmFydWludC5kZWNvZGUoXG4gICAgICBrZXlWYWwudmFsdWUsXG4gICAgKTtcbiAgICBjb25zdCBiYXNlID0gcGFyZW50LmRlY29kZSh7XG4gICAgICBrZXk6IGtleVZhbC5rZXksXG4gICAgICB2YWx1ZToga2V5VmFsLnZhbHVlLnNsaWNlKG5IYXNoZXNMZW4gKyBOdW1iZXIobkhhc2hlcykgKiAzMiksXG4gICAgfSk7XG4gICAgY29uc3QgbGVhZkhhc2hlcyA9IG5ldyBBcnJheShOdW1iZXIobkhhc2hlcykpO1xuICAgIGZvciAobGV0IGkgPSAwLCBfb2Zmc2V0ID0gbkhhc2hlc0xlbjsgaSA8IG5IYXNoZXM7IGkrKywgX29mZnNldCArPSAzMikge1xuICAgICAgbGVhZkhhc2hlc1tpXSA9IGtleVZhbC52YWx1ZS5zbGljZShfb2Zmc2V0LCBfb2Zmc2V0ICsgMzIpO1xuICAgIH1cbiAgICByZXR1cm4geyAuLi5iYXNlLCBsZWFmSGFzaGVzIH07XG4gIH1cbiAgZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgICBjb25zdCBiYXNlID0gcGFyZW50LmVuY29kZShkYXRhKTtcbiAgICBjb25zdCBuSGFzaGVzTGVuID0gdmFydWludC5lbmNvZGluZ0xlbmd0aChkYXRhLmxlYWZIYXNoZXMubGVuZ3RoKTtcbiAgICBjb25zdCBuSGFzaGVzQnVmID0gbmV3IFVpbnQ4QXJyYXkobkhhc2hlc0xlbik7XG4gICAgdmFydWludC5lbmNvZGUoZGF0YS5sZWFmSGFzaGVzLmxlbmd0aCwgbkhhc2hlc0J1Zik7XG4gICAgY29uc3QgdmFsdWUgPSB0b29scy5jb25jYXQoW25IYXNoZXNCdWYsIC4uLmRhdGEubGVhZkhhc2hlcywgYmFzZS52YWx1ZV0pO1xuICAgIHJldHVybiB7IC4uLmJhc2UsIHZhbHVlIH07XG4gIH1cbiAgY29uc3QgZXhwZWN0ZWQgPVxuICAgICd7ICcgK1xuICAgICdtYXN0ZXJGaW5nZXJwcmludDogVWludDhBcnJheTsgJyArXG4gICAgJ3B1YmtleTogVWludDhBcnJheTsgJyArXG4gICAgJ3BhdGg6IHN0cmluZzsgJyArXG4gICAgJ2xlYWZIYXNoZXM6IFVpbnQ4QXJyYXlbXTsgJyArXG4gICAgJ30nO1xuICBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIEFycmF5LmlzQXJyYXkoZGF0YS5sZWFmSGFzaGVzKSAmJlxuICAgICAgZGF0YS5sZWFmSGFzaGVzLmV2ZXJ5KFxuICAgICAgICBsZWFmSGFzaCA9PiBsZWFmSGFzaCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiYgbGVhZkhhc2gubGVuZ3RoID09PSAzMixcbiAgICAgICkgJiZcbiAgICAgIHBhcmVudC5jaGVjayhkYXRhKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkZWNvZGUsXG4gICAgZW5jb2RlLFxuICAgIGNoZWNrLFxuICAgIGV4cGVjdGVkLFxuICAgIGNhbkFkZFRvQXJyYXk6IHBhcmVudC5jYW5BZGRUb0FycmF5LFxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapBip32Derivation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapInternalKey.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapInternalKey.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeConverter: () => (/* binding */ makeConverter)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Uint8Array.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Uint8Array';\n  function check(data) {\n    return data instanceof Uint8Array && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvdGFwSW50ZXJuYWxLZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbURBQVc7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvdGFwSW50ZXJuYWxLZXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5leHBvcnQgZnVuY3Rpb24gbWFrZUNvbnZlcnRlcihUWVBFX0JZVEUpIHtcbiAgZnVuY3Rpb24gZGVjb2RlKGtleVZhbCkge1xuICAgIGlmIChrZXlWYWwua2V5WzBdICE9PSBUWVBFX0JZVEUgfHwga2V5VmFsLmtleS5sZW5ndGggIT09IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0RlY29kZSBFcnJvcjogY291bGQgbm90IGRlY29kZSB0YXBJbnRlcm5hbEtleSB3aXRoIGtleSAweCcgK1xuICAgICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKGtleVZhbC52YWx1ZS5sZW5ndGggIT09IDMyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdEZWNvZGUgRXJyb3I6IHRhcEludGVybmFsS2V5IG5vdCBhIDMyLWJ5dGUgeC1vbmx5IHB1YmtleScsXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4ga2V5VmFsLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGVuY29kZSh2YWx1ZSkge1xuICAgIGNvbnN0IGtleSA9IFVpbnQ4QXJyYXkuZnJvbShbVFlQRV9CWVRFXSk7XG4gICAgcmV0dXJuIHsga2V5LCB2YWx1ZSB9O1xuICB9XG4gIGNvbnN0IGV4cGVjdGVkID0gJ1VpbnQ4QXJyYXknO1xuICBmdW5jdGlvbiBjaGVjayhkYXRhKSB7XG4gICAgcmV0dXJuIGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIGRhdGEubGVuZ3RoID09PSAzMjtcbiAgfVxuICBmdW5jdGlvbiBjYW5BZGQoY3VycmVudERhdGEsIG5ld0RhdGEpIHtcbiAgICByZXR1cm4gKFxuICAgICAgISFjdXJyZW50RGF0YSAmJiAhIW5ld0RhdGEgJiYgY3VycmVudERhdGEudGFwSW50ZXJuYWxLZXkgPT09IHVuZGVmaW5lZFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkZWNvZGUsXG4gICAgZW5jb2RlLFxuICAgIGNoZWNrLFxuICAgIGV4cGVjdGVkLFxuICAgIGNhbkFkZCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/tapInternalKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/witnessScript.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/witnessScript.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeConverter: () => (/* binding */ makeConverter)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode witnessScript with key 0x' +\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.toHex(keyVal.key),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Uint8Array.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Uint8Array';\n  function check(data) {\n    return data instanceof Uint8Array;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.witnessScript === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci9zaGFyZWQvd2l0bmVzc1NjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUNuQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtREFBVztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvY29udmVydGVyL3NoYXJlZC93aXRuZXNzU2NyaXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDb252ZXJ0ZXIoVFlQRV9CWVRFKSB7XG4gIGZ1bmN0aW9uIGRlY29kZShrZXlWYWwpIHtcbiAgICBpZiAoa2V5VmFsLmtleVswXSAhPT0gVFlQRV9CWVRFKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdEZWNvZGUgRXJyb3I6IGNvdWxkIG5vdCBkZWNvZGUgd2l0bmVzc1NjcmlwdCB3aXRoIGtleSAweCcgK1xuICAgICAgICAgIHRvb2xzLnRvSGV4KGtleVZhbC5rZXkpLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleVZhbC52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBlbmNvZGUoZGF0YSkge1xuICAgIGNvbnN0IGtleSA9IFVpbnQ4QXJyYXkuZnJvbShbVFlQRV9CWVRFXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGtleSxcbiAgICAgIHZhbHVlOiBkYXRhLFxuICAgIH07XG4gIH1cbiAgY29uc3QgZXhwZWN0ZWQgPSAnVWludDhBcnJheSc7XG4gIGZ1bmN0aW9uIGNoZWNrKGRhdGEpIHtcbiAgICByZXR1cm4gZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk7XG4gIH1cbiAgZnVuY3Rpb24gY2FuQWRkKGN1cnJlbnREYXRhLCBuZXdEYXRhKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICEhY3VycmVudERhdGEgJiYgISFuZXdEYXRhICYmIGN1cnJlbnREYXRhLndpdG5lc3NTY3JpcHQgPT09IHVuZGVmaW5lZFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBkZWNvZGUsXG4gICAgZW5jb2RlLFxuICAgIGNoZWNrLFxuICAgIGV4cGVjdGVkLFxuICAgIGNhbkFkZCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/shared/witnessScript.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/tools.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/tools.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyValToBuffer: () => (/* binding */ keyValToBuffer),\n/* harmony export */   keyValsToBuffer: () => (/* binding */ keyValsToBuffer),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   reverseBuffer: () => (/* binding */ reverseBuffer)\n/* harmony export */ });\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nconst range = n => [...Array(n).keys()];\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nfunction keyValsToBuffer(keyVals) {\n  const buffers = keyVals.map(keyValToBuffer);\n  buffers.push(Uint8Array.from([0]));\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.concat(buffers);\n}\nfunction keyValToBuffer(keyVal) {\n  const keyLen = keyVal.key.length;\n  const valLen = keyVal.value.length;\n  const keyVarIntLen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encodingLength(keyLen);\n  const valVarIntLen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encodingLength(valLen);\n  const buffer = new Uint8Array(keyVarIntLen + keyLen + valVarIntLen + valLen);\n  varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encode(keyLen, buffer, 0);\n  buffer.set(keyVal.key, keyVarIntLen);\n  varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encode(valLen, buffer, keyVarIntLen + keyLen);\n  buffer.set(keyVal.value, keyVarIntLen + keyLen + valVarIntLen);\n  return buffer;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci90b29scy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkM7QUFDRDtBQUNuQztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVCQUF1QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFNBQVMsb0RBQVk7QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQXNCO0FBQzdDLHVCQUF1QiwyREFBc0I7QUFDN0M7QUFDQSxFQUFFLG1EQUFjO0FBQ2hCO0FBQ0EsRUFBRSxtREFBYztBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL2NvbnZlcnRlci90b29scy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB2YXJ1aW50IGZyb20gJ3ZhcnVpbnQtYml0Y29pbic7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBjb25zdCByYW5nZSA9IG4gPT4gWy4uLkFycmF5KG4pLmtleXMoKV07XG5leHBvcnQgZnVuY3Rpb24gcmV2ZXJzZUJ1ZmZlcihidWZmZXIpIHtcbiAgaWYgKGJ1ZmZlci5sZW5ndGggPCAxKSByZXR1cm4gYnVmZmVyO1xuICBsZXQgaiA9IGJ1ZmZlci5sZW5ndGggLSAxO1xuICBsZXQgdG1wID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoIC8gMjsgaSsrKSB7XG4gICAgdG1wID0gYnVmZmVyW2ldO1xuICAgIGJ1ZmZlcltpXSA9IGJ1ZmZlcltqXTtcbiAgICBidWZmZXJbal0gPSB0bXA7XG4gICAgai0tO1xuICB9XG4gIHJldHVybiBidWZmZXI7XG59XG5leHBvcnQgZnVuY3Rpb24ga2V5VmFsc1RvQnVmZmVyKGtleVZhbHMpIHtcbiAgY29uc3QgYnVmZmVycyA9IGtleVZhbHMubWFwKGtleVZhbFRvQnVmZmVyKTtcbiAgYnVmZmVycy5wdXNoKFVpbnQ4QXJyYXkuZnJvbShbMF0pKTtcbiAgcmV0dXJuIHRvb2xzLmNvbmNhdChidWZmZXJzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBrZXlWYWxUb0J1ZmZlcihrZXlWYWwpIHtcbiAgY29uc3Qga2V5TGVuID0ga2V5VmFsLmtleS5sZW5ndGg7XG4gIGNvbnN0IHZhbExlbiA9IGtleVZhbC52YWx1ZS5sZW5ndGg7XG4gIGNvbnN0IGtleVZhckludExlbiA9IHZhcnVpbnQuZW5jb2RpbmdMZW5ndGgoa2V5TGVuKTtcbiAgY29uc3QgdmFsVmFySW50TGVuID0gdmFydWludC5lbmNvZGluZ0xlbmd0aCh2YWxMZW4pO1xuICBjb25zdCBidWZmZXIgPSBuZXcgVWludDhBcnJheShrZXlWYXJJbnRMZW4gKyBrZXlMZW4gKyB2YWxWYXJJbnRMZW4gKyB2YWxMZW4pO1xuICB2YXJ1aW50LmVuY29kZShrZXlMZW4sIGJ1ZmZlciwgMCk7XG4gIGJ1ZmZlci5zZXQoa2V5VmFsLmtleSwga2V5VmFySW50TGVuKTtcbiAgdmFydWludC5lbmNvZGUodmFsTGVuLCBidWZmZXIsIGtleVZhckludExlbiArIGtleUxlbik7XG4gIGJ1ZmZlci5zZXQoa2V5VmFsLnZhbHVlLCBrZXlWYXJJbnRMZW4gKyBrZXlMZW4gKyB2YWxWYXJJbnRMZW4pO1xuICByZXR1cm4gYnVmZmVyO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/tools.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/fromBuffer.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/fromBuffer.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkKeyBuffer: () => (/* binding */ checkKeyBuffer),\n/* harmony export */   psbtFromBuffer: () => (/* binding */ psbtFromBuffer),\n/* harmony export */   psbtFromKeyVals: () => (/* binding */ psbtFromKeyVals)\n/* harmony export */ });\n/* harmony import */ var _converter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../converter/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js\");\n/* harmony import */ var _converter_tools_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../converter/tools.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/tools.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n\n\n\n\n\nfunction psbtFromBuffer(buffer, txGetter) {\n  let offset = 0;\n  function varSlice() {\n    const { numberValue: keyLen, bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_2__.decode(buffer, offset);\n    offset += bytes;\n    const key = buffer.slice(offset, offset + Number(keyLen));\n    offset += Number(keyLen);\n    return key;\n  }\n  function readUInt32BE() {\n    const num = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.readUInt32(buffer, offset, 'BE');\n    offset += 4;\n    return num;\n  }\n  function readUInt8() {\n    const num = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.readUInt8(buffer, offset);\n    offset += 1;\n    return num;\n  }\n  function getKeyValue() {\n    const key = varSlice();\n    const value = varSlice();\n    return {\n      key,\n      value,\n    };\n  }\n  function checkEndOfKeyValPairs() {\n    if (offset >= buffer.length) {\n      throw new Error('Format Error: Unexpected End of PSBT');\n    }\n    const isEnd = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.readUInt8(buffer, offset) === 0;\n    if (isEnd) {\n      offset++;\n    }\n    return isEnd;\n  }\n  if (readUInt32BE() !== 0x70736274) {\n    throw new Error('Format Error: Invalid Magic Number');\n  }\n  if (readUInt8() !== 0xff) {\n    throw new Error(\n      'Format Error: Magic Number must be followed by 0xff separator',\n    );\n  }\n  const globalMapKeyVals = [];\n  const globalKeyIndex = {};\n  while (!checkEndOfKeyValPairs()) {\n    const keyVal = getKeyValue();\n    const hexKey = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.toHex(keyVal.key);\n    if (globalKeyIndex[hexKey]) {\n      throw new Error(\n        'Format Error: Keys must be unique for global keymap: key ' + hexKey,\n      );\n    }\n    globalKeyIndex[hexKey] = 1;\n    globalMapKeyVals.push(keyVal);\n  }\n  const unsignedTxMaps = globalMapKeyVals.filter(\n    keyVal => keyVal.key[0] === _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.GlobalTypes.UNSIGNED_TX,\n  );\n  if (unsignedTxMaps.length !== 1) {\n    throw new Error('Format Error: Only one UNSIGNED_TX allowed');\n  }\n  const unsignedTx = txGetter(unsignedTxMaps[0].value);\n  // Get input and output counts to loop the respective fields\n  const { inputCount, outputCount } = unsignedTx.getInputOutputCounts();\n  const inputKeyVals = [];\n  const outputKeyVals = [];\n  // Get input fields\n  for (const index of (0,_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.range)(inputCount)) {\n    const inputKeyIndex = {};\n    const input = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.toHex(keyVal.key);\n      if (inputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each input: ' +\n            'input index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      inputKeyIndex[hexKey] = 1;\n      input.push(keyVal);\n    }\n    inputKeyVals.push(input);\n  }\n  for (const index of (0,_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.range)(outputCount)) {\n    const outputKeyIndex = {};\n    const output = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.toHex(keyVal.key);\n      if (outputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each output: ' +\n            'output index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      outputKeyIndex[hexKey] = 1;\n      output.push(keyVal);\n    }\n    outputKeyVals.push(output);\n  }\n  return psbtFromKeyVals(unsignedTx, {\n    globalMapKeyVals,\n    inputKeyVals,\n    outputKeyVals,\n  });\n}\nfunction checkKeyBuffer(type, keyBuf, keyNum) {\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.compare(keyBuf, Uint8Array.from([keyNum]))) {\n    throw new Error(\n      // `Format Error: Invalid ${type} key: ${keyBuf.toString('hex')}`,\n      `Format Error: Invalid ${type} key: ${uint8array_tools__WEBPACK_IMPORTED_MODULE_3__.toHex(keyBuf)}`,\n    );\n  }\n}\nfunction psbtFromKeyVals(\n  unsignedTx,\n  { globalMapKeyVals, inputKeyVals, outputKeyVals },\n) {\n  // That was easy :-)\n  const globalMap = {\n    unsignedTx,\n  };\n  let txCount = 0;\n  for (const keyVal of globalMapKeyVals) {\n    // If a globalMap item needs pubkey, uncomment\n    // const pubkey = convert.globals.checkPubkey(keyVal);\n    switch (keyVal.key[0]) {\n      case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.GlobalTypes.UNSIGNED_TX:\n        checkKeyBuffer('global', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.GlobalTypes.UNSIGNED_TX);\n        if (txCount > 0) {\n          throw new Error('Format Error: GlobalMap has multiple UNSIGNED_TX');\n        }\n        txCount++;\n        break;\n      case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.GlobalTypes.GLOBAL_XPUB:\n        if (globalMap.globalXpub === undefined) {\n          globalMap.globalXpub = [];\n        }\n        globalMap.globalXpub.push(_converter_index_js__WEBPACK_IMPORTED_MODULE_0__.globals.globalXpub.decode(keyVal));\n        break;\n      default:\n        // This will allow inclusion during serialization.\n        if (!globalMap.unknownKeyVals) globalMap.unknownKeyVals = [];\n        globalMap.unknownKeyVals.push(keyVal);\n    }\n  }\n  // Get input and output counts to loop the respective fields\n  const inputCount = inputKeyVals.length;\n  const outputCount = outputKeyVals.length;\n  const inputs = [];\n  const outputs = [];\n  // Get input fields\n  for (const index of (0,_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.range)(inputCount)) {\n    const input = {};\n    for (const keyVal of inputKeyVals[index]) {\n      _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.NON_WITNESS_UTXO:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.NON_WITNESS_UTXO);\n          if (input.nonWitnessUtxo !== undefined) {\n            throw new Error(\n              'Format Error: Input has multiple NON_WITNESS_UTXO',\n            );\n          }\n          input.nonWitnessUtxo = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.nonWitnessUtxo.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.WITNESS_UTXO:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.WITNESS_UTXO);\n          if (input.witnessUtxo !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_UTXO');\n          }\n          input.witnessUtxo = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.witnessUtxo.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.PARTIAL_SIG:\n          if (input.partialSig === undefined) {\n            input.partialSig = [];\n          }\n          input.partialSig.push(_converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.partialSig.decode(keyVal));\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.SIGHASH_TYPE:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.SIGHASH_TYPE);\n          if (input.sighashType !== undefined) {\n            throw new Error('Format Error: Input has multiple SIGHASH_TYPE');\n          }\n          input.sighashType = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.sighashType.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.REDEEM_SCRIPT);\n          if (input.redeemScript !== undefined) {\n            throw new Error('Format Error: Input has multiple REDEEM_SCRIPT');\n          }\n          input.redeemScript = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.redeemScript.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.WITNESS_SCRIPT);\n          if (input.witnessScript !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_SCRIPT');\n          }\n          input.witnessScript = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.witnessScript.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.BIP32_DERIVATION:\n          if (input.bip32Derivation === undefined) {\n            input.bip32Derivation = [];\n          }\n          input.bip32Derivation.push(\n            _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.FINAL_SCRIPTSIG:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.FINAL_SCRIPTSIG);\n          input.finalScriptSig = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.finalScriptSig.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.FINAL_SCRIPTWITNESS:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.FINAL_SCRIPTWITNESS);\n          input.finalScriptWitness = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.finalScriptWitness.decode(\n            keyVal,\n          );\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.POR_COMMITMENT:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.POR_COMMITMENT);\n          input.porCommitment = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.porCommitment.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_KEY_SIG:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_KEY_SIG);\n          input.tapKeySig = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapKeySig.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_SCRIPT_SIG:\n          if (input.tapScriptSig === undefined) {\n            input.tapScriptSig = [];\n          }\n          input.tapScriptSig.push(_converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapScriptSig.decode(keyVal));\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_LEAF_SCRIPT:\n          if (input.tapLeafScript === undefined) {\n            input.tapLeafScript = [];\n          }\n          input.tapLeafScript.push(_converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapLeafScript.decode(keyVal));\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_BIP32_DERIVATION:\n          if (input.tapBip32Derivation === undefined) {\n            input.tapBip32Derivation = [];\n          }\n          input.tapBip32Derivation.push(\n            _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_INTERNAL_KEY);\n          input.tapInternalKey = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapInternalKey.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_MERKLE_ROOT:\n          checkKeyBuffer('input', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.InputTypes.TAP_MERKLE_ROOT);\n          input.tapMerkleRoot = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs.tapMerkleRoot.decode(keyVal);\n          break;\n        default:\n          // This will allow inclusion during serialization.\n          if (!input.unknownKeyVals) input.unknownKeyVals = [];\n          input.unknownKeyVals.push(keyVal);\n      }\n    }\n    inputs.push(input);\n  }\n  for (const index of (0,_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.range)(outputCount)) {\n    const output = {};\n    for (const keyVal of outputKeyVals[index]) {\n      _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer('output', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.REDEEM_SCRIPT);\n          if (output.redeemScript !== undefined) {\n            throw new Error('Format Error: Output has multiple REDEEM_SCRIPT');\n          }\n          output.redeemScript = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.redeemScript.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer('output', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.WITNESS_SCRIPT);\n          if (output.witnessScript !== undefined) {\n            throw new Error('Format Error: Output has multiple WITNESS_SCRIPT');\n          }\n          output.witnessScript = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.witnessScript.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.BIP32_DERIVATION:\n          if (output.bip32Derivation === undefined) {\n            output.bip32Derivation = [];\n          }\n          output.bip32Derivation.push(\n            _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer('output', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.TAP_INTERNAL_KEY);\n          output.tapInternalKey = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.tapInternalKey.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.TAP_TREE:\n          checkKeyBuffer('output', keyVal.key, _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.TAP_TREE);\n          output.tapTree = _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.tapTree.decode(keyVal);\n          break;\n        case _typeFields_js__WEBPACK_IMPORTED_MODULE_4__.OutputTypes.TAP_BIP32_DERIVATION:\n          if (output.tapBip32Derivation === undefined) {\n            output.tapBip32Derivation = [];\n          }\n          output.tapBip32Derivation.push(\n            _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        default:\n          if (!output.unknownKeyVals) output.unknownKeyVals = [];\n          output.unknownKeyVals.push(keyVal);\n      }\n    }\n    outputs.push(output);\n  }\n  return { globalMap, inputs, outputs };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3BhcnNlci9mcm9tQnVmZmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWlEO0FBQ0g7QUFDSDtBQUNEO0FBQzhCO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBLFlBQVksNkJBQTZCLEVBQUUsbURBQWM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdEQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1REFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdURBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsdURBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwwQkFBMEI7QUFDcEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBEQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG1EQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbURBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ087QUFDUCxNQUFNLHFEQUFhO0FBQ25CO0FBQ0Esa0NBQWtDLE1BQU0sT0FBTyx1QkFBdUI7QUFDdEUsK0JBQStCLE1BQU0sT0FBTyxtREFBVyxTQUFTO0FBQ2hFO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxJQUFJLCtDQUErQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdURBQVc7QUFDdEIsNkNBQTZDLHVEQUFXO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVEQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx3REFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBSztBQUMzQjtBQUNBO0FBQ0EsTUFBTSx1REFBYztBQUNwQjtBQUNBLGFBQWEsc0RBQVU7QUFDdkIsOENBQThDLHNEQUFVO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdURBQWM7QUFDL0M7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCLDhDQUE4QyxzREFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsdURBQWM7QUFDNUM7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx1REFBYztBQUM5QztBQUNBLGFBQWEsc0RBQVU7QUFDdkIsOENBQThDLHNEQUFVO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix1REFBYztBQUM1QztBQUNBLGFBQWEsc0RBQVU7QUFDdkIsOENBQThDLHNEQUFVO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix1REFBYztBQUM3QztBQUNBLGFBQWEsc0RBQVU7QUFDdkIsOENBQThDLHNEQUFVO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx1REFBYztBQUM5QztBQUNBLGFBQWEsc0RBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVEQUFjO0FBQzFCO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCLDhDQUE4QyxzREFBVTtBQUN4RCxpQ0FBaUMsdURBQWM7QUFDL0M7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCLDhDQUE4QyxzREFBVTtBQUN4RCxxQ0FBcUMsdURBQWM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzREFBVTtBQUN2Qiw4Q0FBOEMsc0RBQVU7QUFDeEQsZ0NBQWdDLHVEQUFjO0FBQzlDO0FBQ0EsYUFBYSxzREFBVTtBQUN2Qiw4Q0FBOEMsc0RBQVU7QUFDeEQsNEJBQTRCLHVEQUFjO0FBQzFDO0FBQ0EsYUFBYSxzREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsdURBQWM7QUFDaEQ7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx1REFBYztBQUNqRDtBQUNBLGFBQWEsc0RBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVEQUFjO0FBQzFCO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCLDhDQUE4QyxzREFBVTtBQUN4RCxpQ0FBaUMsdURBQWM7QUFDL0M7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCLDhDQUE4QyxzREFBVTtBQUN4RCxnQ0FBZ0MsdURBQWM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBEQUFLO0FBQzNCO0FBQ0E7QUFDQSxNQUFNLHdEQUFlO0FBQ3JCO0FBQ0EsYUFBYSx1REFBVztBQUN4QiwrQ0FBK0MsdURBQVc7QUFDMUQ7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdEQUFlO0FBQy9DO0FBQ0EsYUFBYSx1REFBVztBQUN4QiwrQ0FBK0MsdURBQVc7QUFDMUQ7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHdEQUFlO0FBQ2hEO0FBQ0EsYUFBYSx1REFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0RBQWU7QUFDM0I7QUFDQTtBQUNBLGFBQWEsdURBQVc7QUFDeEIsK0NBQStDLHVEQUFXO0FBQzFELGtDQUFrQyx3REFBZTtBQUNqRDtBQUNBLGFBQWEsdURBQVc7QUFDeEIsK0NBQStDLHVEQUFXO0FBQzFELDJCQUEyQix3REFBZTtBQUMxQztBQUNBLGFBQWEsdURBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvcGFyc2VyL2Zyb21CdWZmZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29udmVydCBmcm9tICcuLi9jb252ZXJ0ZXIvaW5kZXguanMnO1xuaW1wb3J0IHsgcmFuZ2UgfSBmcm9tICcuLi9jb252ZXJ0ZXIvdG9vbHMuanMnO1xuaW1wb3J0ICogYXMgdmFydWludCBmcm9tICd2YXJ1aW50LWJpdGNvaW4nO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5pbXBvcnQgeyBHbG9iYWxUeXBlcywgSW5wdXRUeXBlcywgT3V0cHV0VHlwZXMgfSBmcm9tICcuLi90eXBlRmllbGRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBwc2J0RnJvbUJ1ZmZlcihidWZmZXIsIHR4R2V0dGVyKSB7XG4gIGxldCBvZmZzZXQgPSAwO1xuICBmdW5jdGlvbiB2YXJTbGljZSgpIHtcbiAgICBjb25zdCB7IG51bWJlclZhbHVlOiBrZXlMZW4sIGJ5dGVzIH0gPSB2YXJ1aW50LmRlY29kZShidWZmZXIsIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGJ5dGVzO1xuICAgIGNvbnN0IGtleSA9IGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIE51bWJlcihrZXlMZW4pKTtcbiAgICBvZmZzZXQgKz0gTnVtYmVyKGtleUxlbik7XG4gICAgcmV0dXJuIGtleTtcbiAgfVxuICBmdW5jdGlvbiByZWFkVUludDMyQkUoKSB7XG4gICAgY29uc3QgbnVtID0gdG9vbHMucmVhZFVJbnQzMihidWZmZXIsIG9mZnNldCwgJ0JFJyk7XG4gICAgb2Zmc2V0ICs9IDQ7XG4gICAgcmV0dXJuIG51bTtcbiAgfVxuICBmdW5jdGlvbiByZWFkVUludDgoKSB7XG4gICAgY29uc3QgbnVtID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gMTtcbiAgICByZXR1cm4gbnVtO1xuICB9XG4gIGZ1bmN0aW9uIGdldEtleVZhbHVlKCkge1xuICAgIGNvbnN0IGtleSA9IHZhclNsaWNlKCk7XG4gICAgY29uc3QgdmFsdWUgPSB2YXJTbGljZSgpO1xuICAgIHJldHVybiB7XG4gICAgICBrZXksXG4gICAgICB2YWx1ZSxcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGNoZWNrRW5kT2ZLZXlWYWxQYWlycygpIHtcbiAgICBpZiAob2Zmc2V0ID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRm9ybWF0IEVycm9yOiBVbmV4cGVjdGVkIEVuZCBvZiBQU0JUJyk7XG4gICAgfVxuICAgIGNvbnN0IGlzRW5kID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgb2Zmc2V0KSA9PT0gMDtcbiAgICBpZiAoaXNFbmQpIHtcbiAgICAgIG9mZnNldCsrO1xuICAgIH1cbiAgICByZXR1cm4gaXNFbmQ7XG4gIH1cbiAgaWYgKHJlYWRVSW50MzJCRSgpICE9PSAweDcwNzM2Mjc0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGb3JtYXQgRXJyb3I6IEludmFsaWQgTWFnaWMgTnVtYmVyJyk7XG4gIH1cbiAgaWYgKHJlYWRVSW50OCgpICE9PSAweGZmKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0Zvcm1hdCBFcnJvcjogTWFnaWMgTnVtYmVyIG11c3QgYmUgZm9sbG93ZWQgYnkgMHhmZiBzZXBhcmF0b3InLFxuICAgICk7XG4gIH1cbiAgY29uc3QgZ2xvYmFsTWFwS2V5VmFscyA9IFtdO1xuICBjb25zdCBnbG9iYWxLZXlJbmRleCA9IHt9O1xuICB3aGlsZSAoIWNoZWNrRW5kT2ZLZXlWYWxQYWlycygpKSB7XG4gICAgY29uc3Qga2V5VmFsID0gZ2V0S2V5VmFsdWUoKTtcbiAgICBjb25zdCBoZXhLZXkgPSB0b29scy50b0hleChrZXlWYWwua2V5KTtcbiAgICBpZiAoZ2xvYmFsS2V5SW5kZXhbaGV4S2V5XSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnRm9ybWF0IEVycm9yOiBLZXlzIG11c3QgYmUgdW5pcXVlIGZvciBnbG9iYWwga2V5bWFwOiBrZXkgJyArIGhleEtleSxcbiAgICAgICk7XG4gICAgfVxuICAgIGdsb2JhbEtleUluZGV4W2hleEtleV0gPSAxO1xuICAgIGdsb2JhbE1hcEtleVZhbHMucHVzaChrZXlWYWwpO1xuICB9XG4gIGNvbnN0IHVuc2lnbmVkVHhNYXBzID0gZ2xvYmFsTWFwS2V5VmFscy5maWx0ZXIoXG4gICAga2V5VmFsID0+IGtleVZhbC5rZXlbMF0gPT09IEdsb2JhbFR5cGVzLlVOU0lHTkVEX1RYLFxuICApO1xuICBpZiAodW5zaWduZWRUeE1hcHMubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGb3JtYXQgRXJyb3I6IE9ubHkgb25lIFVOU0lHTkVEX1RYIGFsbG93ZWQnKTtcbiAgfVxuICBjb25zdCB1bnNpZ25lZFR4ID0gdHhHZXR0ZXIodW5zaWduZWRUeE1hcHNbMF0udmFsdWUpO1xuICAvLyBHZXQgaW5wdXQgYW5kIG91dHB1dCBjb3VudHMgdG8gbG9vcCB0aGUgcmVzcGVjdGl2ZSBmaWVsZHNcbiAgY29uc3QgeyBpbnB1dENvdW50LCBvdXRwdXRDb3VudCB9ID0gdW5zaWduZWRUeC5nZXRJbnB1dE91dHB1dENvdW50cygpO1xuICBjb25zdCBpbnB1dEtleVZhbHMgPSBbXTtcbiAgY29uc3Qgb3V0cHV0S2V5VmFscyA9IFtdO1xuICAvLyBHZXQgaW5wdXQgZmllbGRzXG4gIGZvciAoY29uc3QgaW5kZXggb2YgcmFuZ2UoaW5wdXRDb3VudCkpIHtcbiAgICBjb25zdCBpbnB1dEtleUluZGV4ID0ge307XG4gICAgY29uc3QgaW5wdXQgPSBbXTtcbiAgICB3aGlsZSAoIWNoZWNrRW5kT2ZLZXlWYWxQYWlycygpKSB7XG4gICAgICBjb25zdCBrZXlWYWwgPSBnZXRLZXlWYWx1ZSgpO1xuICAgICAgY29uc3QgaGV4S2V5ID0gdG9vbHMudG9IZXgoa2V5VmFsLmtleSk7XG4gICAgICBpZiAoaW5wdXRLZXlJbmRleFtoZXhLZXldKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnRm9ybWF0IEVycm9yOiBLZXlzIG11c3QgYmUgdW5pcXVlIGZvciBlYWNoIGlucHV0OiAnICtcbiAgICAgICAgICAgICdpbnB1dCBpbmRleCAnICtcbiAgICAgICAgICAgIGluZGV4ICtcbiAgICAgICAgICAgICcga2V5ICcgK1xuICAgICAgICAgICAgaGV4S2V5LFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaW5wdXRLZXlJbmRleFtoZXhLZXldID0gMTtcbiAgICAgIGlucHV0LnB1c2goa2V5VmFsKTtcbiAgICB9XG4gICAgaW5wdXRLZXlWYWxzLnB1c2goaW5wdXQpO1xuICB9XG4gIGZvciAoY29uc3QgaW5kZXggb2YgcmFuZ2Uob3V0cHV0Q291bnQpKSB7XG4gICAgY29uc3Qgb3V0cHV0S2V5SW5kZXggPSB7fTtcbiAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICB3aGlsZSAoIWNoZWNrRW5kT2ZLZXlWYWxQYWlycygpKSB7XG4gICAgICBjb25zdCBrZXlWYWwgPSBnZXRLZXlWYWx1ZSgpO1xuICAgICAgY29uc3QgaGV4S2V5ID0gdG9vbHMudG9IZXgoa2V5VmFsLmtleSk7XG4gICAgICBpZiAob3V0cHV0S2V5SW5kZXhbaGV4S2V5XSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ0Zvcm1hdCBFcnJvcjogS2V5cyBtdXN0IGJlIHVuaXF1ZSBmb3IgZWFjaCBvdXRwdXQ6ICcgK1xuICAgICAgICAgICAgJ291dHB1dCBpbmRleCAnICtcbiAgICAgICAgICAgIGluZGV4ICtcbiAgICAgICAgICAgICcga2V5ICcgK1xuICAgICAgICAgICAgaGV4S2V5LFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgb3V0cHV0S2V5SW5kZXhbaGV4S2V5XSA9IDE7XG4gICAgICBvdXRwdXQucHVzaChrZXlWYWwpO1xuICAgIH1cbiAgICBvdXRwdXRLZXlWYWxzLnB1c2gob3V0cHV0KTtcbiAgfVxuICByZXR1cm4gcHNidEZyb21LZXlWYWxzKHVuc2lnbmVkVHgsIHtcbiAgICBnbG9iYWxNYXBLZXlWYWxzLFxuICAgIGlucHV0S2V5VmFscyxcbiAgICBvdXRwdXRLZXlWYWxzLFxuICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0tleUJ1ZmZlcih0eXBlLCBrZXlCdWYsIGtleU51bSkge1xuICBpZiAodG9vbHMuY29tcGFyZShrZXlCdWYsIFVpbnQ4QXJyYXkuZnJvbShba2V5TnVtXSkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgLy8gYEZvcm1hdCBFcnJvcjogSW52YWxpZCAke3R5cGV9IGtleTogJHtrZXlCdWYudG9TdHJpbmcoJ2hleCcpfWAsXG4gICAgICBgRm9ybWF0IEVycm9yOiBJbnZhbGlkICR7dHlwZX0ga2V5OiAke3Rvb2xzLnRvSGV4KGtleUJ1Zil9YCxcbiAgICApO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcHNidEZyb21LZXlWYWxzKFxuICB1bnNpZ25lZFR4LFxuICB7IGdsb2JhbE1hcEtleVZhbHMsIGlucHV0S2V5VmFscywgb3V0cHV0S2V5VmFscyB9LFxuKSB7XG4gIC8vIFRoYXQgd2FzIGVhc3kgOi0pXG4gIGNvbnN0IGdsb2JhbE1hcCA9IHtcbiAgICB1bnNpZ25lZFR4LFxuICB9O1xuICBsZXQgdHhDb3VudCA9IDA7XG4gIGZvciAoY29uc3Qga2V5VmFsIG9mIGdsb2JhbE1hcEtleVZhbHMpIHtcbiAgICAvLyBJZiBhIGdsb2JhbE1hcCBpdGVtIG5lZWRzIHB1YmtleSwgdW5jb21tZW50XG4gICAgLy8gY29uc3QgcHVia2V5ID0gY29udmVydC5nbG9iYWxzLmNoZWNrUHVia2V5KGtleVZhbCk7XG4gICAgc3dpdGNoIChrZXlWYWwua2V5WzBdKSB7XG4gICAgICBjYXNlIEdsb2JhbFR5cGVzLlVOU0lHTkVEX1RYOlxuICAgICAgICBjaGVja0tleUJ1ZmZlcignZ2xvYmFsJywga2V5VmFsLmtleSwgR2xvYmFsVHlwZXMuVU5TSUdORURfVFgpO1xuICAgICAgICBpZiAodHhDb3VudCA+IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Zvcm1hdCBFcnJvcjogR2xvYmFsTWFwIGhhcyBtdWx0aXBsZSBVTlNJR05FRF9UWCcpO1xuICAgICAgICB9XG4gICAgICAgIHR4Q291bnQrKztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIEdsb2JhbFR5cGVzLkdMT0JBTF9YUFVCOlxuICAgICAgICBpZiAoZ2xvYmFsTWFwLmdsb2JhbFhwdWIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGdsb2JhbE1hcC5nbG9iYWxYcHViID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZ2xvYmFsTWFwLmdsb2JhbFhwdWIucHVzaChjb252ZXJ0Lmdsb2JhbHMuZ2xvYmFsWHB1Yi5kZWNvZGUoa2V5VmFsKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgLy8gVGhpcyB3aWxsIGFsbG93IGluY2x1c2lvbiBkdXJpbmcgc2VyaWFsaXphdGlvbi5cbiAgICAgICAgaWYgKCFnbG9iYWxNYXAudW5rbm93bktleVZhbHMpIGdsb2JhbE1hcC51bmtub3duS2V5VmFscyA9IFtdO1xuICAgICAgICBnbG9iYWxNYXAudW5rbm93bktleVZhbHMucHVzaChrZXlWYWwpO1xuICAgIH1cbiAgfVxuICAvLyBHZXQgaW5wdXQgYW5kIG91dHB1dCBjb3VudHMgdG8gbG9vcCB0aGUgcmVzcGVjdGl2ZSBmaWVsZHNcbiAgY29uc3QgaW5wdXRDb3VudCA9IGlucHV0S2V5VmFscy5sZW5ndGg7XG4gIGNvbnN0IG91dHB1dENvdW50ID0gb3V0cHV0S2V5VmFscy5sZW5ndGg7XG4gIGNvbnN0IGlucHV0cyA9IFtdO1xuICBjb25zdCBvdXRwdXRzID0gW107XG4gIC8vIEdldCBpbnB1dCBmaWVsZHNcbiAgZm9yIChjb25zdCBpbmRleCBvZiByYW5nZShpbnB1dENvdW50KSkge1xuICAgIGNvbnN0IGlucHV0ID0ge307XG4gICAgZm9yIChjb25zdCBrZXlWYWwgb2YgaW5wdXRLZXlWYWxzW2luZGV4XSkge1xuICAgICAgY29udmVydC5pbnB1dHMuY2hlY2tQdWJrZXkoa2V5VmFsKTtcbiAgICAgIHN3aXRjaCAoa2V5VmFsLmtleVswXSkge1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuTk9OX1dJVE5FU1NfVVRYTzpcbiAgICAgICAgICBjaGVja0tleUJ1ZmZlcignaW5wdXQnLCBrZXlWYWwua2V5LCBJbnB1dFR5cGVzLk5PTl9XSVRORVNTX1VUWE8pO1xuICAgICAgICAgIGlmIChpbnB1dC5ub25XaXRuZXNzVXR4byAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICdGb3JtYXQgRXJyb3I6IElucHV0IGhhcyBtdWx0aXBsZSBOT05fV0lUTkVTU19VVFhPJyxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlucHV0Lm5vbldpdG5lc3NVdHhvID0gY29udmVydC5pbnB1dHMubm9uV2l0bmVzc1V0eG8uZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5XSVRORVNTX1VUWE86XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ2lucHV0Jywga2V5VmFsLmtleSwgSW5wdXRUeXBlcy5XSVRORVNTX1VUWE8pO1xuICAgICAgICAgIGlmIChpbnB1dC53aXRuZXNzVXR4byAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Zvcm1hdCBFcnJvcjogSW5wdXQgaGFzIG11bHRpcGxlIFdJVE5FU1NfVVRYTycpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpbnB1dC53aXRuZXNzVXR4byA9IGNvbnZlcnQuaW5wdXRzLndpdG5lc3NVdHhvLmRlY29kZShrZXlWYWwpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuUEFSVElBTF9TSUc6XG4gICAgICAgICAgaWYgKGlucHV0LnBhcnRpYWxTaWcgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5wdXQucGFydGlhbFNpZyA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpbnB1dC5wYXJ0aWFsU2lnLnB1c2goY29udmVydC5pbnB1dHMucGFydGlhbFNpZy5kZWNvZGUoa2V5VmFsKSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5TSUdIQVNIX1RZUEU6XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ2lucHV0Jywga2V5VmFsLmtleSwgSW5wdXRUeXBlcy5TSUdIQVNIX1RZUEUpO1xuICAgICAgICAgIGlmIChpbnB1dC5zaWdoYXNoVHlwZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Zvcm1hdCBFcnJvcjogSW5wdXQgaGFzIG11bHRpcGxlIFNJR0hBU0hfVFlQRScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpbnB1dC5zaWdoYXNoVHlwZSA9IGNvbnZlcnQuaW5wdXRzLnNpZ2hhc2hUeXBlLmRlY29kZShrZXlWYWwpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuUkVERUVNX1NDUklQVDpcbiAgICAgICAgICBjaGVja0tleUJ1ZmZlcignaW5wdXQnLCBrZXlWYWwua2V5LCBJbnB1dFR5cGVzLlJFREVFTV9TQ1JJUFQpO1xuICAgICAgICAgIGlmIChpbnB1dC5yZWRlZW1TY3JpcHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGb3JtYXQgRXJyb3I6IElucHV0IGhhcyBtdWx0aXBsZSBSRURFRU1fU0NSSVBUJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlucHV0LnJlZGVlbVNjcmlwdCA9IGNvbnZlcnQuaW5wdXRzLnJlZGVlbVNjcmlwdC5kZWNvZGUoa2V5VmFsKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBJbnB1dFR5cGVzLldJVE5FU1NfU0NSSVBUOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdpbnB1dCcsIGtleVZhbC5rZXksIElucHV0VHlwZXMuV0lUTkVTU19TQ1JJUFQpO1xuICAgICAgICAgIGlmIChpbnB1dC53aXRuZXNzU2NyaXB0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRm9ybWF0IEVycm9yOiBJbnB1dCBoYXMgbXVsdGlwbGUgV0lUTkVTU19TQ1JJUFQnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaW5wdXQud2l0bmVzc1NjcmlwdCA9IGNvbnZlcnQuaW5wdXRzLndpdG5lc3NTY3JpcHQuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5CSVAzMl9ERVJJVkFUSU9OOlxuICAgICAgICAgIGlmIChpbnB1dC5iaXAzMkRlcml2YXRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaW5wdXQuYmlwMzJEZXJpdmF0aW9uID0gW107XG4gICAgICAgICAgfVxuICAgICAgICAgIGlucHV0LmJpcDMyRGVyaXZhdGlvbi5wdXNoKFxuICAgICAgICAgICAgY29udmVydC5pbnB1dHMuYmlwMzJEZXJpdmF0aW9uLmRlY29kZShrZXlWYWwpLFxuICAgICAgICAgICk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5GSU5BTF9TQ1JJUFRTSUc6XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ2lucHV0Jywga2V5VmFsLmtleSwgSW5wdXRUeXBlcy5GSU5BTF9TQ1JJUFRTSUcpO1xuICAgICAgICAgIGlucHV0LmZpbmFsU2NyaXB0U2lnID0gY29udmVydC5pbnB1dHMuZmluYWxTY3JpcHRTaWcuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5GSU5BTF9TQ1JJUFRXSVRORVNTOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdpbnB1dCcsIGtleVZhbC5rZXksIElucHV0VHlwZXMuRklOQUxfU0NSSVBUV0lUTkVTUyk7XG4gICAgICAgICAgaW5wdXQuZmluYWxTY3JpcHRXaXRuZXNzID0gY29udmVydC5pbnB1dHMuZmluYWxTY3JpcHRXaXRuZXNzLmRlY29kZShcbiAgICAgICAgICAgIGtleVZhbCxcbiAgICAgICAgICApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuUE9SX0NPTU1JVE1FTlQ6XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ2lucHV0Jywga2V5VmFsLmtleSwgSW5wdXRUeXBlcy5QT1JfQ09NTUlUTUVOVCk7XG4gICAgICAgICAgaW5wdXQucG9yQ29tbWl0bWVudCA9IGNvbnZlcnQuaW5wdXRzLnBvckNvbW1pdG1lbnQuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5UQVBfS0VZX1NJRzpcbiAgICAgICAgICBjaGVja0tleUJ1ZmZlcignaW5wdXQnLCBrZXlWYWwua2V5LCBJbnB1dFR5cGVzLlRBUF9LRVlfU0lHKTtcbiAgICAgICAgICBpbnB1dC50YXBLZXlTaWcgPSBjb252ZXJ0LmlucHV0cy50YXBLZXlTaWcuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgSW5wdXRUeXBlcy5UQVBfU0NSSVBUX1NJRzpcbiAgICAgICAgICBpZiAoaW5wdXQudGFwU2NyaXB0U2lnID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlucHV0LnRhcFNjcmlwdFNpZyA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpbnB1dC50YXBTY3JpcHRTaWcucHVzaChjb252ZXJ0LmlucHV0cy50YXBTY3JpcHRTaWcuZGVjb2RlKGtleVZhbCkpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuVEFQX0xFQUZfU0NSSVBUOlxuICAgICAgICAgIGlmIChpbnB1dC50YXBMZWFmU2NyaXB0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlucHV0LnRhcExlYWZTY3JpcHQgPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaW5wdXQudGFwTGVhZlNjcmlwdC5wdXNoKGNvbnZlcnQuaW5wdXRzLnRhcExlYWZTY3JpcHQuZGVjb2RlKGtleVZhbCkpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuVEFQX0JJUDMyX0RFUklWQVRJT046XG4gICAgICAgICAgaWYgKGlucHV0LnRhcEJpcDMyRGVyaXZhdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpbnB1dC50YXBCaXAzMkRlcml2YXRpb24gPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaW5wdXQudGFwQmlwMzJEZXJpdmF0aW9uLnB1c2goXG4gICAgICAgICAgICBjb252ZXJ0LmlucHV0cy50YXBCaXAzMkRlcml2YXRpb24uZGVjb2RlKGtleVZhbCksXG4gICAgICAgICAgKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBJbnB1dFR5cGVzLlRBUF9JTlRFUk5BTF9LRVk6XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ2lucHV0Jywga2V5VmFsLmtleSwgSW5wdXRUeXBlcy5UQVBfSU5URVJOQUxfS0VZKTtcbiAgICAgICAgICBpbnB1dC50YXBJbnRlcm5hbEtleSA9IGNvbnZlcnQuaW5wdXRzLnRhcEludGVybmFsS2V5LmRlY29kZShrZXlWYWwpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIElucHV0VHlwZXMuVEFQX01FUktMRV9ST09UOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdpbnB1dCcsIGtleVZhbC5rZXksIElucHV0VHlwZXMuVEFQX01FUktMRV9ST09UKTtcbiAgICAgICAgICBpbnB1dC50YXBNZXJrbGVSb290ID0gY29udmVydC5pbnB1dHMudGFwTWVya2xlUm9vdC5kZWNvZGUoa2V5VmFsKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgYWxsb3cgaW5jbHVzaW9uIGR1cmluZyBzZXJpYWxpemF0aW9uLlxuICAgICAgICAgIGlmICghaW5wdXQudW5rbm93bktleVZhbHMpIGlucHV0LnVua25vd25LZXlWYWxzID0gW107XG4gICAgICAgICAgaW5wdXQudW5rbm93bktleVZhbHMucHVzaChrZXlWYWwpO1xuICAgICAgfVxuICAgIH1cbiAgICBpbnB1dHMucHVzaChpbnB1dCk7XG4gIH1cbiAgZm9yIChjb25zdCBpbmRleCBvZiByYW5nZShvdXRwdXRDb3VudCkpIHtcbiAgICBjb25zdCBvdXRwdXQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleVZhbCBvZiBvdXRwdXRLZXlWYWxzW2luZGV4XSkge1xuICAgICAgY29udmVydC5vdXRwdXRzLmNoZWNrUHVia2V5KGtleVZhbCk7XG4gICAgICBzd2l0Y2ggKGtleVZhbC5rZXlbMF0pIHtcbiAgICAgICAgY2FzZSBPdXRwdXRUeXBlcy5SRURFRU1fU0NSSVBUOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdvdXRwdXQnLCBrZXlWYWwua2V5LCBPdXRwdXRUeXBlcy5SRURFRU1fU0NSSVBUKTtcbiAgICAgICAgICBpZiAob3V0cHV0LnJlZGVlbVNjcmlwdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Zvcm1hdCBFcnJvcjogT3V0cHV0IGhhcyBtdWx0aXBsZSBSRURFRU1fU0NSSVBUJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG91dHB1dC5yZWRlZW1TY3JpcHQgPSBjb252ZXJ0Lm91dHB1dHMucmVkZWVtU2NyaXB0LmRlY29kZShrZXlWYWwpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIE91dHB1dFR5cGVzLldJVE5FU1NfU0NSSVBUOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdvdXRwdXQnLCBrZXlWYWwua2V5LCBPdXRwdXRUeXBlcy5XSVRORVNTX1NDUklQVCk7XG4gICAgICAgICAgaWYgKG91dHB1dC53aXRuZXNzU2NyaXB0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRm9ybWF0IEVycm9yOiBPdXRwdXQgaGFzIG11bHRpcGxlIFdJVE5FU1NfU0NSSVBUJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG91dHB1dC53aXRuZXNzU2NyaXB0ID0gY29udmVydC5vdXRwdXRzLndpdG5lc3NTY3JpcHQuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgT3V0cHV0VHlwZXMuQklQMzJfREVSSVZBVElPTjpcbiAgICAgICAgICBpZiAob3V0cHV0LmJpcDMyRGVyaXZhdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBvdXRwdXQuYmlwMzJEZXJpdmF0aW9uID0gW107XG4gICAgICAgICAgfVxuICAgICAgICAgIG91dHB1dC5iaXAzMkRlcml2YXRpb24ucHVzaChcbiAgICAgICAgICAgIGNvbnZlcnQub3V0cHV0cy5iaXAzMkRlcml2YXRpb24uZGVjb2RlKGtleVZhbCksXG4gICAgICAgICAgKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBPdXRwdXRUeXBlcy5UQVBfSU5URVJOQUxfS0VZOlxuICAgICAgICAgIGNoZWNrS2V5QnVmZmVyKCdvdXRwdXQnLCBrZXlWYWwua2V5LCBPdXRwdXRUeXBlcy5UQVBfSU5URVJOQUxfS0VZKTtcbiAgICAgICAgICBvdXRwdXQudGFwSW50ZXJuYWxLZXkgPSBjb252ZXJ0Lm91dHB1dHMudGFwSW50ZXJuYWxLZXkuZGVjb2RlKGtleVZhbCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgT3V0cHV0VHlwZXMuVEFQX1RSRUU6XG4gICAgICAgICAgY2hlY2tLZXlCdWZmZXIoJ291dHB1dCcsIGtleVZhbC5rZXksIE91dHB1dFR5cGVzLlRBUF9UUkVFKTtcbiAgICAgICAgICBvdXRwdXQudGFwVHJlZSA9IGNvbnZlcnQub3V0cHV0cy50YXBUcmVlLmRlY29kZShrZXlWYWwpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIE91dHB1dFR5cGVzLlRBUF9CSVAzMl9ERVJJVkFUSU9OOlxuICAgICAgICAgIGlmIChvdXRwdXQudGFwQmlwMzJEZXJpdmF0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG91dHB1dC50YXBCaXAzMkRlcml2YXRpb24gPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0cHV0LnRhcEJpcDMyRGVyaXZhdGlvbi5wdXNoKFxuICAgICAgICAgICAgY29udmVydC5vdXRwdXRzLnRhcEJpcDMyRGVyaXZhdGlvbi5kZWNvZGUoa2V5VmFsKSxcbiAgICAgICAgICApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGlmICghb3V0cHV0LnVua25vd25LZXlWYWxzKSBvdXRwdXQudW5rbm93bktleVZhbHMgPSBbXTtcbiAgICAgICAgICBvdXRwdXQudW5rbm93bktleVZhbHMucHVzaChrZXlWYWwpO1xuICAgICAgfVxuICAgIH1cbiAgICBvdXRwdXRzLnB1c2gob3V0cHV0KTtcbiAgfVxuICByZXR1cm4geyBnbG9iYWxNYXAsIGlucHV0cywgb3V0cHV0cyB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/fromBuffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkKeyBuffer: () => (/* reexport safe */ _fromBuffer_js__WEBPACK_IMPORTED_MODULE_0__.checkKeyBuffer),\n/* harmony export */   psbtFromBuffer: () => (/* reexport safe */ _fromBuffer_js__WEBPACK_IMPORTED_MODULE_0__.psbtFromBuffer),\n/* harmony export */   psbtFromKeyVals: () => (/* reexport safe */ _fromBuffer_js__WEBPACK_IMPORTED_MODULE_0__.psbtFromKeyVals),\n/* harmony export */   psbtToBuffer: () => (/* reexport safe */ _toBuffer_js__WEBPACK_IMPORTED_MODULE_1__.psbtToBuffer),\n/* harmony export */   psbtToKeyVals: () => (/* reexport safe */ _toBuffer_js__WEBPACK_IMPORTED_MODULE_1__.psbtToKeyVals)\n/* harmony export */ });\n/* harmony import */ var _fromBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fromBuffer.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/fromBuffer.js\");\n/* harmony import */ var _toBuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toBuffer.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/toBuffer.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3BhcnNlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdDO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3BhcnNlci9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Zyb21CdWZmZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi90b0J1ZmZlci5qcyc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/toBuffer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/toBuffer.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   psbtToBuffer: () => (/* binding */ psbtToBuffer),\n/* harmony export */   psbtToKeyVals: () => (/* binding */ psbtToKeyVals)\n/* harmony export */ });\n/* harmony import */ var _converter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../converter/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js\");\n/* harmony import */ var _converter_tools_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../converter/tools.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/tools.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\nfunction psbtToBuffer({ globalMap, inputs, outputs }) {\n  const { globalKeyVals, inputKeyVals, outputKeyVals } = psbtToKeyVals({\n    globalMap,\n    inputs,\n    outputs,\n  });\n  const globalBuffer = (0,_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.keyValsToBuffer)(globalKeyVals);\n  const keyValsOrEmptyToBuffer = keyVals =>\n    keyVals.length === 0\n      ? [Uint8Array.from([0])]\n      : keyVals.map(_converter_tools_js__WEBPACK_IMPORTED_MODULE_1__.keyValsToBuffer);\n  const inputBuffers = keyValsOrEmptyToBuffer(inputKeyVals);\n  const outputBuffers = keyValsOrEmptyToBuffer(outputKeyVals);\n  const header = new Uint8Array(5);\n  header.set([0x70, 0x73, 0x62, 0x74, 0xff], 0);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat(\n    [header, globalBuffer].concat(inputBuffers, outputBuffers),\n  );\n}\nconst sortKeyVals = (a, b) => {\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.compare(a.key, b.key);\n};\nfunction keyValsFromMap(keyValMap, converterFactory) {\n  const keyHexSet = new Set();\n  const keyVals = Object.entries(keyValMap).reduce((result, [key, value]) => {\n    if (key === 'unknownKeyVals') return result;\n    // We are checking for undefined anyways. So ignore TS error\n    // @ts-ignore\n    const converter = converterFactory[key];\n    if (converter === undefined) return result;\n    const encodedKeyVals = (Array.isArray(value) ? value : [value]).map(\n      converter.encode,\n    );\n    const keyHexes = encodedKeyVals.map(kv => uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.toHex(kv.key));\n    keyHexes.forEach(hex => {\n      if (keyHexSet.has(hex))\n        throw new Error('Serialize Error: Duplicate key: ' + hex);\n      keyHexSet.add(hex);\n    });\n    return result.concat(encodedKeyVals);\n  }, []);\n  // Get other keyVals that have not yet been gotten\n  const otherKeyVals = keyValMap.unknownKeyVals\n    ? keyValMap.unknownKeyVals.filter(keyVal => {\n        return !keyHexSet.has(uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.toHex(keyVal.key));\n      })\n    : [];\n  return keyVals.concat(otherKeyVals).sort(sortKeyVals);\n}\nfunction psbtToKeyVals({ globalMap, inputs, outputs }) {\n  // First parse the global keyVals\n  // Get any extra keyvals to pass along\n  return {\n    globalKeyVals: keyValsFromMap(globalMap, _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.globals),\n    inputKeyVals: inputs.map(i => keyValsFromMap(i, _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.inputs)),\n    outputKeyVals: outputs.map(o => keyValsFromMap(o, _converter_index_js__WEBPACK_IMPORTED_MODULE_0__.outputs)),\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3BhcnNlci90b0J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNPO0FBQ2Q7QUFDbkMsd0JBQXdCLDRCQUE0QjtBQUMzRCxVQUFVLDZDQUE2QztBQUN2RDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsdUJBQXVCLG9FQUFlO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnRUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0RBQVk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHFEQUFhO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxtREFBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbURBQVc7QUFDekMsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNPLHlCQUF5Qiw0QkFBNEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHdEQUFlO0FBQzVELG9EQUFvRCx1REFBYztBQUNsRSxzREFBc0Qsd0RBQWU7QUFDckU7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvcGFyc2VyL3RvQnVmZmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvbnZlcnQgZnJvbSAnLi4vY29udmVydGVyL2luZGV4LmpzJztcbmltcG9ydCB7IGtleVZhbHNUb0J1ZmZlciB9IGZyb20gJy4uL2NvbnZlcnRlci90b29scy5qcyc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBwc2J0VG9CdWZmZXIoeyBnbG9iYWxNYXAsIGlucHV0cywgb3V0cHV0cyB9KSB7XG4gIGNvbnN0IHsgZ2xvYmFsS2V5VmFscywgaW5wdXRLZXlWYWxzLCBvdXRwdXRLZXlWYWxzIH0gPSBwc2J0VG9LZXlWYWxzKHtcbiAgICBnbG9iYWxNYXAsXG4gICAgaW5wdXRzLFxuICAgIG91dHB1dHMsXG4gIH0pO1xuICBjb25zdCBnbG9iYWxCdWZmZXIgPSBrZXlWYWxzVG9CdWZmZXIoZ2xvYmFsS2V5VmFscyk7XG4gIGNvbnN0IGtleVZhbHNPckVtcHR5VG9CdWZmZXIgPSBrZXlWYWxzID0+XG4gICAga2V5VmFscy5sZW5ndGggPT09IDBcbiAgICAgID8gW1VpbnQ4QXJyYXkuZnJvbShbMF0pXVxuICAgICAgOiBrZXlWYWxzLm1hcChrZXlWYWxzVG9CdWZmZXIpO1xuICBjb25zdCBpbnB1dEJ1ZmZlcnMgPSBrZXlWYWxzT3JFbXB0eVRvQnVmZmVyKGlucHV0S2V5VmFscyk7XG4gIGNvbnN0IG91dHB1dEJ1ZmZlcnMgPSBrZXlWYWxzT3JFbXB0eVRvQnVmZmVyKG91dHB1dEtleVZhbHMpO1xuICBjb25zdCBoZWFkZXIgPSBuZXcgVWludDhBcnJheSg1KTtcbiAgaGVhZGVyLnNldChbMHg3MCwgMHg3MywgMHg2MiwgMHg3NCwgMHhmZl0sIDApO1xuICByZXR1cm4gdG9vbHMuY29uY2F0KFxuICAgIFtoZWFkZXIsIGdsb2JhbEJ1ZmZlcl0uY29uY2F0KGlucHV0QnVmZmVycywgb3V0cHV0QnVmZmVycyksXG4gICk7XG59XG5jb25zdCBzb3J0S2V5VmFscyA9IChhLCBiKSA9PiB7XG4gIHJldHVybiB0b29scy5jb21wYXJlKGEua2V5LCBiLmtleSk7XG59O1xuZnVuY3Rpb24ga2V5VmFsc0Zyb21NYXAoa2V5VmFsTWFwLCBjb252ZXJ0ZXJGYWN0b3J5KSB7XG4gIGNvbnN0IGtleUhleFNldCA9IG5ldyBTZXQoKTtcbiAgY29uc3Qga2V5VmFscyA9IE9iamVjdC5lbnRyaWVzKGtleVZhbE1hcCkucmVkdWNlKChyZXN1bHQsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgIGlmIChrZXkgPT09ICd1bmtub3duS2V5VmFscycpIHJldHVybiByZXN1bHQ7XG4gICAgLy8gV2UgYXJlIGNoZWNraW5nIGZvciB1bmRlZmluZWQgYW55d2F5cy4gU28gaWdub3JlIFRTIGVycm9yXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGNvbnN0IGNvbnZlcnRlciA9IGNvbnZlcnRlckZhY3Rvcnlba2V5XTtcbiAgICBpZiAoY29udmVydGVyID09PSB1bmRlZmluZWQpIHJldHVybiByZXN1bHQ7XG4gICAgY29uc3QgZW5jb2RlZEtleVZhbHMgPSAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFt2YWx1ZV0pLm1hcChcbiAgICAgIGNvbnZlcnRlci5lbmNvZGUsXG4gICAgKTtcbiAgICBjb25zdCBrZXlIZXhlcyA9IGVuY29kZWRLZXlWYWxzLm1hcChrdiA9PiB0b29scy50b0hleChrdi5rZXkpKTtcbiAgICBrZXlIZXhlcy5mb3JFYWNoKGhleCA9PiB7XG4gICAgICBpZiAoa2V5SGV4U2V0LmhhcyhoZXgpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlcmlhbGl6ZSBFcnJvcjogRHVwbGljYXRlIGtleTogJyArIGhleCk7XG4gICAgICBrZXlIZXhTZXQuYWRkKGhleCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdC5jb25jYXQoZW5jb2RlZEtleVZhbHMpO1xuICB9LCBbXSk7XG4gIC8vIEdldCBvdGhlciBrZXlWYWxzIHRoYXQgaGF2ZSBub3QgeWV0IGJlZW4gZ290dGVuXG4gIGNvbnN0IG90aGVyS2V5VmFscyA9IGtleVZhbE1hcC51bmtub3duS2V5VmFsc1xuICAgID8ga2V5VmFsTWFwLnVua25vd25LZXlWYWxzLmZpbHRlcihrZXlWYWwgPT4ge1xuICAgICAgICByZXR1cm4gIWtleUhleFNldC5oYXModG9vbHMudG9IZXgoa2V5VmFsLmtleSkpO1xuICAgICAgfSlcbiAgICA6IFtdO1xuICByZXR1cm4ga2V5VmFscy5jb25jYXQob3RoZXJLZXlWYWxzKS5zb3J0KHNvcnRLZXlWYWxzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwc2J0VG9LZXlWYWxzKHsgZ2xvYmFsTWFwLCBpbnB1dHMsIG91dHB1dHMgfSkge1xuICAvLyBGaXJzdCBwYXJzZSB0aGUgZ2xvYmFsIGtleVZhbHNcbiAgLy8gR2V0IGFueSBleHRyYSBrZXl2YWxzIHRvIHBhc3MgYWxvbmdcbiAgcmV0dXJuIHtcbiAgICBnbG9iYWxLZXlWYWxzOiBrZXlWYWxzRnJvbU1hcChnbG9iYWxNYXAsIGNvbnZlcnQuZ2xvYmFscyksXG4gICAgaW5wdXRLZXlWYWxzOiBpbnB1dHMubWFwKGkgPT4ga2V5VmFsc0Zyb21NYXAoaSwgY29udmVydC5pbnB1dHMpKSxcbiAgICBvdXRwdXRLZXlWYWxzOiBvdXRwdXRzLm1hcChvID0+IGtleVZhbHNGcm9tTWFwKG8sIGNvbnZlcnQub3V0cHV0cykpLFxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/toBuffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/psbt.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/psbt.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Psbt: () => (/* binding */ Psbt),\n/* harmony export */   checkForInput: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForInput),\n/* harmony export */   checkForOutput: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForOutput)\n/* harmony export */ });\n/* harmony import */ var _combiner_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combiner/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/combiner/index.js\");\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/parser/index.js\");\n/* harmony import */ var _typeFields_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeFields.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/utils.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\nclass Psbt {\n  constructor(tx) {\n    this.inputs = [];\n    this.outputs = [];\n    this.globalMap = {\n      unsignedTx: tx,\n    };\n  }\n  static fromBase64(data, txFromBuffer) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromBase64(data);\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromHex(data, txFromBuffer) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(data);\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromBuffer(buffer, txFromBuffer) {\n    const results = (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_1__.psbtFromBuffer)(buffer, txFromBuffer);\n    const psbt = new this(results.globalMap.unsignedTx);\n    Object.assign(psbt, results);\n    return psbt;\n  }\n  toBase64() {\n    const buffer = this.toBuffer();\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toBase64(buffer);\n  }\n  toHex() {\n    const buffer = this.toBuffer();\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex(buffer);\n  }\n  toBuffer() {\n    return (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_1__.psbtToBuffer)(this);\n  }\n  updateGlobal(updateData) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.updateGlobal)(updateData, this.globalMap);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    const input = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForInput)(this.inputs, inputIndex);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.updateInput)(updateData, input);\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const output = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForOutput)(this.outputs, outputIndex);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.updateOutput)(updateData, output);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkHasKey)(\n      keyVal,\n      this.globalMap.unknownKeyVals,\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.getEnumLength)(_typeFields_js__WEBPACK_IMPORTED_MODULE_2__.GlobalTypes),\n    );\n    if (!this.globalMap.unknownKeyVals) this.globalMap.unknownKeyVals = [];\n    this.globalMap.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    const input = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForInput)(this.inputs, inputIndex);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkHasKey)(keyVal, input.unknownKeyVals, (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.getEnumLength)(_typeFields_js__WEBPACK_IMPORTED_MODULE_2__.InputTypes));\n    if (!input.unknownKeyVals) input.unknownKeyVals = [];\n    input.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    const output = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForOutput)(this.outputs, outputIndex);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkHasKey)(keyVal, output.unknownKeyVals, (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.getEnumLength)(_typeFields_js__WEBPACK_IMPORTED_MODULE_2__.OutputTypes));\n    if (!output.unknownKeyVals) output.unknownKeyVals = [];\n    output.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addInput(inputData) {\n    this.globalMap.unsignedTx.addInput(inputData);\n    this.inputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = inputData.unknownKeyVals || [];\n    const inputIndex = this.inputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(inputIndex, keyVal),\n    );\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.addInputAttributes)(this.inputs, inputData);\n    return this;\n  }\n  addOutput(outputData) {\n    this.globalMap.unsignedTx.addOutput(outputData);\n    this.outputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = outputData.unknownKeyVals || [];\n    const outputIndex = this.outputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToOutput(outputIndex, keyVal),\n    );\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.addOutputAttributes)(this.outputs, outputData);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    const input = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.checkForInput)(this.inputs, inputIndex);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.inputCheckUncleanFinalized)(inputIndex, input);\n    for (const key of Object.keys(input)) {\n      if (\n        ![\n          'witnessUtxo',\n          'nonWitnessUtxo',\n          'finalScriptSig',\n          'finalScriptWitness',\n          'unknownKeyVals',\n        ].includes(key)\n      ) {\n        // @ts-ignore\n        delete input[key];\n      }\n    }\n    return this;\n  }\n  combine(...those) {\n    // Combine this with those.\n    // Return self for chaining.\n    const result = (0,_combiner_index_js__WEBPACK_IMPORTED_MODULE_0__.combine)([this].concat(those));\n    Object.assign(this, result);\n    return this;\n  }\n  getTransaction() {\n    return this.globalMap.unsignedTx.toBuffer();\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3BzYnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEM7QUFDbUI7QUFDTTtBQVluRDtBQUNzQjtBQUNuQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0RBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0VBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzREFBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFXO0FBQ3RCO0FBQ0E7QUFDQSxXQUFXLDhEQUFZO0FBQ3ZCO0FBQ0E7QUFDQSxJQUFJLHVEQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3REFBYTtBQUMvQixJQUFJLHNEQUFXO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlEQUFjO0FBQ2pDLElBQUksdURBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBVztBQUNmO0FBQ0E7QUFDQSxNQUFNLHdEQUFhLENBQUMsdURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFhO0FBQy9CLElBQUksc0RBQVcsK0JBQStCLHdEQUFhLENBQUMsc0RBQVU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix5REFBYztBQUNqQyxJQUFJLHNEQUFXLGdDQUFnQyx3REFBYSxDQUFDLHVEQUFXO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkRBQWtCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4REFBbUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFhO0FBQy9CLElBQUkscUVBQTBCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJEQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzJEIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYmlwMTc0QDMuMC4wLXJjLjEvbm9kZV9tb2R1bGVzL2JpcDE3NC9zcmMvZXNtL2xpYi9wc2J0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbWJpbmUgfSBmcm9tICcuL2NvbWJpbmVyL2luZGV4LmpzJztcbmltcG9ydCB7IHBzYnRGcm9tQnVmZmVyLCBwc2J0VG9CdWZmZXIgfSBmcm9tICcuL3BhcnNlci9pbmRleC5qcyc7XG5pbXBvcnQgeyBHbG9iYWxUeXBlcywgSW5wdXRUeXBlcywgT3V0cHV0VHlwZXMgfSBmcm9tICcuL3R5cGVGaWVsZHMuanMnO1xuaW1wb3J0IHtcbiAgYWRkSW5wdXRBdHRyaWJ1dGVzLFxuICBhZGRPdXRwdXRBdHRyaWJ1dGVzLFxuICBjaGVja0ZvcklucHV0LFxuICBjaGVja0Zvck91dHB1dCxcbiAgY2hlY2tIYXNLZXksXG4gIGdldEVudW1MZW5ndGgsXG4gIGlucHV0Q2hlY2tVbmNsZWFuRmluYWxpemVkLFxuICB1cGRhdGVHbG9iYWwsXG4gIHVwZGF0ZUlucHV0LFxuICB1cGRhdGVPdXRwdXQsXG59IGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5leHBvcnQgY2xhc3MgUHNidCB7XG4gIGNvbnN0cnVjdG9yKHR4KSB7XG4gICAgdGhpcy5pbnB1dHMgPSBbXTtcbiAgICB0aGlzLm91dHB1dHMgPSBbXTtcbiAgICB0aGlzLmdsb2JhbE1hcCA9IHtcbiAgICAgIHVuc2lnbmVkVHg6IHR4LFxuICAgIH07XG4gIH1cbiAgc3RhdGljIGZyb21CYXNlNjQoZGF0YSwgdHhGcm9tQnVmZmVyKSB7XG4gICAgY29uc3QgYnVmZmVyID0gdG9vbHMuZnJvbUJhc2U2NChkYXRhKTtcbiAgICByZXR1cm4gdGhpcy5mcm9tQnVmZmVyKGJ1ZmZlciwgdHhGcm9tQnVmZmVyKTtcbiAgfVxuICBzdGF0aWMgZnJvbUhleChkYXRhLCB0eEZyb21CdWZmZXIpIHtcbiAgICBjb25zdCBidWZmZXIgPSB0b29scy5mcm9tSGV4KGRhdGEpO1xuICAgIHJldHVybiB0aGlzLmZyb21CdWZmZXIoYnVmZmVyLCB0eEZyb21CdWZmZXIpO1xuICB9XG4gIHN0YXRpYyBmcm9tQnVmZmVyKGJ1ZmZlciwgdHhGcm9tQnVmZmVyKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IHBzYnRGcm9tQnVmZmVyKGJ1ZmZlciwgdHhGcm9tQnVmZmVyKTtcbiAgICBjb25zdCBwc2J0ID0gbmV3IHRoaXMocmVzdWx0cy5nbG9iYWxNYXAudW5zaWduZWRUeCk7XG4gICAgT2JqZWN0LmFzc2lnbihwc2J0LCByZXN1bHRzKTtcbiAgICByZXR1cm4gcHNidDtcbiAgfVxuICB0b0Jhc2U2NCgpIHtcbiAgICBjb25zdCBidWZmZXIgPSB0aGlzLnRvQnVmZmVyKCk7XG4gICAgcmV0dXJuIHRvb2xzLnRvQmFzZTY0KGJ1ZmZlcik7XG4gIH1cbiAgdG9IZXgoKSB7XG4gICAgY29uc3QgYnVmZmVyID0gdGhpcy50b0J1ZmZlcigpO1xuICAgIHJldHVybiB0b29scy50b0hleChidWZmZXIpO1xuICB9XG4gIHRvQnVmZmVyKCkge1xuICAgIHJldHVybiBwc2J0VG9CdWZmZXIodGhpcyk7XG4gIH1cbiAgdXBkYXRlR2xvYmFsKHVwZGF0ZURhdGEpIHtcbiAgICB1cGRhdGVHbG9iYWwodXBkYXRlRGF0YSwgdGhpcy5nbG9iYWxNYXApO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHVwZGF0ZUlucHV0KGlucHV0SW5kZXgsIHVwZGF0ZURhdGEpIHtcbiAgICBjb25zdCBpbnB1dCA9IGNoZWNrRm9ySW5wdXQodGhpcy5pbnB1dHMsIGlucHV0SW5kZXgpO1xuICAgIHVwZGF0ZUlucHV0KHVwZGF0ZURhdGEsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICB1cGRhdGVPdXRwdXQob3V0cHV0SW5kZXgsIHVwZGF0ZURhdGEpIHtcbiAgICBjb25zdCBvdXRwdXQgPSBjaGVja0Zvck91dHB1dCh0aGlzLm91dHB1dHMsIG91dHB1dEluZGV4KTtcbiAgICB1cGRhdGVPdXRwdXQodXBkYXRlRGF0YSwgb3V0cHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBhZGRVbmtub3duS2V5VmFsVG9HbG9iYWwoa2V5VmFsKSB7XG4gICAgY2hlY2tIYXNLZXkoXG4gICAgICBrZXlWYWwsXG4gICAgICB0aGlzLmdsb2JhbE1hcC51bmtub3duS2V5VmFscyxcbiAgICAgIGdldEVudW1MZW5ndGgoR2xvYmFsVHlwZXMpLFxuICAgICk7XG4gICAgaWYgKCF0aGlzLmdsb2JhbE1hcC51bmtub3duS2V5VmFscykgdGhpcy5nbG9iYWxNYXAudW5rbm93bktleVZhbHMgPSBbXTtcbiAgICB0aGlzLmdsb2JhbE1hcC51bmtub3duS2V5VmFscy5wdXNoKGtleVZhbCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgYWRkVW5rbm93bktleVZhbFRvSW5wdXQoaW5wdXRJbmRleCwga2V5VmFsKSB7XG4gICAgY29uc3QgaW5wdXQgPSBjaGVja0ZvcklucHV0KHRoaXMuaW5wdXRzLCBpbnB1dEluZGV4KTtcbiAgICBjaGVja0hhc0tleShrZXlWYWwsIGlucHV0LnVua25vd25LZXlWYWxzLCBnZXRFbnVtTGVuZ3RoKElucHV0VHlwZXMpKTtcbiAgICBpZiAoIWlucHV0LnVua25vd25LZXlWYWxzKSBpbnB1dC51bmtub3duS2V5VmFscyA9IFtdO1xuICAgIGlucHV0LnVua25vd25LZXlWYWxzLnB1c2goa2V5VmFsKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBhZGRVbmtub3duS2V5VmFsVG9PdXRwdXQob3V0cHV0SW5kZXgsIGtleVZhbCkge1xuICAgIGNvbnN0IG91dHB1dCA9IGNoZWNrRm9yT3V0cHV0KHRoaXMub3V0cHV0cywgb3V0cHV0SW5kZXgpO1xuICAgIGNoZWNrSGFzS2V5KGtleVZhbCwgb3V0cHV0LnVua25vd25LZXlWYWxzLCBnZXRFbnVtTGVuZ3RoKE91dHB1dFR5cGVzKSk7XG4gICAgaWYgKCFvdXRwdXQudW5rbm93bktleVZhbHMpIG91dHB1dC51bmtub3duS2V5VmFscyA9IFtdO1xuICAgIG91dHB1dC51bmtub3duS2V5VmFscy5wdXNoKGtleVZhbCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgYWRkSW5wdXQoaW5wdXREYXRhKSB7XG4gICAgdGhpcy5nbG9iYWxNYXAudW5zaWduZWRUeC5hZGRJbnB1dChpbnB1dERhdGEpO1xuICAgIHRoaXMuaW5wdXRzLnB1c2goe1xuICAgICAgdW5rbm93bktleVZhbHM6IFtdLFxuICAgIH0pO1xuICAgIGNvbnN0IGFkZEtleVZhbHMgPSBpbnB1dERhdGEudW5rbm93bktleVZhbHMgfHwgW107XG4gICAgY29uc3QgaW5wdXRJbmRleCA9IHRoaXMuaW5wdXRzLmxlbmd0aCAtIDE7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFkZEtleVZhbHMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd25LZXlWYWxzIG11c3QgYmUgYW4gQXJyYXknKTtcbiAgICB9XG4gICAgYWRkS2V5VmFscy5mb3JFYWNoKGtleVZhbCA9PlxuICAgICAgdGhpcy5hZGRVbmtub3duS2V5VmFsVG9JbnB1dChpbnB1dEluZGV4LCBrZXlWYWwpLFxuICAgICk7XG4gICAgYWRkSW5wdXRBdHRyaWJ1dGVzKHRoaXMuaW5wdXRzLCBpbnB1dERhdGEpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGFkZE91dHB1dChvdXRwdXREYXRhKSB7XG4gICAgdGhpcy5nbG9iYWxNYXAudW5zaWduZWRUeC5hZGRPdXRwdXQob3V0cHV0RGF0YSk7XG4gICAgdGhpcy5vdXRwdXRzLnB1c2goe1xuICAgICAgdW5rbm93bktleVZhbHM6IFtdLFxuICAgIH0pO1xuICAgIGNvbnN0IGFkZEtleVZhbHMgPSBvdXRwdXREYXRhLnVua25vd25LZXlWYWxzIHx8IFtdO1xuICAgIGNvbnN0IG91dHB1dEluZGV4ID0gdGhpcy5vdXRwdXRzLmxlbmd0aCAtIDE7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFkZEtleVZhbHMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vua25vd25LZXlWYWxzIG11c3QgYmUgYW4gQXJyYXknKTtcbiAgICB9XG4gICAgYWRkS2V5VmFscy5mb3JFYWNoKGtleVZhbCA9PlxuICAgICAgdGhpcy5hZGRVbmtub3duS2V5VmFsVG9PdXRwdXQob3V0cHV0SW5kZXgsIGtleVZhbCksXG4gICAgKTtcbiAgICBhZGRPdXRwdXRBdHRyaWJ1dGVzKHRoaXMub3V0cHV0cywgb3V0cHV0RGF0YSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgY2xlYXJGaW5hbGl6ZWRJbnB1dChpbnB1dEluZGV4KSB7XG4gICAgY29uc3QgaW5wdXQgPSBjaGVja0ZvcklucHV0KHRoaXMuaW5wdXRzLCBpbnB1dEluZGV4KTtcbiAgICBpbnB1dENoZWNrVW5jbGVhbkZpbmFsaXplZChpbnB1dEluZGV4LCBpbnB1dCk7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoaW5wdXQpKSB7XG4gICAgICBpZiAoXG4gICAgICAgICFbXG4gICAgICAgICAgJ3dpdG5lc3NVdHhvJyxcbiAgICAgICAgICAnbm9uV2l0bmVzc1V0eG8nLFxuICAgICAgICAgICdmaW5hbFNjcmlwdFNpZycsXG4gICAgICAgICAgJ2ZpbmFsU2NyaXB0V2l0bmVzcycsXG4gICAgICAgICAgJ3Vua25vd25LZXlWYWxzJyxcbiAgICAgICAgXS5pbmNsdWRlcyhrZXkpXG4gICAgICApIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBkZWxldGUgaW5wdXRba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgY29tYmluZSguLi50aG9zZSkge1xuICAgIC8vIENvbWJpbmUgdGhpcyB3aXRoIHRob3NlLlxuICAgIC8vIFJldHVybiBzZWxmIGZvciBjaGFpbmluZy5cbiAgICBjb25zdCByZXN1bHQgPSBjb21iaW5lKFt0aGlzXS5jb25jYXQodGhvc2UpKTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIHJlc3VsdCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgZ2V0VHJhbnNhY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2xvYmFsTWFwLnVuc2lnbmVkVHgudG9CdWZmZXIoKTtcbiAgfVxufVxuZXhwb3J0IHsgY2hlY2tGb3JJbnB1dCwgY2hlY2tGb3JPdXRwdXQgfSBmcm9tICcuL3V0aWxzLmpzJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/psbt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLOBAL_TYPE_NAMES: () => (/* binding */ GLOBAL_TYPE_NAMES),\n/* harmony export */   GlobalTypes: () => (/* binding */ GlobalTypes),\n/* harmony export */   INPUT_TYPE_NAMES: () => (/* binding */ INPUT_TYPE_NAMES),\n/* harmony export */   InputTypes: () => (/* binding */ InputTypes),\n/* harmony export */   OUTPUT_TYPE_NAMES: () => (/* binding */ OUTPUT_TYPE_NAMES),\n/* harmony export */   OutputTypes: () => (/* binding */ OutputTypes)\n/* harmony export */ });\nvar GlobalTypes;\n(function(GlobalTypes) {\n  GlobalTypes[(GlobalTypes['UNSIGNED_TX'] = 0)] = 'UNSIGNED_TX';\n  GlobalTypes[(GlobalTypes['GLOBAL_XPUB'] = 1)] = 'GLOBAL_XPUB';\n})(GlobalTypes || (GlobalTypes = {}));\nconst GLOBAL_TYPE_NAMES = ['unsignedTx', 'globalXpub'];\nvar InputTypes;\n(function(InputTypes) {\n  InputTypes[(InputTypes['NON_WITNESS_UTXO'] = 0)] = 'NON_WITNESS_UTXO';\n  InputTypes[(InputTypes['WITNESS_UTXO'] = 1)] = 'WITNESS_UTXO';\n  InputTypes[(InputTypes['PARTIAL_SIG'] = 2)] = 'PARTIAL_SIG';\n  InputTypes[(InputTypes['SIGHASH_TYPE'] = 3)] = 'SIGHASH_TYPE';\n  InputTypes[(InputTypes['REDEEM_SCRIPT'] = 4)] = 'REDEEM_SCRIPT';\n  InputTypes[(InputTypes['WITNESS_SCRIPT'] = 5)] = 'WITNESS_SCRIPT';\n  InputTypes[(InputTypes['BIP32_DERIVATION'] = 6)] = 'BIP32_DERIVATION';\n  InputTypes[(InputTypes['FINAL_SCRIPTSIG'] = 7)] = 'FINAL_SCRIPTSIG';\n  InputTypes[(InputTypes['FINAL_SCRIPTWITNESS'] = 8)] = 'FINAL_SCRIPTWITNESS';\n  InputTypes[(InputTypes['POR_COMMITMENT'] = 9)] = 'POR_COMMITMENT';\n  InputTypes[(InputTypes['TAP_KEY_SIG'] = 19)] = 'TAP_KEY_SIG';\n  InputTypes[(InputTypes['TAP_SCRIPT_SIG'] = 20)] = 'TAP_SCRIPT_SIG';\n  InputTypes[(InputTypes['TAP_LEAF_SCRIPT'] = 21)] = 'TAP_LEAF_SCRIPT';\n  InputTypes[(InputTypes['TAP_BIP32_DERIVATION'] = 22)] =\n    'TAP_BIP32_DERIVATION';\n  InputTypes[(InputTypes['TAP_INTERNAL_KEY'] = 23)] = 'TAP_INTERNAL_KEY';\n  InputTypes[(InputTypes['TAP_MERKLE_ROOT'] = 24)] = 'TAP_MERKLE_ROOT';\n})(InputTypes || (InputTypes = {}));\nconst INPUT_TYPE_NAMES = [\n  'nonWitnessUtxo',\n  'witnessUtxo',\n  'partialSig',\n  'sighashType',\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'finalScriptSig',\n  'finalScriptWitness',\n  'porCommitment',\n  'tapKeySig',\n  'tapScriptSig',\n  'tapLeafScript',\n  'tapBip32Derivation',\n  'tapInternalKey',\n  'tapMerkleRoot',\n];\nvar OutputTypes;\n(function(OutputTypes) {\n  OutputTypes[(OutputTypes['REDEEM_SCRIPT'] = 0)] = 'REDEEM_SCRIPT';\n  OutputTypes[(OutputTypes['WITNESS_SCRIPT'] = 1)] = 'WITNESS_SCRIPT';\n  OutputTypes[(OutputTypes['BIP32_DERIVATION'] = 2)] = 'BIP32_DERIVATION';\n  OutputTypes[(OutputTypes['TAP_INTERNAL_KEY'] = 5)] = 'TAP_INTERNAL_KEY';\n  OutputTypes[(OutputTypes['TAP_TREE'] = 6)] = 'TAP_TREE';\n  OutputTypes[(OutputTypes['TAP_BIP32_DERIVATION'] = 7)] =\n    'TAP_BIP32_DERIVATION';\n})(OutputTypes || (OutputTypes = {}));\nconst OUTPUT_TYPE_NAMES = [\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'tapInternalKey',\n  'tapTree',\n  'tapBip32Derivation',\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3R5cGVGaWVsZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQztBQUM1QjtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDMUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0M7QUFDNUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvdHlwZUZpZWxkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIEdsb2JhbFR5cGVzO1xuKGZ1bmN0aW9uKEdsb2JhbFR5cGVzKSB7XG4gIEdsb2JhbFR5cGVzWyhHbG9iYWxUeXBlc1snVU5TSUdORURfVFgnXSA9IDApXSA9ICdVTlNJR05FRF9UWCc7XG4gIEdsb2JhbFR5cGVzWyhHbG9iYWxUeXBlc1snR0xPQkFMX1hQVUInXSA9IDEpXSA9ICdHTE9CQUxfWFBVQic7XG59KShHbG9iYWxUeXBlcyB8fCAoR2xvYmFsVHlwZXMgPSB7fSkpO1xuZXhwb3J0IGNvbnN0IEdMT0JBTF9UWVBFX05BTUVTID0gWyd1bnNpZ25lZFR4JywgJ2dsb2JhbFhwdWInXTtcbmV4cG9ydCB2YXIgSW5wdXRUeXBlcztcbihmdW5jdGlvbihJbnB1dFR5cGVzKSB7XG4gIElucHV0VHlwZXNbKElucHV0VHlwZXNbJ05PTl9XSVRORVNTX1VUWE8nXSA9IDApXSA9ICdOT05fV0lUTkVTU19VVFhPJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snV0lUTkVTU19VVFhPJ10gPSAxKV0gPSAnV0lUTkVTU19VVFhPJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snUEFSVElBTF9TSUcnXSA9IDIpXSA9ICdQQVJUSUFMX1NJRyc7XG4gIElucHV0VHlwZXNbKElucHV0VHlwZXNbJ1NJR0hBU0hfVFlQRSddID0gMyldID0gJ1NJR0hBU0hfVFlQRSc7XG4gIElucHV0VHlwZXNbKElucHV0VHlwZXNbJ1JFREVFTV9TQ1JJUFQnXSA9IDQpXSA9ICdSRURFRU1fU0NSSVBUJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snV0lUTkVTU19TQ1JJUFQnXSA9IDUpXSA9ICdXSVRORVNTX1NDUklQVCc7XG4gIElucHV0VHlwZXNbKElucHV0VHlwZXNbJ0JJUDMyX0RFUklWQVRJT04nXSA9IDYpXSA9ICdCSVAzMl9ERVJJVkFUSU9OJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snRklOQUxfU0NSSVBUU0lHJ10gPSA3KV0gPSAnRklOQUxfU0NSSVBUU0lHJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snRklOQUxfU0NSSVBUV0lUTkVTUyddID0gOCldID0gJ0ZJTkFMX1NDUklQVFdJVE5FU1MnO1xuICBJbnB1dFR5cGVzWyhJbnB1dFR5cGVzWydQT1JfQ09NTUlUTUVOVCddID0gOSldID0gJ1BPUl9DT01NSVRNRU5UJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snVEFQX0tFWV9TSUcnXSA9IDE5KV0gPSAnVEFQX0tFWV9TSUcnO1xuICBJbnB1dFR5cGVzWyhJbnB1dFR5cGVzWydUQVBfU0NSSVBUX1NJRyddID0gMjApXSA9ICdUQVBfU0NSSVBUX1NJRyc7XG4gIElucHV0VHlwZXNbKElucHV0VHlwZXNbJ1RBUF9MRUFGX1NDUklQVCddID0gMjEpXSA9ICdUQVBfTEVBRl9TQ1JJUFQnO1xuICBJbnB1dFR5cGVzWyhJbnB1dFR5cGVzWydUQVBfQklQMzJfREVSSVZBVElPTiddID0gMjIpXSA9XG4gICAgJ1RBUF9CSVAzMl9ERVJJVkFUSU9OJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snVEFQX0lOVEVSTkFMX0tFWSddID0gMjMpXSA9ICdUQVBfSU5URVJOQUxfS0VZJztcbiAgSW5wdXRUeXBlc1soSW5wdXRUeXBlc1snVEFQX01FUktMRV9ST09UJ10gPSAyNCldID0gJ1RBUF9NRVJLTEVfUk9PVCc7XG59KShJbnB1dFR5cGVzIHx8IChJbnB1dFR5cGVzID0ge30pKTtcbmV4cG9ydCBjb25zdCBJTlBVVF9UWVBFX05BTUVTID0gW1xuICAnbm9uV2l0bmVzc1V0eG8nLFxuICAnd2l0bmVzc1V0eG8nLFxuICAncGFydGlhbFNpZycsXG4gICdzaWdoYXNoVHlwZScsXG4gICdyZWRlZW1TY3JpcHQnLFxuICAnd2l0bmVzc1NjcmlwdCcsXG4gICdiaXAzMkRlcml2YXRpb24nLFxuICAnZmluYWxTY3JpcHRTaWcnLFxuICAnZmluYWxTY3JpcHRXaXRuZXNzJyxcbiAgJ3BvckNvbW1pdG1lbnQnLFxuICAndGFwS2V5U2lnJyxcbiAgJ3RhcFNjcmlwdFNpZycsXG4gICd0YXBMZWFmU2NyaXB0JyxcbiAgJ3RhcEJpcDMyRGVyaXZhdGlvbicsXG4gICd0YXBJbnRlcm5hbEtleScsXG4gICd0YXBNZXJrbGVSb290Jyxcbl07XG5leHBvcnQgdmFyIE91dHB1dFR5cGVzO1xuKGZ1bmN0aW9uKE91dHB1dFR5cGVzKSB7XG4gIE91dHB1dFR5cGVzWyhPdXRwdXRUeXBlc1snUkVERUVNX1NDUklQVCddID0gMCldID0gJ1JFREVFTV9TQ1JJUFQnO1xuICBPdXRwdXRUeXBlc1soT3V0cHV0VHlwZXNbJ1dJVE5FU1NfU0NSSVBUJ10gPSAxKV0gPSAnV0lUTkVTU19TQ1JJUFQnO1xuICBPdXRwdXRUeXBlc1soT3V0cHV0VHlwZXNbJ0JJUDMyX0RFUklWQVRJT04nXSA9IDIpXSA9ICdCSVAzMl9ERVJJVkFUSU9OJztcbiAgT3V0cHV0VHlwZXNbKE91dHB1dFR5cGVzWydUQVBfSU5URVJOQUxfS0VZJ10gPSA1KV0gPSAnVEFQX0lOVEVSTkFMX0tFWSc7XG4gIE91dHB1dFR5cGVzWyhPdXRwdXRUeXBlc1snVEFQX1RSRUUnXSA9IDYpXSA9ICdUQVBfVFJFRSc7XG4gIE91dHB1dFR5cGVzWyhPdXRwdXRUeXBlc1snVEFQX0JJUDMyX0RFUklWQVRJT04nXSA9IDcpXSA9XG4gICAgJ1RBUF9CSVAzMl9ERVJJVkFUSU9OJztcbn0pKE91dHB1dFR5cGVzIHx8IChPdXRwdXRUeXBlcyA9IHt9KSk7XG5leHBvcnQgY29uc3QgT1VUUFVUX1RZUEVfTkFNRVMgPSBbXG4gICdyZWRlZW1TY3JpcHQnLFxuICAnd2l0bmVzc1NjcmlwdCcsXG4gICdiaXAzMkRlcml2YXRpb24nLFxuICAndGFwSW50ZXJuYWxLZXknLFxuICAndGFwVHJlZScsXG4gICd0YXBCaXAzMkRlcml2YXRpb24nLFxuXTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/typeFields.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/utils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addInputAttributes: () => (/* binding */ addInputAttributes),\n/* harmony export */   addOutputAttributes: () => (/* binding */ addOutputAttributes),\n/* harmony export */   checkForInput: () => (/* binding */ checkForInput),\n/* harmony export */   checkForOutput: () => (/* binding */ checkForOutput),\n/* harmony export */   checkHasKey: () => (/* binding */ checkHasKey),\n/* harmony export */   defaultLocktimeSetter: () => (/* binding */ defaultLocktimeSetter),\n/* harmony export */   defaultVersionSetter: () => (/* binding */ defaultVersionSetter),\n/* harmony export */   getEnumLength: () => (/* binding */ getEnumLength),\n/* harmony export */   inputCheckUncleanFinalized: () => (/* binding */ inputCheckUncleanFinalized),\n/* harmony export */   updateGlobal: () => (/* binding */ updateGlobal),\n/* harmony export */   updateInput: () => (/* binding */ updateInput),\n/* harmony export */   updateOutput: () => (/* binding */ updateOutput)\n/* harmony export */ });\n/* harmony import */ var _converter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converter/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/converter/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nfunction checkForInput(inputs, inputIndex) {\n  const input = inputs[inputIndex];\n  if (input === undefined) throw new Error(`No input #${inputIndex}`);\n  return input;\n}\nfunction checkForOutput(outputs, outputIndex) {\n  const output = outputs[outputIndex];\n  if (output === undefined) throw new Error(`No output #${outputIndex}`);\n  return output;\n}\nfunction checkHasKey(checkKeyVal, keyVals, enumLength) {\n  if (checkKeyVal.key[0] < enumLength) {\n    throw new Error(\n      `Use the method for your specific key instead of addUnknownKeyVal*`,\n    );\n  }\n  if (\n    keyVals &&\n    keyVals.filter(kv => uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.compare(kv.key, checkKeyVal.key) === 0)\n      .length !== 0\n  ) {\n    throw new Error(`Duplicate Key: ${uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.toHex(checkKeyVal.key)}`);\n  }\n}\nfunction getEnumLength(myenum) {\n  let count = 0;\n  Object.keys(myenum).forEach(val => {\n    if (Number(isNaN(Number(val)))) {\n      count++;\n    }\n  });\n  return count;\n}\nfunction inputCheckUncleanFinalized(inputIndex, input) {\n  let result = false;\n  if (input.nonWitnessUtxo || input.witnessUtxo) {\n    const needScriptSig = !!input.redeemScript;\n    const needWitnessScript = !!input.witnessScript;\n    const scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n    const witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n    const hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n    result = scriptSigOK && witnessScriptOK && hasOneFinal;\n  }\n  if (result === false) {\n    throw new Error(\n      `Input #${inputIndex} has too much or too little data to clean`,\n    );\n  }\n}\nfunction throwForUpdateMaker(typeName, name, expected, data) {\n  throw new Error(\n    `Data for ${typeName} key ${name} is incorrect: Expected ` +\n      `${expected} and got ${JSON.stringify(data)}`,\n  );\n}\nfunction updateMaker(typeName) {\n  return (updateData, mainData) => {\n    // @ts-ignore\n    for (const name of Object.keys(updateData)) {\n      // @ts-ignore\n      const data = updateData[name];\n      // @ts-ignore\n      const { canAdd, canAddToArray, check, expected } =\n        // @ts-ignore\n        _converter_index_js__WEBPACK_IMPORTED_MODULE_0__[typeName + 's'][name] || {};\n      const isArray = !!canAddToArray;\n      // If unknown data. ignore and do not add\n      if (check) {\n        if (isArray) {\n          if (\n            !Array.isArray(data) ||\n            // @ts-ignore\n            (mainData[name] && !Array.isArray(mainData[name]))\n          ) {\n            throw new Error(`Key type ${name} must be an array`);\n          }\n          if (!data.every(check)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          // @ts-ignore\n          const arr = mainData[name] || [];\n          const dupeCheckSet = new Set();\n          if (!data.every(v => canAddToArray(arr, v, dupeCheckSet))) {\n            throw new Error('Can not add duplicate data to array');\n          }\n          // @ts-ignore\n          mainData[name] = arr.concat(data);\n        } else {\n          if (!check(data)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          if (!canAdd(mainData, data)) {\n            throw new Error(`Can not add duplicate data to ${typeName}`);\n          }\n          // @ts-ignore\n          mainData[name] = data;\n        }\n      }\n    }\n  };\n}\nconst updateGlobal = updateMaker('global');\nconst updateInput = updateMaker('input');\nconst updateOutput = updateMaker('output');\nfunction addInputAttributes(inputs, data) {\n  const index = inputs.length - 1;\n  const input = checkForInput(inputs, index);\n  updateInput(data, input);\n}\nfunction addOutputAttributes(outputs, data) {\n  const index = outputs.length - 1;\n  const output = checkForOutput(outputs, index);\n  updateOutput(data, output);\n}\nfunction defaultVersionSetter(version, txBuf) {\n  if (!(txBuf instanceof Uint8Array) || txBuf.length < 4) {\n    throw new Error('Set Version: Invalid Transaction');\n  }\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(txBuf, 0, version, 'LE');\n  return txBuf;\n}\nfunction defaultLocktimeSetter(locktime, txBuf) {\n  if (!(txBuf instanceof Uint8Array) || txBuf.length < 4) {\n    throw new Error('Set Locktime: Invalid Transaction');\n  }\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(txBuf, txBuf.length - 4, locktime, 'LE');\n  return txBuf;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXAxNzRAMy4wLjAtcmMuMS9ub2RlX21vZHVsZXMvYmlwMTc0L3NyYy9lc20vbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ1I7QUFDbkM7QUFDUDtBQUNBLHdEQUF3RCxXQUFXO0FBQ25FO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMERBQTBELFlBQVk7QUFDdEU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIscURBQWE7QUFDdEM7QUFDQTtBQUNBLHNDQUFzQyxtREFBVyxrQkFBa0I7QUFDbkU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixVQUFVLE1BQU0sTUFBTTtBQUN0QyxTQUFTLFVBQVUsVUFBVSxxQkFBcUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5Q0FBeUM7QUFDdkQ7QUFDQSxRQUFRLGdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxTQUFTO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsRUFBRSx5REFBaUI7QUFDbkI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsRUFBRSx5REFBaUI7QUFDbkI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpcDE3NEAzLjAuMC1yYy4xL25vZGVfbW9kdWxlcy9iaXAxNzQvc3JjL2VzbS9saWIvdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29udmVydGVyIGZyb20gJy4vY29udmVydGVyL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRm9ySW5wdXQoaW5wdXRzLCBpbnB1dEluZGV4KSB7XG4gIGNvbnN0IGlucHV0ID0gaW5wdXRzW2lucHV0SW5kZXhdO1xuICBpZiAoaW5wdXQgPT09IHVuZGVmaW5lZCkgdGhyb3cgbmV3IEVycm9yKGBObyBpbnB1dCAjJHtpbnB1dEluZGV4fWApO1xuICByZXR1cm4gaW5wdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tGb3JPdXRwdXQob3V0cHV0cywgb3V0cHV0SW5kZXgpIHtcbiAgY29uc3Qgb3V0cHV0ID0gb3V0cHV0c1tvdXRwdXRJbmRleF07XG4gIGlmIChvdXRwdXQgPT09IHVuZGVmaW5lZCkgdGhyb3cgbmV3IEVycm9yKGBObyBvdXRwdXQgIyR7b3V0cHV0SW5kZXh9YCk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tIYXNLZXkoY2hlY2tLZXlWYWwsIGtleVZhbHMsIGVudW1MZW5ndGgpIHtcbiAgaWYgKGNoZWNrS2V5VmFsLmtleVswXSA8IGVudW1MZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVXNlIHRoZSBtZXRob2QgZm9yIHlvdXIgc3BlY2lmaWMga2V5IGluc3RlYWQgb2YgYWRkVW5rbm93bktleVZhbCpgLFxuICAgICk7XG4gIH1cbiAgaWYgKFxuICAgIGtleVZhbHMgJiZcbiAgICBrZXlWYWxzLmZpbHRlcihrdiA9PiB0b29scy5jb21wYXJlKGt2LmtleSwgY2hlY2tLZXlWYWwua2V5KSA9PT0gMClcbiAgICAgIC5sZW5ndGggIT09IDBcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUgS2V5OiAke3Rvb2xzLnRvSGV4KGNoZWNrS2V5VmFsLmtleSl9YCk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnVtTGVuZ3RoKG15ZW51bSkge1xuICBsZXQgY291bnQgPSAwO1xuICBPYmplY3Qua2V5cyhteWVudW0pLmZvckVhY2godmFsID0+IHtcbiAgICBpZiAoTnVtYmVyKGlzTmFOKE51bWJlcih2YWwpKSkpIHtcbiAgICAgIGNvdW50Kys7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGNvdW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlucHV0Q2hlY2tVbmNsZWFuRmluYWxpemVkKGlucHV0SW5kZXgsIGlucHV0KSB7XG4gIGxldCByZXN1bHQgPSBmYWxzZTtcbiAgaWYgKGlucHV0Lm5vbldpdG5lc3NVdHhvIHx8IGlucHV0LndpdG5lc3NVdHhvKSB7XG4gICAgY29uc3QgbmVlZFNjcmlwdFNpZyA9ICEhaW5wdXQucmVkZWVtU2NyaXB0O1xuICAgIGNvbnN0IG5lZWRXaXRuZXNzU2NyaXB0ID0gISFpbnB1dC53aXRuZXNzU2NyaXB0O1xuICAgIGNvbnN0IHNjcmlwdFNpZ09LID0gIW5lZWRTY3JpcHRTaWcgfHwgISFpbnB1dC5maW5hbFNjcmlwdFNpZztcbiAgICBjb25zdCB3aXRuZXNzU2NyaXB0T0sgPSAhbmVlZFdpdG5lc3NTY3JpcHQgfHwgISFpbnB1dC5maW5hbFNjcmlwdFdpdG5lc3M7XG4gICAgY29uc3QgaGFzT25lRmluYWwgPSAhIWlucHV0LmZpbmFsU2NyaXB0U2lnIHx8ICEhaW5wdXQuZmluYWxTY3JpcHRXaXRuZXNzO1xuICAgIHJlc3VsdCA9IHNjcmlwdFNpZ09LICYmIHdpdG5lc3NTY3JpcHRPSyAmJiBoYXNPbmVGaW5hbDtcbiAgfVxuICBpZiAocmVzdWx0ID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnB1dCAjJHtpbnB1dEluZGV4fSBoYXMgdG9vIG11Y2ggb3IgdG9vIGxpdHRsZSBkYXRhIHRvIGNsZWFuYCxcbiAgICApO1xuICB9XG59XG5mdW5jdGlvbiB0aHJvd0ZvclVwZGF0ZU1ha2VyKHR5cGVOYW1lLCBuYW1lLCBleHBlY3RlZCwgZGF0YSkge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgYERhdGEgZm9yICR7dHlwZU5hbWV9IGtleSAke25hbWV9IGlzIGluY29ycmVjdDogRXhwZWN0ZWQgYCArXG4gICAgICBgJHtleHBlY3RlZH0gYW5kIGdvdCAke0pTT04uc3RyaW5naWZ5KGRhdGEpfWAsXG4gICk7XG59XG5mdW5jdGlvbiB1cGRhdGVNYWtlcih0eXBlTmFtZSkge1xuICByZXR1cm4gKHVwZGF0ZURhdGEsIG1haW5EYXRhKSA9PiB7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGZvciAoY29uc3QgbmFtZSBvZiBPYmplY3Qua2V5cyh1cGRhdGVEYXRhKSkge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgY29uc3QgZGF0YSA9IHVwZGF0ZURhdGFbbmFtZV07XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjb25zdCB7IGNhbkFkZCwgY2FuQWRkVG9BcnJheSwgY2hlY2ssIGV4cGVjdGVkIH0gPVxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGNvbnZlcnRlclt0eXBlTmFtZSArICdzJ11bbmFtZV0gfHwge307XG4gICAgICBjb25zdCBpc0FycmF5ID0gISFjYW5BZGRUb0FycmF5O1xuICAgICAgLy8gSWYgdW5rbm93biBkYXRhLiBpZ25vcmUgYW5kIGRvIG5vdCBhZGRcbiAgICAgIGlmIChjaGVjaykge1xuICAgICAgICBpZiAoaXNBcnJheSkge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICFBcnJheS5pc0FycmF5KGRhdGEpIHx8XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAobWFpbkRhdGFbbmFtZV0gJiYgIUFycmF5LmlzQXJyYXkobWFpbkRhdGFbbmFtZV0pKVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBLZXkgdHlwZSAke25hbWV9IG11c3QgYmUgYW4gYXJyYXlgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFkYXRhLmV2ZXJ5KGNoZWNrKSkge1xuICAgICAgICAgICAgdGhyb3dGb3JVcGRhdGVNYWtlcih0eXBlTmFtZSwgbmFtZSwgZXhwZWN0ZWQsIGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgY29uc3QgYXJyID0gbWFpbkRhdGFbbmFtZV0gfHwgW107XG4gICAgICAgICAgY29uc3QgZHVwZUNoZWNrU2V0ID0gbmV3IFNldCgpO1xuICAgICAgICAgIGlmICghZGF0YS5ldmVyeSh2ID0+IGNhbkFkZFRvQXJyYXkoYXJyLCB2LCBkdXBlQ2hlY2tTZXQpKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gbm90IGFkZCBkdXBsaWNhdGUgZGF0YSB0byBhcnJheScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgbWFpbkRhdGFbbmFtZV0gPSBhcnIuY29uY2F0KGRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghY2hlY2soZGF0YSkpIHtcbiAgICAgICAgICAgIHRocm93Rm9yVXBkYXRlTWFrZXIodHlwZU5hbWUsIG5hbWUsIGV4cGVjdGVkLCBkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFjYW5BZGQobWFpbkRhdGEsIGRhdGEpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbiBub3QgYWRkIGR1cGxpY2F0ZSBkYXRhIHRvICR7dHlwZU5hbWV9YCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICBtYWluRGF0YVtuYW1lXSA9IGRhdGE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5leHBvcnQgY29uc3QgdXBkYXRlR2xvYmFsID0gdXBkYXRlTWFrZXIoJ2dsb2JhbCcpO1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUlucHV0ID0gdXBkYXRlTWFrZXIoJ2lucHV0Jyk7XG5leHBvcnQgY29uc3QgdXBkYXRlT3V0cHV0ID0gdXBkYXRlTWFrZXIoJ291dHB1dCcpO1xuZXhwb3J0IGZ1bmN0aW9uIGFkZElucHV0QXR0cmlidXRlcyhpbnB1dHMsIGRhdGEpIHtcbiAgY29uc3QgaW5kZXggPSBpbnB1dHMubGVuZ3RoIC0gMTtcbiAgY29uc3QgaW5wdXQgPSBjaGVja0ZvcklucHV0KGlucHV0cywgaW5kZXgpO1xuICB1cGRhdGVJbnB1dChkYXRhLCBpbnB1dCk7XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkT3V0cHV0QXR0cmlidXRlcyhvdXRwdXRzLCBkYXRhKSB7XG4gIGNvbnN0IGluZGV4ID0gb3V0cHV0cy5sZW5ndGggLSAxO1xuICBjb25zdCBvdXRwdXQgPSBjaGVja0Zvck91dHB1dChvdXRwdXRzLCBpbmRleCk7XG4gIHVwZGF0ZU91dHB1dChkYXRhLCBvdXRwdXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRWZXJzaW9uU2V0dGVyKHZlcnNpb24sIHR4QnVmKSB7XG4gIGlmICghKHR4QnVmIGluc3RhbmNlb2YgVWludDhBcnJheSkgfHwgdHhCdWYubGVuZ3RoIDwgNCkge1xuICAgIHRocm93IG5ldyBFcnJvcignU2V0IFZlcnNpb246IEludmFsaWQgVHJhbnNhY3Rpb24nKTtcbiAgfVxuICB0b29scy53cml0ZVVJbnQzMih0eEJ1ZiwgMCwgdmVyc2lvbiwgJ0xFJyk7XG4gIHJldHVybiB0eEJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0TG9ja3RpbWVTZXR0ZXIobG9ja3RpbWUsIHR4QnVmKSB7XG4gIGlmICghKHR4QnVmIGluc3RhbmNlb2YgVWludDhBcnJheSkgfHwgdHhCdWYubGVuZ3RoIDwgNCkge1xuICAgIHRocm93IG5ldyBFcnJvcignU2V0IExvY2t0aW1lOiBJbnZhbGlkIFRyYW5zYWN0aW9uJyk7XG4gIH1cbiAgdG9vbHMud3JpdGVVSW50MzIodHhCdWYsIHR4QnVmLmxlbmd0aCAtIDQsIGxvY2t0aW1lLCAnTEUnKTtcbiAgcmV0dXJuIHR4QnVmO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase58Check: () => (/* binding */ fromBase58Check),\n/* harmony export */   fromBech32: () => (/* binding */ fromBech32),\n/* harmony export */   fromOutputScript: () => (/* binding */ fromOutputScript),\n/* harmony export */   toBase58Check: () => (/* binding */ toBase58Check),\n/* harmony export */   toBech32: () => (/* binding */ toBech32),\n/* harmony export */   toOutputScript: () => (/* binding */ toOutputScript)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payments/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bech32 */ \"(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 2;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\n/**\n * Converts an output buffer to a future segwit address.\n * @param output - The output buffer.\n * @param network - The network object.\n * @returns The future segwit address.\n * @throws {TypeError} If the program length or version is invalid for segwit address.\n */\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\n/**\n * Decodes a base58check encoded Bitcoin address and returns the version and hash.\n *\n * @param address - The base58check encoded Bitcoin address to decode.\n * @returns An object containing the version and hash of the decoded address.\n * @throws {TypeError} If the address is too short or too long.\n */\nfunction fromBase58Check(address) {\n  const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\n/**\n * Converts a Bech32 or Bech32m encoded address to its corresponding data representation.\n * @param address - The Bech32 or Bech32m encoded address.\n * @returns An object containing the version, prefix, and data of the address.\n * @throws {TypeError} If the address uses the wrong encoding.\n */\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Uint8Array.from(data),\n  };\n}\n/**\n * Converts a hash to a Base58Check-encoded string.\n * @param hash - The hash to be encoded.\n * @param version - The version byte to be prepended to the encoded string.\n * @returns The Base58Check-encoded string.\n */\nfunction toBase58Check(hash, version) {\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.Hash160bitSchema, _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt8Schema]), [hash, version]);\n  const payload = new Uint8Array(21);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, version);\n  payload.set(hash, 1);\n  return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n}\n/**\n * Converts a buffer to a Bech32 or Bech32m encoded string.\n * @param data - The buffer to be encoded.\n * @param version - The version number to be used in the encoding.\n * @param prefix - The prefix string to be used in the encoding.\n * @returns The Bech32 or Bech32m encoded string.\n */\nfunction toBech32(data, version, prefix) {\n  const words = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.encode(prefix, words)\n    : bech32__WEBPACK_IMPORTED_MODULE_4__.bech32m.encode(prefix, words);\n}\n/**\n * Converts an output script to a Bitcoin address.\n * @param output - The output script as a Buffer.\n * @param network - The Bitcoin network (optional).\n * @returns The Bitcoin address corresponding to the output script.\n * @throws If the output script has no matching address.\n */\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2tr({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(_script_js__WEBPACK_IMPORTED_MODULE_2__.toASM(output) + ' has no matching Address');\n}\n/**\n * Converts a Bitcoin address to its corresponding output script.\n * @param address - The Bitcoin address to convert.\n * @param network - The Bitcoin network to use. Defaults to the Bitcoin network.\n * @returns The corresponding output script as a Buffer.\n * @throws If the address has an invalid prefix or no matching script.\n */\nfunction toOutputScript(address, network) {\n  network = network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (decodeBech32.version === 1) {\n        if (decodeBech32.data.length === 32)\n          return _payments_index_js__WEBPACK_IMPORTED_MODULE_1__.p2tr({ pubkey: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n/**\n * Checks if the given buffer is a valid BIP66-encoded signature.\n *\n * @param buffer - The buffer to check.\n * @returns A boolean indicating whether the buffer is a valid BIP66-encoded signature.\n */\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\n/**\n * Decodes a DER-encoded signature buffer and returns the R and S values.\n * @param buffer - The DER-encoded signature buffer.\n * @returns An object containing the R and S values.\n * @throws {Error} If the DER sequence length is too short, too long, or invalid.\n * @throws {Error} If the R or S length is zero or invalid.\n * @throws {Error} If the R or S value is negative or excessively padded.\n */\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = new Uint8Array(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  signature.set(r, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  signature.set(s, 6 + lenR);\n  return signature;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2JpcDY2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLE9BQU87QUFDbkIsWUFBWSxPQUFPO0FBQ25CO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2JpcDY2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJlZmVyZW5jZSBodHRwczovL2dpdGh1Yi5jb20vYml0Y29pbi9iaXBzL2Jsb2IvbWFzdGVyL2JpcC0wMDY2Lm1lZGlhd2lraVxuLy8gRm9ybWF0OiAweDMwIFt0b3RhbC1sZW5ndGhdIDB4MDIgW1ItbGVuZ3RoXSBbUl0gMHgwMiBbUy1sZW5ndGhdIFtTXVxuLy8gTk9URTogU0lHSEFTSCBieXRlIGlnbm9yZWQgQU5EIHJlc3RyaWN0ZWQsIHRydW5jYXRlIGJlZm9yZSB1c2Vcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBidWZmZXIgaXMgYSB2YWxpZCBCSVA2Ni1lbmNvZGVkIHNpZ25hdHVyZS5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIGJ1ZmZlciB0byBjaGVjay5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIGJ1ZmZlciBpcyBhIHZhbGlkIEJJUDY2LWVuY29kZWQgc2lnbmF0dXJlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY2hlY2soYnVmZmVyKSB7XG4gIGlmIChidWZmZXIubGVuZ3RoIDwgOCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmZmVyLmxlbmd0aCA+IDcyKSByZXR1cm4gZmFsc2U7XG4gIGlmIChidWZmZXJbMF0gIT09IDB4MzApIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlclsxXSAhPT0gYnVmZmVyLmxlbmd0aCAtIDIpIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlclsyXSAhPT0gMHgwMikgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBsZW5SID0gYnVmZmVyWzNdO1xuICBpZiAobGVuUiA9PT0gMCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoNSArIGxlblIgPj0gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmZmVyWzQgKyBsZW5SXSAhPT0gMHgwMikgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBsZW5TID0gYnVmZmVyWzUgKyBsZW5SXTtcbiAgaWYgKGxlblMgPT09IDApIHJldHVybiBmYWxzZTtcbiAgaWYgKDYgKyBsZW5SICsgbGVuUyAhPT0gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoYnVmZmVyWzRdICYgMHg4MCkgcmV0dXJuIGZhbHNlO1xuICBpZiAobGVuUiA+IDEgJiYgYnVmZmVyWzRdID09PSAweDAwICYmICEoYnVmZmVyWzVdICYgMHg4MCkpIHJldHVybiBmYWxzZTtcbiAgaWYgKGJ1ZmZlcltsZW5SICsgNl0gJiAweDgwKSByZXR1cm4gZmFsc2U7XG4gIGlmIChsZW5TID4gMSAmJiBidWZmZXJbbGVuUiArIDZdID09PSAweDAwICYmICEoYnVmZmVyW2xlblIgKyA3XSAmIDB4ODApKVxuICAgIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIERlY29kZXMgYSBERVItZW5jb2RlZCBzaWduYXR1cmUgYnVmZmVyIGFuZCByZXR1cm5zIHRoZSBSIGFuZCBTIHZhbHVlcy5cbiAqIEBwYXJhbSBidWZmZXIgLSBUaGUgREVSLWVuY29kZWQgc2lnbmF0dXJlIGJ1ZmZlci5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBSIGFuZCBTIHZhbHVlcy5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgREVSIHNlcXVlbmNlIGxlbmd0aCBpcyB0b28gc2hvcnQsIHRvbyBsb25nLCBvciBpbnZhbGlkLlxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBSIG9yIFMgbGVuZ3RoIGlzIHplcm8gb3IgaW52YWxpZC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgUiBvciBTIHZhbHVlIGlzIG5lZ2F0aXZlIG9yIGV4Y2Vzc2l2ZWx5IHBhZGRlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShidWZmZXIpIHtcbiAgaWYgKGJ1ZmZlci5sZW5ndGggPCA4KSB0aHJvdyBuZXcgRXJyb3IoJ0RFUiBzZXF1ZW5jZSBsZW5ndGggaXMgdG9vIHNob3J0Jyk7XG4gIGlmIChidWZmZXIubGVuZ3RoID4gNzIpIHRocm93IG5ldyBFcnJvcignREVSIHNlcXVlbmNlIGxlbmd0aCBpcyB0b28gbG9uZycpO1xuICBpZiAoYnVmZmVyWzBdICE9PSAweDMwKSB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIERFUiBzZXF1ZW5jZScpO1xuICBpZiAoYnVmZmVyWzFdICE9PSBidWZmZXIubGVuZ3RoIC0gMilcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0RFUiBzZXF1ZW5jZSBsZW5ndGggaXMgaW52YWxpZCcpO1xuICBpZiAoYnVmZmVyWzJdICE9PSAweDAyKSB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIERFUiBpbnRlZ2VyJyk7XG4gIGNvbnN0IGxlblIgPSBidWZmZXJbM107XG4gIGlmIChsZW5SID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ1IgbGVuZ3RoIGlzIHplcm8nKTtcbiAgaWYgKDUgKyBsZW5SID49IGJ1ZmZlci5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignUiBsZW5ndGggaXMgdG9vIGxvbmcnKTtcbiAgaWYgKGJ1ZmZlcls0ICsgbGVuUl0gIT09IDB4MDIpIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgREVSIGludGVnZXIgKDIpJyk7XG4gIGNvbnN0IGxlblMgPSBidWZmZXJbNSArIGxlblJdO1xuICBpZiAobGVuUyA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdTIGxlbmd0aCBpcyB6ZXJvJyk7XG4gIGlmICg2ICsgbGVuUiArIGxlblMgIT09IGJ1ZmZlci5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignUyBsZW5ndGggaXMgaW52YWxpZCcpO1xuICBpZiAoYnVmZmVyWzRdICYgMHg4MCkgdGhyb3cgbmV3IEVycm9yKCdSIHZhbHVlIGlzIG5lZ2F0aXZlJyk7XG4gIGlmIChsZW5SID4gMSAmJiBidWZmZXJbNF0gPT09IDB4MDAgJiYgIShidWZmZXJbNV0gJiAweDgwKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1IgdmFsdWUgZXhjZXNzaXZlbHkgcGFkZGVkJyk7XG4gIGlmIChidWZmZXJbbGVuUiArIDZdICYgMHg4MCkgdGhyb3cgbmV3IEVycm9yKCdTIHZhbHVlIGlzIG5lZ2F0aXZlJyk7XG4gIGlmIChsZW5TID4gMSAmJiBidWZmZXJbbGVuUiArIDZdID09PSAweDAwICYmICEoYnVmZmVyW2xlblIgKyA3XSAmIDB4ODApKVxuICAgIHRocm93IG5ldyBFcnJvcignUyB2YWx1ZSBleGNlc3NpdmVseSBwYWRkZWQnKTtcbiAgLy8gbm9uLUJJUDY2IC0gZXh0cmFjdCBSLCBTIHZhbHVlc1xuICByZXR1cm4ge1xuICAgIHI6IGJ1ZmZlci5zbGljZSg0LCA0ICsgbGVuUiksXG4gICAgczogYnVmZmVyLnNsaWNlKDYgKyBsZW5SKSxcbiAgfTtcbn1cbi8qXG4gKiBFeHBlY3RzIHIgYW5kIHMgdG8gYmUgcG9zaXRpdmUgREVSIGludGVnZXJzLlxuICpcbiAqIFRoZSBERVIgZm9ybWF0IHVzZXMgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgYml0IGFzIGEgc2lnbiBiaXQgKCYgMHg4MCkuXG4gKiBJZiB0aGUgc2lnbmlmaWNhbnQgYml0IGlzIHNldCBBTkQgdGhlIGludGVnZXIgaXMgcG9zaXRpdmUsIGEgMHgwMCBpcyBwcmVwZW5kZWQuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgICAwID0+ICAgICAweDAwXG4gKiAgICAgIDEgPT4gICAgIDB4MDFcbiAqICAgICAtMSA9PiAgICAgMHhmZlxuICogICAgMTI3ID0+ICAgICAweDdmXG4gKiAgIC0xMjcgPT4gICAgIDB4ODFcbiAqICAgIDEyOCA9PiAgIDB4MDA4MFxuICogICAtMTI4ID0+ICAgICAweDgwXG4gKiAgICAyNTUgPT4gICAweDAwZmZcbiAqICAgLTI1NSA9PiAgIDB4ZmYwMVxuICogIDE2MzAwID0+ICAgMHgzZmFjXG4gKiAtMTYzMDAgPT4gICAweGMwNTRcbiAqICA2MjMwMCA9PiAweDAwZjM1Y1xuICogLTYyMzAwID0+IDB4ZmYwY2E0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUociwgcykge1xuICBjb25zdCBsZW5SID0gci5sZW5ndGg7XG4gIGNvbnN0IGxlblMgPSBzLmxlbmd0aDtcbiAgaWYgKGxlblIgPT09IDApIHRocm93IG5ldyBFcnJvcignUiBsZW5ndGggaXMgemVybycpO1xuICBpZiAobGVuUyA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKCdTIGxlbmd0aCBpcyB6ZXJvJyk7XG4gIGlmIChsZW5SID4gMzMpIHRocm93IG5ldyBFcnJvcignUiBsZW5ndGggaXMgdG9vIGxvbmcnKTtcbiAgaWYgKGxlblMgPiAzMykgdGhyb3cgbmV3IEVycm9yKCdTIGxlbmd0aCBpcyB0b28gbG9uZycpO1xuICBpZiAoclswXSAmIDB4ODApIHRocm93IG5ldyBFcnJvcignUiB2YWx1ZSBpcyBuZWdhdGl2ZScpO1xuICBpZiAoc1swXSAmIDB4ODApIHRocm93IG5ldyBFcnJvcignUyB2YWx1ZSBpcyBuZWdhdGl2ZScpO1xuICBpZiAobGVuUiA+IDEgJiYgclswXSA9PT0gMHgwMCAmJiAhKHJbMV0gJiAweDgwKSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1IgdmFsdWUgZXhjZXNzaXZlbHkgcGFkZGVkJyk7XG4gIGlmIChsZW5TID4gMSAmJiBzWzBdID09PSAweDAwICYmICEoc1sxXSAmIDB4ODApKVxuICAgIHRocm93IG5ldyBFcnJvcignUyB2YWx1ZSBleGNlc3NpdmVseSBwYWRkZWQnKTtcbiAgY29uc3Qgc2lnbmF0dXJlID0gbmV3IFVpbnQ4QXJyYXkoNiArIGxlblIgKyBsZW5TKTtcbiAgLy8gMHgzMCBbdG90YWwtbGVuZ3RoXSAweDAyIFtSLWxlbmd0aF0gW1JdIDB4MDIgW1MtbGVuZ3RoXSBbU11cbiAgc2lnbmF0dXJlWzBdID0gMHgzMDtcbiAgc2lnbmF0dXJlWzFdID0gc2lnbmF0dXJlLmxlbmd0aCAtIDI7XG4gIHNpZ25hdHVyZVsyXSA9IDB4MDI7XG4gIHNpZ25hdHVyZVszXSA9IHIubGVuZ3RoO1xuICBzaWduYXR1cmUuc2V0KHIsIDQpO1xuICBzaWduYXR1cmVbNCArIGxlblJdID0gMHgwMjtcbiAgc2lnbmF0dXJlWzUgKyBsZW5SXSA9IHMubGVuZ3RoO1xuICBzaWduYXR1cmUuc2V0KHMsIDYgKyBsZW5SKTtcbiAgcmV0dXJuIHNpZ25hdHVyZTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Block: () => (/* binding */ Block)\n/* harmony export */ });\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bufferutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _merkle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merkle.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transaction.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\n\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = _transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(hex));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = new Uint8Array(32);\n    target[29 - exponent] = (mantissa >> 16) & 0xff;\n    target[30 - exponent] = (mantissa >> 8) & 0xff;\n    target[31 - exponent] = mantissa & 0xff;\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.array(valibot__WEBPACK_IMPORTED_MODULE_5__.object({ getHash: valibot__WEBPACK_IMPORTED_MODULE_5__[\"function\"]() })), transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = (0,_merkle_js__WEBPACK_IMPORTED_MODULE_2__.fastMerkleRoot)(hashes, _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256);\n    return forWitness\n      ? _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  version = 1;\n  prevHash = undefined;\n  merkleRoot = undefined;\n  timestamp = 0;\n  witnessCommit = undefined;\n  bits = 0;\n  nonce = 0;\n  transactions = undefined;\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(\n        out =>\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(\n            out.script.slice(0, 6),\n            Uint8Array.from([0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed]),\n          ) === 0,\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Uint8Array && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Uint8Array &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash()));\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = new Uint8Array(this.byteLength(headersOnly));\n    const bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    const { bytes } = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encode(\n      this.transactions.length,\n      buffer,\n      bufferWriter.offset,\n    );\n    bufferWriter.offset += bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex(this.toBuffer(headersOnly));\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(hash, target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(this.merkleRoot, actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(this.witnessCommit, actualWitnessCommit) === 0;\n  }\n}\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferReader: () => (/* binding */ BufferReader),\n/* harmony export */   BufferWriter: () => (/* binding */ BufferWriter),\n/* harmony export */   cloneBuffer: () => (/* binding */ cloneBuffer),\n/* harmony export */   reverseBuffer: () => (/* binding */ reverseBuffer),\n/* harmony export */   varuint: () => (/* reexport module object */ varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\nconst MAX_JS_NUMBER = 0x001fffffffffffff;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number' && typeof value !== 'bigint')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0 && value < BigInt(0))\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max && value > BigInt(max))\n    throw new Error('RangeError: value out of range');\n  if (Math.floor(Number(value)) !== Number(value))\n    throw new Error('value has a fractional component');\n}\n/**\n * Reverses the order of bytes in a buffer.\n * @param buffer - The buffer to reverse.\n * @returns A new buffer with the bytes reversed.\n */\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nfunction cloneBuffer(buffer) {\n  const clone = new Uint8Array(buffer.length);\n  clone.set(buffer);\n  return clone;\n}\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  buffer;\n  offset;\n  static withCapacity(size) {\n    return new BufferWriter(new Uint8Array(size));\n  }\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    valibot__WEBPACK_IMPORTED_MODULE_3__.parse(valibot__WEBPACK_IMPORTED_MODULE_3__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_0__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_0__.UInt32Schema]), [\n      buffer,\n      offset,\n    ]);\n  }\n  writeUInt8(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt8(this.buffer, this.offset, i);\n  }\n  writeInt32(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeInt32(this.buffer, this.offset, i, 'LE');\n  }\n  writeInt64(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeInt64(this.buffer, this.offset, BigInt(i), 'LE');\n  }\n  writeUInt32(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt32(this.buffer, this.offset, i, 'LE');\n  }\n  writeUInt64(i) {\n    this.offset = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt64(this.buffer, this.offset, BigInt(i), 'LE');\n  }\n  writeVarInt(i) {\n    const { bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.encode(i, this.buffer, this.offset);\n    this.offset += bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.buffer.set(slice, this.offset);\n    this.offset += slice.length;\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n  end() {\n    if (this.buffer.length === this.offset) {\n      return this.buffer;\n    }\n    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n  }\n}\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  buffer;\n  offset;\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    valibot__WEBPACK_IMPORTED_MODULE_3__.parse(valibot__WEBPACK_IMPORTED_MODULE_3__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_0__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_0__.UInt32Schema]), [\n      buffer,\n      offset,\n    ]);\n  }\n  readUInt8() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt8(this.buffer, this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readInt32(this.buffer, this.offset, 'LE');\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt32(this.buffer, this.offset, 'LE');\n    this.offset += 4;\n    return result;\n  }\n  readInt64() {\n    const result = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readInt64(this.buffer, this.offset, 'LE');\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const { bigintValue, bytes } = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.decode(this.buffer, this.offset);\n    this.offset += bytes;\n    return bigintValue;\n  }\n  readSlice(n) {\n    verifuint(n, MAX_JS_NUMBER);\n    const num = Number(n);\n    if (this.buffer.length < this.offset + num) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + num);\n    this.offset += num;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TAGGED_HASH_PREFIXES: () => (/* binding */ TAGGED_HASH_PREFIXES),\n/* harmony export */   TAGS: () => (/* binding */ TAGS),\n/* harmony export */   hash160: () => (/* binding */ hash160),\n/* harmony export */   hash256: () => (/* binding */ hash256),\n/* harmony export */   taggedHash: () => (/* binding */ taggedHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/ripemd160.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/**\n * A module for hashing functions.\n * include ripemd160、sha1、sha256、hash160、hash256、taggedHash\n *\n * @packageDocumentation\n */\n\n\n\nfunction hash160(buffer) {\n  return (0,_noble_hashes_ripemd160__WEBPACK_IMPORTED_MODULE_1__.ripemd160)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(buffer));\n}\nfunction hash256(buffer) {\n  return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(buffer));\n}\nconst TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\n/**\n * Defines the tagged hash prefixes used in the crypto module.\n */\nconst TAGGED_HASH_PREFIXES = {\n  'BIP0340/challenge': Uint8Array.from([\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n  ]),\n  'BIP0340/aux': Uint8Array.from([\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n  ]),\n  'BIP0340/nonce': Uint8Array.from([\n    7, 73, 119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244,\n    52, 215, 62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47, 7, 73,\n    119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244, 52, 215,\n    62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47,\n  ]),\n  TapLeaf: Uint8Array.from([\n    174, 234, 143, 220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211,\n    95, 28, 181, 64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238, 174, 234, 143,\n    220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211, 95, 28, 181,\n    64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238,\n  ]),\n  TapBranch: Uint8Array.from([\n    25, 65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247,\n    33, 111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21, 25,\n    65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247, 33,\n    111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21,\n  ]),\n  TapSighash: Uint8Array.from([\n    244, 10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61,\n    149, 253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49, 244,\n    10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61, 149,\n    253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49,\n  ]),\n  TapTweak: Uint8Array.from([\n    232, 15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66,\n    156, 188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233, 232,\n    15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66, 156,\n    188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233,\n  ]),\n  'KeyAgg list': Uint8Array.from([\n    72, 28, 151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126,\n    215, 49, 156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240, 72, 28,\n    151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126, 215, 49,\n    156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240,\n  ]),\n  'KeyAgg coefficient': Uint8Array.from([\n    191, 201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100,\n    130, 78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129, 191,\n    201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100, 130,\n    78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129,\n  ]),\n};\nfunction taggedHash(prefix, data) {\n  return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.concat([TAGGED_HASH_PREFIXES[prefix], data]));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2NyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNvRDtBQUNOO0FBQ0o7QUFDbkM7QUFDUCxTQUFTLGtFQUFTLENBQUMsNERBQU07QUFDekI7QUFDTztBQUNQLFNBQVMsNERBQU0sQ0FBQyw0REFBTTtBQUN0QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMsNERBQU0sQ0FBQyxvREFBWTtBQUM1QiIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vY3J5cHRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBtb2R1bGUgZm9yIGhhc2hpbmcgZnVuY3Rpb25zLlxuICogaW5jbHVkZSByaXBlbWQxNjDjgIFzaGEx44CBc2hhMjU244CBaGFzaDE2MOOAgWhhc2gyNTbjgIF0YWdnZWRIYXNoXG4gKlxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXG4gKi9cbmltcG9ydCB7IHJpcGVtZDE2MCB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvcmlwZW1kMTYwJztcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvc2hhMjU2JztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2gxNjAoYnVmZmVyKSB7XG4gIHJldHVybiByaXBlbWQxNjAoc2hhMjU2KGJ1ZmZlcikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc2gyNTYoYnVmZmVyKSB7XG4gIHJldHVybiBzaGEyNTYoc2hhMjU2KGJ1ZmZlcikpO1xufVxuZXhwb3J0IGNvbnN0IFRBR1MgPSBbXG4gICdCSVAwMzQwL2NoYWxsZW5nZScsXG4gICdCSVAwMzQwL2F1eCcsXG4gICdCSVAwMzQwL25vbmNlJyxcbiAgJ1RhcExlYWYnLFxuICAnVGFwQnJhbmNoJyxcbiAgJ1RhcFNpZ2hhc2gnLFxuICAnVGFwVHdlYWsnLFxuICAnS2V5QWdnIGxpc3QnLFxuICAnS2V5QWdnIGNvZWZmaWNpZW50Jyxcbl07XG4vKiogQW4gb2JqZWN0IG1hcHBpbmcgdGFncyB0byB0aGVpciB0YWdnZWQgaGFzaCBwcmVmaXggb2YgW1NIQTI1Nih0YWcpIHwgU0hBMjU2KHRhZyldICovXG4vKipcbiAqIERlZmluZXMgdGhlIHRhZ2dlZCBoYXNoIHByZWZpeGVzIHVzZWQgaW4gdGhlIGNyeXB0byBtb2R1bGUuXG4gKi9cbmV4cG9ydCBjb25zdCBUQUdHRURfSEFTSF9QUkVGSVhFUyA9IHtcbiAgJ0JJUDAzNDAvY2hhbGxlbmdlJzogVWludDhBcnJheS5mcm9tKFtcbiAgICAxMjMsIDE4MSwgNDUsIDEyMiwgMTU5LCAyMzksIDg4LCA1MCwgNjIsIDE3NywgMTkxLCAxMjIsIDY0LCAxMjUsIDE3OSwgMTMwLFxuICAgIDIxMCwgMjQzLCAyNDIsIDIxNiwgMjcsIDE3NywgMzQsIDc5LCA3MywgMjU0LCA4MSwgMTQzLCAxMDksIDcyLCAyMTEsIDEyNCxcbiAgICAxMjMsIDE4MSwgNDUsIDEyMiwgMTU5LCAyMzksIDg4LCA1MCwgNjIsIDE3NywgMTkxLCAxMjIsIDY0LCAxMjUsIDE3OSwgMTMwLFxuICAgIDIxMCwgMjQzLCAyNDIsIDIxNiwgMjcsIDE3NywgMzQsIDc5LCA3MywgMjU0LCA4MSwgMTQzLCAxMDksIDcyLCAyMTEsIDEyNCxcbiAgXSksXG4gICdCSVAwMzQwL2F1eCc6IFVpbnQ4QXJyYXkuZnJvbShbXG4gICAgMjQxLCAyMzksIDc4LCA5NCwgMTkyLCA5OSwgMjAyLCAyMTgsIDEwOSwgMTQ4LCAyMDIsIDI1MCwgMTU3LCAxNTIsIDEyNiwgMTYwLFxuICAgIDEwNSwgMzgsIDg4LCA1NywgMjM2LCAxOTMsIDMxLCAxNTEsIDQ1LCAxMTksIDE2NSwgNDYsIDIxNiwgMTkzLCAyMDQsIDE0NCxcbiAgICAyNDEsIDIzOSwgNzgsIDk0LCAxOTIsIDk5LCAyMDIsIDIxOCwgMTA5LCAxNDgsIDIwMiwgMjUwLCAxNTcsIDE1MiwgMTI2LCAxNjAsXG4gICAgMTA1LCAzOCwgODgsIDU3LCAyMzYsIDE5MywgMzEsIDE1MSwgNDUsIDExOSwgMTY1LCA0NiwgMjE2LCAxOTMsIDIwNCwgMTQ0LFxuICBdKSxcbiAgJ0JJUDAzNDAvbm9uY2UnOiBVaW50OEFycmF5LmZyb20oW1xuICAgIDcsIDczLCAxMTksIDUyLCAxNjcsIDE1NSwgMjAzLCA1MywgOTEsIDE1NSwgMTQwLCAxMjUsIDMsIDc5LCAxOCwgMjgsIDI0NCxcbiAgICA1MiwgMjE1LCA2MiwgMjQ3LCA0NSwgMjE4LCAyNSwgMTM1LCAwLCA5NywgMjUxLCA4MiwgMTkxLCAyMzUsIDQ3LCA3LCA3MyxcbiAgICAxMTksIDUyLCAxNjcsIDE1NSwgMjAzLCA1MywgOTEsIDE1NSwgMTQwLCAxMjUsIDMsIDc5LCAxOCwgMjgsIDI0NCwgNTIsIDIxNSxcbiAgICA2MiwgMjQ3LCA0NSwgMjE4LCAyNSwgMTM1LCAwLCA5NywgMjUxLCA4MiwgMTkxLCAyMzUsIDQ3LFxuICBdKSxcbiAgVGFwTGVhZjogVWludDhBcnJheS5mcm9tKFtcbiAgICAxNzQsIDIzNCwgMTQzLCAyMjAsIDY2LCA4LCAxNTIsIDQ5LCA1LCAxMTUsIDc1LCA4OCwgOCwgMjksIDMwLCAzOCwgNTYsIDIxMSxcbiAgICA5NSwgMjgsIDE4MSwgNjQsIDgsIDIxMiwgMjExLCA4NywgMjAyLCAzLCAxOTAsIDEyMCwgMjMzLCAyMzgsIDE3NCwgMjM0LCAxNDMsXG4gICAgMjIwLCA2NiwgOCwgMTUyLCA0OSwgNSwgMTE1LCA3NSwgODgsIDgsIDI5LCAzMCwgMzgsIDU2LCAyMTEsIDk1LCAyOCwgMTgxLFxuICAgIDY0LCA4LCAyMTIsIDIxMSwgODcsIDIwMiwgMywgMTkwLCAxMjAsIDIzMywgMjM4LFxuICBdKSxcbiAgVGFwQnJhbmNoOiBVaW50OEFycmF5LmZyb20oW1xuICAgIDI1LCA2NSwgMTYxLCAyNDIsIDIyOSwgMTEwLCAxODUsIDk1LCAxNjIsIDE2OSwgMjQxLCAxNDgsIDE5MCwgOTIsIDEsIDI0NyxcbiAgICAzMywgMTExLCA1MSwgMjM3LCAxMzAsIDE3NiwgMTQ1LCA3MCwgNTIsIDE0NCwgMjA4LCA5MSwgMjQ1LCAyMiwgMTYwLCAyMSwgMjUsXG4gICAgNjUsIDE2MSwgMjQyLCAyMjksIDExMCwgMTg1LCA5NSwgMTYyLCAxNjksIDI0MSwgMTQ4LCAxOTAsIDkyLCAxLCAyNDcsIDMzLFxuICAgIDExMSwgNTEsIDIzNywgMTMwLCAxNzYsIDE0NSwgNzAsIDUyLCAxNDQsIDIwOCwgOTEsIDI0NSwgMjIsIDE2MCwgMjEsXG4gIF0pLFxuICBUYXBTaWdoYXNoOiBVaW50OEFycmF5LmZyb20oW1xuICAgIDI0NCwgMTAsIDcyLCAyMjMsIDc1LCA0MiwgMTEyLCAyMDAsIDE4MCwgMTQ2LCA3NSwgMjQyLCAxMDEsIDcwLCA5NywgMjM3LCA2MSxcbiAgICAxNDksIDI1MywgMTAyLCAxNjMsIDE5LCAyMzUsIDEzNSwgMzUsIDExNywgMTUxLCAxOTgsIDQwLCAyMjgsIDE2MCwgNDksIDI0NCxcbiAgICAxMCwgNzIsIDIyMywgNzUsIDQyLCAxMTIsIDIwMCwgMTgwLCAxNDYsIDc1LCAyNDIsIDEwMSwgNzAsIDk3LCAyMzcsIDYxLCAxNDksXG4gICAgMjUzLCAxMDIsIDE2MywgMTksIDIzNSwgMTM1LCAzNSwgMTE3LCAxNTEsIDE5OCwgNDAsIDIyOCwgMTYwLCA0OSxcbiAgXSksXG4gIFRhcFR3ZWFrOiBVaW50OEFycmF5LmZyb20oW1xuICAgIDIzMiwgMTUsIDIyNSwgOTksIDE1NiwgMTU2LCAxNjAsIDgwLCAyMjcsIDE3NSwgMjcsIDU3LCAxOTMsIDY3LCAxOTgsIDYyLCA2NixcbiAgICAxNTYsIDE4OCwgMjM1LCAyMSwgMjE3LCA2NCwgMjUxLCAxODEsIDE5NywgMTYxLCAyNDQsIDE3NSwgODcsIDE5NywgMjMzLCAyMzIsXG4gICAgMTUsIDIyNSwgOTksIDE1NiwgMTU2LCAxNjAsIDgwLCAyMjcsIDE3NSwgMjcsIDU3LCAxOTMsIDY3LCAxOTgsIDYyLCA2NiwgMTU2LFxuICAgIDE4OCwgMjM1LCAyMSwgMjE3LCA2NCwgMjUxLCAxODEsIDE5NywgMTYxLCAyNDQsIDE3NSwgODcsIDE5NywgMjMzLFxuICBdKSxcbiAgJ0tleUFnZyBsaXN0JzogVWludDhBcnJheS5mcm9tKFtcbiAgICA3MiwgMjgsIDE1MSwgMjgsIDYwLCAxMSwgNzAsIDIxNSwgMjQwLCAxNzgsIDExNywgMTc0LCA4OSwgMTQxLCA3OCwgNDQsIDEyNixcbiAgICAyMTUsIDQ5LCAxNTYsIDg5LCA3NCwgOTIsIDExMCwgMTk5LCAxNTgsIDE2MCwgMjEyLCAxNTMsIDIsIDE0OCwgMjQwLCA3MiwgMjgsXG4gICAgMTUxLCAyOCwgNjAsIDExLCA3MCwgMjE1LCAyNDAsIDE3OCwgMTE3LCAxNzQsIDg5LCAxNDEsIDc4LCA0NCwgMTI2LCAyMTUsIDQ5LFxuICAgIDE1NiwgODksIDc0LCA5MiwgMTEwLCAxOTksIDE1OCwgMTYwLCAyMTIsIDE1MywgMiwgMTQ4LCAyNDAsXG4gIF0pLFxuICAnS2V5QWdnIGNvZWZmaWNpZW50JzogVWludDhBcnJheS5mcm9tKFtcbiAgICAxOTEsIDIwMSwgNCwgMywgNzcsIDI4LCAxMzYsIDIzMiwgMjAwLCAxNCwgMzQsIDIyOSwgNjEsIDM2LCA4NiwgMTA5LCAxMDAsXG4gICAgMTMwLCA3OCwgMjE0LCA2NiwgMTE0LCAxMjksIDE5MiwgMTQ1LCAwLCAyNDksIDc3LCAyMDUsIDgyLCAyMDEsIDEyOSwgMTkxLFxuICAgIDIwMSwgNCwgMywgNzcsIDI4LCAxMzYsIDIzMiwgMjAwLCAxNCwgMzQsIDIyOSwgNjEsIDM2LCA4NiwgMTA5LCAxMDAsIDEzMCxcbiAgICA3OCwgMjE0LCA2NiwgMTE0LCAxMjksIDE5MiwgMTQ1LCAwLCAyNDksIDc3LCAyMDUsIDgyLCAyMDEsIDEyOSxcbiAgXSksXG59O1xuZXhwb3J0IGZ1bmN0aW9uIHRhZ2dlZEhhc2gocHJlZml4LCBkYXRhKSB7XG4gIHJldHVybiBzaGEyNTYodG9vbHMuY29uY2F0KFtUQUdHRURfSEFTSF9QUkVGSVhFU1twcmVmaXhdLCBkYXRhXSkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEccLib: () => (/* binding */ getEccLib),\n/* harmony export */   initEccLib: () => (/* binding */ initEccLib)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\nconst _ECCLIB_CACHE = {};\n/**\n * Initializes the ECC library with the provided instance.\n * If `eccLib` is `undefined`, the library will be cleared.\n * If `eccLib` is a new instance, it will be verified before setting it as the active library.\n *\n * @param eccLib The instance of the ECC library to initialize.\n */\nfunction initEccLib(eccLib) {\n  if (!eccLib) {\n    // allow clearing the library\n    _ECCLIB_CACHE.eccLib = eccLib;\n  } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n    // new instance, verify it\n    verifyEcc(eccLib);\n    _ECCLIB_CACHE.eccLib = eccLib;\n  }\n}\n/**\n * Retrieves the ECC Library instance.\n * Throws an error if the ECC Library is not provided.\n * You must call initEccLib() with a valid TinySecp256k1Interface instance before calling this function.\n * @returns The ECC Library instance.\n * @throws Error if the ECC Library is not provided.\n */\nfunction getEccLib() {\n  if (!_ECCLIB_CACHE.eccLib)\n    throw new Error(\n      'No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance',\n    );\n  return _ECCLIB_CACHE.eccLib;\n}\nconst h = hex => uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.fromHex(hex);\n/**\n * Verifies the ECC functionality.\n *\n * @param ecc - The TinySecp256k1Interface object.\n */\nfunction verifyEcc(ecc) {\n  assert(typeof ecc.isXOnlyPoint === 'function');\n  assert(\n    ecc.isXOnlyPoint(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000001'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000000'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    ),\n  );\n  assert(typeof ecc.xOnlyPointAddTweak === 'function');\n  tweakAddVectors.forEach(t => {\n    const r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n    if (t.result === null) {\n      assert(r === null);\n    } else {\n      assert(r !== null);\n      assert(r.parity === t.parity);\n      assert(uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(r.xOnlyPubkey, h(t.result)) === 0);\n    }\n  });\n}\nfunction assert(bool) {\n  if (!bool) throw new Error('ecc library invalid');\n}\nconst tweakAddVectors = [\n  {\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null,\n  },\n  {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf',\n  },\n  {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c',\n  },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2VjY19saWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxREFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLGFBQWEscURBQWE7QUFDMUI7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9lY2NfbGliLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuY29uc3QgX0VDQ0xJQl9DQUNIRSA9IHt9O1xuLyoqXG4gKiBJbml0aWFsaXplcyB0aGUgRUNDIGxpYnJhcnkgd2l0aCB0aGUgcHJvdmlkZWQgaW5zdGFuY2UuXG4gKiBJZiBgZWNjTGliYCBpcyBgdW5kZWZpbmVkYCwgdGhlIGxpYnJhcnkgd2lsbCBiZSBjbGVhcmVkLlxuICogSWYgYGVjY0xpYmAgaXMgYSBuZXcgaW5zdGFuY2UsIGl0IHdpbGwgYmUgdmVyaWZpZWQgYmVmb3JlIHNldHRpbmcgaXQgYXMgdGhlIGFjdGl2ZSBsaWJyYXJ5LlxuICpcbiAqIEBwYXJhbSBlY2NMaWIgVGhlIGluc3RhbmNlIG9mIHRoZSBFQ0MgbGlicmFyeSB0byBpbml0aWFsaXplLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdEVjY0xpYihlY2NMaWIpIHtcbiAgaWYgKCFlY2NMaWIpIHtcbiAgICAvLyBhbGxvdyBjbGVhcmluZyB0aGUgbGlicmFyeVxuICAgIF9FQ0NMSUJfQ0FDSEUuZWNjTGliID0gZWNjTGliO1xuICB9IGVsc2UgaWYgKGVjY0xpYiAhPT0gX0VDQ0xJQl9DQUNIRS5lY2NMaWIpIHtcbiAgICAvLyBuZXcgaW5zdGFuY2UsIHZlcmlmeSBpdFxuICAgIHZlcmlmeUVjYyhlY2NMaWIpO1xuICAgIF9FQ0NMSUJfQ0FDSEUuZWNjTGliID0gZWNjTGliO1xuICB9XG59XG4vKipcbiAqIFJldHJpZXZlcyB0aGUgRUNDIExpYnJhcnkgaW5zdGFuY2UuXG4gKiBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIEVDQyBMaWJyYXJ5IGlzIG5vdCBwcm92aWRlZC5cbiAqIFlvdSBtdXN0IGNhbGwgaW5pdEVjY0xpYigpIHdpdGggYSB2YWxpZCBUaW55U2VjcDI1NmsxSW50ZXJmYWNlIGluc3RhbmNlIGJlZm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgRUNDIExpYnJhcnkgaW5zdGFuY2UuXG4gKiBAdGhyb3dzIEVycm9yIGlmIHRoZSBFQ0MgTGlicmFyeSBpcyBub3QgcHJvdmlkZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFY2NMaWIoKSB7XG4gIGlmICghX0VDQ0xJQl9DQUNIRS5lY2NMaWIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ05vIEVDQyBMaWJyYXJ5IHByb3ZpZGVkLiBZb3UgbXVzdCBjYWxsIGluaXRFY2NMaWIoKSB3aXRoIGEgdmFsaWQgVGlueVNlY3AyNTZrMUludGVyZmFjZSBpbnN0YW5jZScsXG4gICAgKTtcbiAgcmV0dXJuIF9FQ0NMSUJfQ0FDSEUuZWNjTGliO1xufVxuY29uc3QgaCA9IGhleCA9PiB0b29scy5mcm9tSGV4KGhleCk7XG4vKipcbiAqIFZlcmlmaWVzIHRoZSBFQ0MgZnVuY3Rpb25hbGl0eS5cbiAqXG4gKiBAcGFyYW0gZWNjIC0gVGhlIFRpbnlTZWNwMjU2azFJbnRlcmZhY2Ugb2JqZWN0LlxuICovXG5mdW5jdGlvbiB2ZXJpZnlFY2MoZWNjKSB7XG4gIGFzc2VydCh0eXBlb2YgZWNjLmlzWE9ubHlQb2ludCA9PT0gJ2Z1bmN0aW9uJyk7XG4gIGFzc2VydChcbiAgICBlY2MuaXNYT25seVBvaW50KFxuICAgICAgaCgnNzliZTY2N2VmOWRjYmJhYzU1YTA2Mjk1Y2U4NzBiMDcwMjliZmNkYjJkY2UyOGQ5NTlmMjgxNWIxNmY4MTc5OCcpLFxuICAgICksXG4gICk7XG4gIGFzc2VydChcbiAgICBlY2MuaXNYT25seVBvaW50KFxuICAgICAgaCgnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmVlZmZmZmMyZScpLFxuICAgICksXG4gICk7XG4gIGFzc2VydChcbiAgICBlY2MuaXNYT25seVBvaW50KFxuICAgICAgaCgnZjkzMDhhMDE5MjU4YzMxMDQ5MzQ0Zjg1Zjg5ZDUyMjliNTMxYzg0NTgzNmY5OWIwODYwMWYxMTNiY2UwMzZmOScpLFxuICAgICksXG4gICk7XG4gIGFzc2VydChcbiAgICBlY2MuaXNYT25seVBvaW50KFxuICAgICAgaCgnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMScpLFxuICAgICksXG4gICk7XG4gIGFzc2VydChcbiAgICAhZWNjLmlzWE9ubHlQb2ludChcbiAgICAgIGgoJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnKSxcbiAgICApLFxuICApO1xuICBhc3NlcnQoXG4gICAgIWVjYy5pc1hPbmx5UG9pbnQoXG4gICAgICBoKCdmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZWZmZmZmYzJmJyksXG4gICAgKSxcbiAgKTtcbiAgYXNzZXJ0KHR5cGVvZiBlY2MueE9ubHlQb2ludEFkZFR3ZWFrID09PSAnZnVuY3Rpb24nKTtcbiAgdHdlYWtBZGRWZWN0b3JzLmZvckVhY2godCA9PiB7XG4gICAgY29uc3QgciA9IGVjYy54T25seVBvaW50QWRkVHdlYWsoaCh0LnB1YmtleSksIGgodC50d2VhaykpO1xuICAgIGlmICh0LnJlc3VsdCA9PT0gbnVsbCkge1xuICAgICAgYXNzZXJ0KHIgPT09IG51bGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhc3NlcnQociAhPT0gbnVsbCk7XG4gICAgICBhc3NlcnQoci5wYXJpdHkgPT09IHQucGFyaXR5KTtcbiAgICAgIGFzc2VydCh0b29scy5jb21wYXJlKHIueE9ubHlQdWJrZXksIGgodC5yZXN1bHQpKSA9PT0gMCk7XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIGFzc2VydChib29sKSB7XG4gIGlmICghYm9vbCkgdGhyb3cgbmV3IEVycm9yKCdlY2MgbGlicmFyeSBpbnZhbGlkJyk7XG59XG5jb25zdCB0d2Vha0FkZFZlY3RvcnMgPSBbXG4gIHtcbiAgICBwdWJrZXk6ICc3OWJlNjY3ZWY5ZGNiYmFjNTVhMDYyOTVjZTg3MGIwNzAyOWJmY2RiMmRjZTI4ZDk1OWYyODE1YjE2ZjgxNzk4JyxcbiAgICB0d2VhazogJ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlYmFhZWRjZTZhZjQ4YTAzYmJmZDI1ZThjZDAzNjQxNDAnLFxuICAgIHBhcml0eTogLTEsXG4gICAgcmVzdWx0OiBudWxsLFxuICB9LFxuICB7XG4gICAgcHVia2V5OiAnMTYxN2QzOGVkOGQ4NjU3ZGE0ZDQ3NjFlODA1N2JjMzk2ZWE5ZTRiOWQyOTc3NmQ0YmUwOTYwMTZkYmQyNTA5YicsXG4gICAgdHdlYWs6ICdhODM5N2E5MzVmMGRmY2ViYTZiYTk2MThmNjQ1MWVmNGQ4MDYzN2FiZjRlNmFmMjY2OWZiYzlkZTZhOGZkMmFjJyxcbiAgICBwYXJpdHk6IDEsXG4gICAgcmVzdWx0OiAnZTQ3OGY5OWRhYjkxMDUyYWIzOWEzM2VhMzVmZDVlNmU0OTMzZjRkMjgwMjNjZDU5N2M5YTFmNjc2MDM0NmFkZicsXG4gIH0sXG4gIHtcbiAgICBwdWJrZXk6ICcyYzBiN2NmOTUzMjRhMDdkMDUzOThiMjQwMTc0ZGMwYzJiZTQ0NGQ5NmIxNTlhYTZjN2Y3YjFlNjY4NjgwOTkxJyxcbiAgICB0d2VhazogJzgyM2MzY2QyMTQyNzQ0YjA3NWE4N2VhZGU3ZTFiODY3OGJhMzA4ZDU2NjIyNmEwMDU2Y2EyYjdhNzZmODZiNDcnLFxuICAgIHBhcml0eTogMCxcbiAgICByZXN1bHQ6ICc5NTM0ZjhkYzhjNmRlZGEyZGMwMDc2NTU5ODFjNzhiNDljNWQ5NmM3NzhmYmYzNjM0NjJhMTFlYzlkZmQ5NDhjJyxcbiAgfSxcbl07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Block: () => (/* reexport safe */ _block_js__WEBPACK_IMPORTED_MODULE_5__.Block),\n/* harmony export */   Psbt: () => (/* reexport safe */ _psbt_js__WEBPACK_IMPORTED_MODULE_6__.Psbt),\n/* harmony export */   Transaction: () => (/* reexport safe */ _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction),\n/* harmony export */   address: () => (/* reexport module object */ _address_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   crypto: () => (/* reexport module object */ _crypto_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   initEccLib: () => (/* reexport safe */ _ecc_lib_js__WEBPACK_IMPORTED_MODULE_9__.initEccLib),\n/* harmony export */   networks: () => (/* reexport module object */ _networks_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   opcodes: () => (/* reexport safe */ _ops_js__WEBPACK_IMPORTED_MODULE_7__.OPS),\n/* harmony export */   payments: () => (/* reexport module object */ _payments_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   script: () => (/* reexport module object */ _script_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./payments/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./block.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/block.js\");\n/* harmony import */ var _psbt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./psbt.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js\");\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ops.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ecc_lib.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n\n\n\n\n\n\n\n\n/** @hidden */\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ0Y7QUFDSTtBQUNNO0FBQ1Y7QUFDaUI7QUFDcEI7QUFDRjtBQUNqQztBQUMwQztBQUNLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFkZHJlc3MgZnJvbSAnLi9hZGRyZXNzLmpzJztcbmltcG9ydCAqIGFzIGNyeXB0byBmcm9tICcuL2NyeXB0by5qcyc7XG5pbXBvcnQgKiBhcyBuZXR3b3JrcyBmcm9tICcuL25ldHdvcmtzLmpzJztcbmltcG9ydCAqIGFzIHBheW1lbnRzIGZyb20gJy4vcGF5bWVudHMvaW5kZXguanMnO1xuaW1wb3J0ICogYXMgc2NyaXB0IGZyb20gJy4vc2NyaXB0LmpzJztcbmV4cG9ydCB7IGFkZHJlc3MsIGNyeXB0bywgbmV0d29ya3MsIHBheW1lbnRzLCBzY3JpcHQgfTtcbmV4cG9ydCB7IEJsb2NrIH0gZnJvbSAnLi9ibG9jay5qcyc7XG5leHBvcnQgeyBQc2J0IH0gZnJvbSAnLi9wc2J0LmpzJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgeyBPUFMgYXMgb3Bjb2RlcyB9IGZyb20gJy4vb3BzLmpzJztcbmV4cG9ydCB7IFRyYW5zYWN0aW9uIH0gZnJvbSAnLi90cmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgeyBpbml0RWNjTGliIH0gZnJvbSAnLi9lY2NfbGliLmpzJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastMerkleRoot: () => (/* binding */ fastMerkleRoot)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n/**\n * Calculates the Merkle root of an array of buffers using a specified digest function.\n *\n * @param values - The array of buffers.\n * @param digestFn - The digest function used to calculate the hash of the concatenated buffers.\n * @returns The Merkle root as a buffer.\n * @throws {TypeError} If the values parameter is not an array or the digestFn parameter is not a function.\n */\nfunction fastMerkleRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function')\n    throw TypeError('Expected digest Function');\n  let length = values.length;\n  const results = values.concat();\n  while (length > 1) {\n    let j = 0;\n    for (let i = 0; i < length; i += 2, ++j) {\n      const left = results[i];\n      const right = i + 1 === length ? left : results[i + 1];\n      const data = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n    length = j;\n  }\n  return results[0];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL21lcmtsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVc7QUFDdkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBLG1CQUFtQixvREFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL21lcmtsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgTWVya2xlIHJvb3Qgb2YgYW4gYXJyYXkgb2YgYnVmZmVycyB1c2luZyBhIHNwZWNpZmllZCBkaWdlc3QgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHZhbHVlcyAtIFRoZSBhcnJheSBvZiBidWZmZXJzLlxuICogQHBhcmFtIGRpZ2VzdEZuIC0gVGhlIGRpZ2VzdCBmdW5jdGlvbiB1c2VkIHRvIGNhbGN1bGF0ZSB0aGUgaGFzaCBvZiB0aGUgY29uY2F0ZW5hdGVkIGJ1ZmZlcnMuXG4gKiBAcmV0dXJucyBUaGUgTWVya2xlIHJvb3QgYXMgYSBidWZmZXIuXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IElmIHRoZSB2YWx1ZXMgcGFyYW1ldGVyIGlzIG5vdCBhbiBhcnJheSBvciB0aGUgZGlnZXN0Rm4gcGFyYW1ldGVyIGlzIG5vdCBhIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmFzdE1lcmtsZVJvb3QodmFsdWVzLCBkaWdlc3RGbikge1xuICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWVzKSkgdGhyb3cgVHlwZUVycm9yKCdFeHBlY3RlZCB2YWx1ZXMgQXJyYXknKTtcbiAgaWYgKHR5cGVvZiBkaWdlc3RGbiAhPT0gJ2Z1bmN0aW9uJylcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGRpZ2VzdCBGdW5jdGlvbicpO1xuICBsZXQgbGVuZ3RoID0gdmFsdWVzLmxlbmd0aDtcbiAgY29uc3QgcmVzdWx0cyA9IHZhbHVlcy5jb25jYXQoKTtcbiAgd2hpbGUgKGxlbmd0aCA+IDEpIHtcbiAgICBsZXQgaiA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMiwgKytqKSB7XG4gICAgICBjb25zdCBsZWZ0ID0gcmVzdWx0c1tpXTtcbiAgICAgIGNvbnN0IHJpZ2h0ID0gaSArIDEgPT09IGxlbmd0aCA/IGxlZnQgOiByZXN1bHRzW2kgKyAxXTtcbiAgICAgIGNvbnN0IGRhdGEgPSB0b29scy5jb25jYXQoW2xlZnQsIHJpZ2h0XSk7XG4gICAgICByZXN1bHRzW2pdID0gZGlnZXN0Rm4oZGF0YSk7XG4gICAgfVxuICAgIGxlbmd0aCA9IGo7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdHNbMF07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/merkle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitcoin: () => (/* binding */ bitcoin),\n/* harmony export */   regtest: () => (/* binding */ regtest),\n/* harmony export */   testnet: () => (/* binding */ testnet)\n/* harmony export */ });\n// https://en.bitcoin.it/wiki/List_of_address_prefixes\n// Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731\n/**\n * Represents the Bitcoin network configuration.\n */\nconst bitcoin = {\n  /**\n   * The message prefix used for signing Bitcoin messages.\n   */\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  /**\n   * The Bech32 prefix used for Bitcoin addresses.\n   */\n  bech32: 'bc',\n  /**\n   * The BIP32 key prefixes for Bitcoin.\n   */\n  bip32: {\n    /**\n     * The public key prefix for BIP32 extended public keys.\n     */\n    public: 0x0488b21e,\n    /**\n     * The private key prefix for BIP32 extended private keys.\n     */\n    private: 0x0488ade4,\n  },\n  /**\n   * The prefix for Bitcoin public key hashes.\n   */\n  pubKeyHash: 0x00,\n  /**\n   * The prefix for Bitcoin script hashes.\n   */\n  scriptHash: 0x05,\n  /**\n   * The prefix for Bitcoin Wallet Import Format (WIF) private keys.\n   */\n  wif: 0x80,\n};\n/**\n * Represents the regtest network configuration.\n */\nconst regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n/**\n * Represents the testnet network configuration.\n */\nconst testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL25ldHdvcmtzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL25ldHdvcmtzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZW4uYml0Y29pbi5pdC93aWtpL0xpc3Rfb2ZfYWRkcmVzc19wcmVmaXhlc1xuLy8gRG9nZWNvaW4gQklQMzIgaXMgYSBwcm9wb3NlZCBzdGFuZGFyZDogaHR0cHM6Ly9iaXRjb2ludGFsay5vcmcvaW5kZXgucGhwP3RvcGljPTQwOTczMVxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBCaXRjb2luIG5ldHdvcmsgY29uZmlndXJhdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IGJpdGNvaW4gPSB7XG4gIC8qKlxuICAgKiBUaGUgbWVzc2FnZSBwcmVmaXggdXNlZCBmb3Igc2lnbmluZyBCaXRjb2luIG1lc3NhZ2VzLlxuICAgKi9cbiAgbWVzc2FnZVByZWZpeDogJ1xceDE4Qml0Y29pbiBTaWduZWQgTWVzc2FnZTpcXG4nLFxuICAvKipcbiAgICogVGhlIEJlY2gzMiBwcmVmaXggdXNlZCBmb3IgQml0Y29pbiBhZGRyZXNzZXMuXG4gICAqL1xuICBiZWNoMzI6ICdiYycsXG4gIC8qKlxuICAgKiBUaGUgQklQMzIga2V5IHByZWZpeGVzIGZvciBCaXRjb2luLlxuICAgKi9cbiAgYmlwMzI6IHtcbiAgICAvKipcbiAgICAgKiBUaGUgcHVibGljIGtleSBwcmVmaXggZm9yIEJJUDMyIGV4dGVuZGVkIHB1YmxpYyBrZXlzLlxuICAgICAqL1xuICAgIHB1YmxpYzogMHgwNDg4YjIxZSxcbiAgICAvKipcbiAgICAgKiBUaGUgcHJpdmF0ZSBrZXkgcHJlZml4IGZvciBCSVAzMiBleHRlbmRlZCBwcml2YXRlIGtleXMuXG4gICAgICovXG4gICAgcHJpdmF0ZTogMHgwNDg4YWRlNCxcbiAgfSxcbiAgLyoqXG4gICAqIFRoZSBwcmVmaXggZm9yIEJpdGNvaW4gcHVibGljIGtleSBoYXNoZXMuXG4gICAqL1xuICBwdWJLZXlIYXNoOiAweDAwLFxuICAvKipcbiAgICogVGhlIHByZWZpeCBmb3IgQml0Y29pbiBzY3JpcHQgaGFzaGVzLlxuICAgKi9cbiAgc2NyaXB0SGFzaDogMHgwNSxcbiAgLyoqXG4gICAqIFRoZSBwcmVmaXggZm9yIEJpdGNvaW4gV2FsbGV0IEltcG9ydCBGb3JtYXQgKFdJRikgcHJpdmF0ZSBrZXlzLlxuICAgKi9cbiAgd2lmOiAweDgwLFxufTtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgcmVndGVzdCBuZXR3b3JrIGNvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCByZWd0ZXN0ID0ge1xuICBtZXNzYWdlUHJlZml4OiAnXFx4MThCaXRjb2luIFNpZ25lZCBNZXNzYWdlOlxcbicsXG4gIGJlY2gzMjogJ2JjcnQnLFxuICBiaXAzMjoge1xuICAgIHB1YmxpYzogMHgwNDM1ODdjZixcbiAgICBwcml2YXRlOiAweDA0MzU4Mzk0LFxuICB9LFxuICBwdWJLZXlIYXNoOiAweDZmLFxuICBzY3JpcHRIYXNoOiAweGM0LFxuICB3aWY6IDB4ZWYsXG59O1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0ZXN0bmV0IG5ldHdvcmsgY29uZmlndXJhdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHRlc3RuZXQgPSB7XG4gIG1lc3NhZ2VQcmVmaXg6ICdcXHgxOEJpdGNvaW4gU2lnbmVkIE1lc3NhZ2U6XFxuJyxcbiAgYmVjaDMyOiAndGInLFxuICBiaXAzMjoge1xuICAgIHB1YmxpYzogMHgwNDM1ODdjZixcbiAgICBwcml2YXRlOiAweDA0MzU4Mzk0LFxuICB9LFxuICBwdWJLZXlIYXNoOiAweDZmLFxuICBzY3JpcHRIYXNoOiAweGM0LFxuICB3aWY6IDB4ZWYsXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPS: () => (/* binding */ OPS),\n/* harmony export */   REVERSE_OPS: () => (/* binding */ REVERSE_OPS)\n/* harmony export */ });\nconst OPS = {\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_NOP3: 178,\n  OP_CHECKSEQUENCEVERIFY: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  OP_CHECKSIGADD: 186,\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255,\n};\nconst REVERSE_OPS = {};\nfor (const op of Object.keys(OPS)) {\n  const code = OPS[op];\n  REVERSE_OPS[code] = op;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL29wcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0QiIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vb3BzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE9QUyA9IHtcbiAgT1BfRkFMU0U6IDAsXG4gIE9QXzA6IDAsXG4gIE9QX1BVU0hEQVRBMTogNzYsXG4gIE9QX1BVU0hEQVRBMjogNzcsXG4gIE9QX1BVU0hEQVRBNDogNzgsXG4gIE9QXzFORUdBVEU6IDc5LFxuICBPUF9SRVNFUlZFRDogODAsXG4gIE9QX1RSVUU6IDgxLFxuICBPUF8xOiA4MSxcbiAgT1BfMjogODIsXG4gIE9QXzM6IDgzLFxuICBPUF80OiA4NCxcbiAgT1BfNTogODUsXG4gIE9QXzY6IDg2LFxuICBPUF83OiA4NyxcbiAgT1BfODogODgsXG4gIE9QXzk6IDg5LFxuICBPUF8xMDogOTAsXG4gIE9QXzExOiA5MSxcbiAgT1BfMTI6IDkyLFxuICBPUF8xMzogOTMsXG4gIE9QXzE0OiA5NCxcbiAgT1BfMTU6IDk1LFxuICBPUF8xNjogOTYsXG4gIE9QX05PUDogOTcsXG4gIE9QX1ZFUjogOTgsXG4gIE9QX0lGOiA5OSxcbiAgT1BfTk9USUY6IDEwMCxcbiAgT1BfVkVSSUY6IDEwMSxcbiAgT1BfVkVSTk9USUY6IDEwMixcbiAgT1BfRUxTRTogMTAzLFxuICBPUF9FTkRJRjogMTA0LFxuICBPUF9WRVJJRlk6IDEwNSxcbiAgT1BfUkVUVVJOOiAxMDYsXG4gIE9QX1RPQUxUU1RBQ0s6IDEwNyxcbiAgT1BfRlJPTUFMVFNUQUNLOiAxMDgsXG4gIE9QXzJEUk9QOiAxMDksXG4gIE9QXzJEVVA6IDExMCxcbiAgT1BfM0RVUDogMTExLFxuICBPUF8yT1ZFUjogMTEyLFxuICBPUF8yUk9UOiAxMTMsXG4gIE9QXzJTV0FQOiAxMTQsXG4gIE9QX0lGRFVQOiAxMTUsXG4gIE9QX0RFUFRIOiAxMTYsXG4gIE9QX0RST1A6IDExNyxcbiAgT1BfRFVQOiAxMTgsXG4gIE9QX05JUDogMTE5LFxuICBPUF9PVkVSOiAxMjAsXG4gIE9QX1BJQ0s6IDEyMSxcbiAgT1BfUk9MTDogMTIyLFxuICBPUF9ST1Q6IDEyMyxcbiAgT1BfU1dBUDogMTI0LFxuICBPUF9UVUNLOiAxMjUsXG4gIE9QX0NBVDogMTI2LFxuICBPUF9TVUJTVFI6IDEyNyxcbiAgT1BfTEVGVDogMTI4LFxuICBPUF9SSUdIVDogMTI5LFxuICBPUF9TSVpFOiAxMzAsXG4gIE9QX0lOVkVSVDogMTMxLFxuICBPUF9BTkQ6IDEzMixcbiAgT1BfT1I6IDEzMyxcbiAgT1BfWE9SOiAxMzQsXG4gIE9QX0VRVUFMOiAxMzUsXG4gIE9QX0VRVUFMVkVSSUZZOiAxMzYsXG4gIE9QX1JFU0VSVkVEMTogMTM3LFxuICBPUF9SRVNFUlZFRDI6IDEzOCxcbiAgT1BfMUFERDogMTM5LFxuICBPUF8xU1VCOiAxNDAsXG4gIE9QXzJNVUw6IDE0MSxcbiAgT1BfMkRJVjogMTQyLFxuICBPUF9ORUdBVEU6IDE0MyxcbiAgT1BfQUJTOiAxNDQsXG4gIE9QX05PVDogMTQ1LFxuICBPUF8wTk9URVFVQUw6IDE0NixcbiAgT1BfQUREOiAxNDcsXG4gIE9QX1NVQjogMTQ4LFxuICBPUF9NVUw6IDE0OSxcbiAgT1BfRElWOiAxNTAsXG4gIE9QX01PRDogMTUxLFxuICBPUF9MU0hJRlQ6IDE1MixcbiAgT1BfUlNISUZUOiAxNTMsXG4gIE9QX0JPT0xBTkQ6IDE1NCxcbiAgT1BfQk9PTE9SOiAxNTUsXG4gIE9QX05VTUVRVUFMOiAxNTYsXG4gIE9QX05VTUVRVUFMVkVSSUZZOiAxNTcsXG4gIE9QX05VTU5PVEVRVUFMOiAxNTgsXG4gIE9QX0xFU1NUSEFOOiAxNTksXG4gIE9QX0dSRUFURVJUSEFOOiAxNjAsXG4gIE9QX0xFU1NUSEFOT1JFUVVBTDogMTYxLFxuICBPUF9HUkVBVEVSVEhBTk9SRVFVQUw6IDE2MixcbiAgT1BfTUlOOiAxNjMsXG4gIE9QX01BWDogMTY0LFxuICBPUF9XSVRISU46IDE2NSxcbiAgT1BfUklQRU1EMTYwOiAxNjYsXG4gIE9QX1NIQTE6IDE2NyxcbiAgT1BfU0hBMjU2OiAxNjgsXG4gIE9QX0hBU0gxNjA6IDE2OSxcbiAgT1BfSEFTSDI1NjogMTcwLFxuICBPUF9DT0RFU0VQQVJBVE9SOiAxNzEsXG4gIE9QX0NIRUNLU0lHOiAxNzIsXG4gIE9QX0NIRUNLU0lHVkVSSUZZOiAxNzMsXG4gIE9QX0NIRUNLTVVMVElTSUc6IDE3NCxcbiAgT1BfQ0hFQ0tNVUxUSVNJR1ZFUklGWTogMTc1LFxuICBPUF9OT1AxOiAxNzYsXG4gIE9QX05PUDI6IDE3NyxcbiAgT1BfQ0hFQ0tMT0NLVElNRVZFUklGWTogMTc3LFxuICBPUF9OT1AzOiAxNzgsXG4gIE9QX0NIRUNLU0VRVUVOQ0VWRVJJRlk6IDE3OCxcbiAgT1BfTk9QNDogMTc5LFxuICBPUF9OT1A1OiAxODAsXG4gIE9QX05PUDY6IDE4MSxcbiAgT1BfTk9QNzogMTgyLFxuICBPUF9OT1A4OiAxODMsXG4gIE9QX05PUDk6IDE4NCxcbiAgT1BfTk9QMTA6IDE4NSxcbiAgT1BfQ0hFQ0tTSUdBREQ6IDE4NixcbiAgT1BfUFVCS0VZSEFTSDogMjUzLFxuICBPUF9QVUJLRVk6IDI1NCxcbiAgT1BfSU5WQUxJRE9QQ09ERTogMjU1LFxufTtcbmNvbnN0IFJFVkVSU0VfT1BTID0ge307XG5mb3IgKGNvbnN0IG9wIG9mIE9iamVjdC5rZXlzKE9QUykpIHtcbiAgY29uc3QgY29kZSA9IE9QU1tvcF07XG4gIFJFVkVSU0VfT1BTW2NvZGVdID0gb3A7XG59XG5leHBvcnQgeyBPUFMsIFJFVkVSU0VfT1BTIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LEAF_VERSION_TAPSCRIPT: () => (/* binding */ LEAF_VERSION_TAPSCRIPT),\n/* harmony export */   MAX_TAPTREE_DEPTH: () => (/* binding */ MAX_TAPTREE_DEPTH),\n/* harmony export */   findScriptPath: () => (/* binding */ findScriptPath),\n/* harmony export */   rootHashFromPath: () => (/* binding */ rootHashFromPath),\n/* harmony export */   tapTweakHash: () => (/* binding */ tapTweakHash),\n/* harmony export */   tapleafHash: () => (/* binding */ tapleafHash),\n/* harmony export */   toHashTree: () => (/* binding */ toHashTree),\n/* harmony export */   tweakKey: () => (/* binding */ tweakKey)\n/* harmony export */ });\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ecc_lib.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bufferutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\nconst LEAF_VERSION_TAPSCRIPT = 0xc0;\nconst MAX_TAPTREE_DEPTH = 128;\nconst isHashBranch = ht => 'left' in ht && 'right' in ht;\n/**\n * Calculates the root hash from a given control block and leaf hash.\n * @param controlBlock - The control block buffer.\n * @param leafHash - The leaf hash buffer.\n * @returns The root hash buffer.\n * @throws {TypeError} If the control block length is less than 33.\n */\nfunction rootHashFromPath(controlBlock, leafHash) {\n  if (controlBlock.length < 33)\n    throw new TypeError(\n      `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n    );\n  const m = (controlBlock.length - 33) / 32;\n  let kj = leafHash;\n  for (let j = 0; j < m; j++) {\n    const ej = controlBlock.slice(33 + 32 * j, 65 + 32 * j);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(kj, ej) < 0) {\n      kj = tapBranchHash(kj, ej);\n    } else {\n      kj = tapBranchHash(ej, kj);\n    }\n  }\n  return kj;\n}\n/**\n * Build a hash tree of merkle nodes from the scripts binary tree.\n * @param scriptTree - the tree of scripts to pairwise hash.\n */\nfunction toHashTree(scriptTree) {\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isTapleaf)(scriptTree)) return { hash: tapleafHash(scriptTree) };\n  const hashes = [toHashTree(scriptTree[0]), toHashTree(scriptTree[1])];\n  // hashes.sort((a, b) => a.hash.compare(b.hash));\n  hashes.sort((a, b) => uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.hash, b.hash));\n  const [left, right] = hashes;\n  return {\n    hash: tapBranchHash(left.hash, right.hash),\n    left,\n    right,\n  };\n}\n/**\n * Given a HashTree, finds the path from a particular hash to the root.\n * @param node - the root of the tree\n * @param hash - the hash to search for\n * @returns - array of sibling hashes, from leaf (inclusive) to root\n * (exclusive) needed to prove inclusion of the specified hash. undefined if no\n * path is found\n */\nfunction findScriptPath(node, hash) {\n  if (isHashBranch(node)) {\n    const leftPath = findScriptPath(node.left, hash);\n    if (leftPath !== undefined) return [...leftPath, node.right.hash];\n    const rightPath = findScriptPath(node.right, hash);\n    if (rightPath !== undefined) return [...rightPath, node.left.hash];\n  } else if (uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(node.hash, hash) === 0) {\n    return [];\n  }\n  return undefined;\n}\n/**\n * Calculates the tapleaf hash for a given Tapleaf object.\n * @param leaf - The Tapleaf object to calculate the hash for.\n * @returns The tapleaf hash as a Buffer.\n */\nfunction tapleafHash(leaf) {\n  const version = leaf.version || LEAF_VERSION_TAPSCRIPT;\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n    'TapLeaf',\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([Uint8Array.from([version]), serializeScript(leaf.output)]),\n  );\n}\n/**\n * Computes the taproot tweak hash for a given public key and optional hash.\n * If a hash is provided, the public key and hash are concatenated before computing the hash.\n * If no hash is provided, only the public key is used to compute the hash.\n *\n * @param pubKey - The public key buffer.\n * @param h - The optional hash buffer.\n * @returns The taproot tweak hash.\n */\nfunction tapTweakHash(pubKey, h) {\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n    'TapTweak',\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat(h ? [pubKey, h] : [pubKey]),\n  );\n}\n/**\n * Tweak a public key with a given tweak hash.\n * @param pubKey - The public key to be tweaked.\n * @param h - The tweak hash.\n * @returns The tweaked public key or null if the input is invalid.\n */\nfunction tweakKey(pubKey, h) {\n  if (!(pubKey instanceof Uint8Array)) return null;\n  if (pubKey.length !== 32) return null;\n  if (h && h.length !== 32) return null;\n  const tweakHash = tapTweakHash(pubKey, h);\n  const res = (0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_0__.getEccLib)().xOnlyPointAddTweak(pubKey, tweakHash);\n  if (!res || res.xOnlyPubkey === null) return null;\n  return {\n    parity: res.parity,\n    x: Uint8Array.from(res.xOnlyPubkey),\n  };\n}\n/**\n * Computes the TapBranch hash by concatenating two buffers and applying the 'TapBranch' tagged hash algorithm.\n *\n * @param a - The first buffer.\n * @param b - The second buffer.\n * @returns The TapBranch hash of the concatenated buffers.\n */\nfunction tapBranchHash(a, b) {\n  return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash('TapBranch', uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([a, b]));\n}\n/**\n * Serializes a script by encoding its length as a varint and concatenating it with the script.\n *\n * @param s - The script to be serialized.\n * @returns The serialized script as a Buffer.\n */\nfunction serializeScript(s) {\n  /* global BigInt */\n  const varintLen = _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__.varuint.encodingLength(s.length);\n  const buffer = new Uint8Array(varintLen);\n  _bufferutils_js__WEBPACK_IMPORTED_MODULE_2__.varuint.encode(s.length, buffer);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([buffer, s]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2data: () => (/* binding */ p2data)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\n// output: OP_RETURN ...\n/**\n * Embeds data in a Bitcoin payment.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The modified payment object.\n * @throws {TypeError} If there is not enough data or if the output is invalid.\n */\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_4__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        data: valibot__WEBPACK_IMPORTED_MODULE_4__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'embed', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.data) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'data', () => {\n    if (!a.output) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(chunk => valibot__WEBPACK_IMPORTED_MODULE_4__.is(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema, chunk)))\n        throw new TypeError('Output is invalid');\n      if (a.data && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL2VtYmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0RDtBQUNwQjtBQUNnQjtBQUN0QjtBQUNMO0FBQzdCLFlBQVksMkNBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ087QUFDUDtBQUNBLHlCQUF5QixnQkFBZ0IsWUFBWTtBQUNyRCxFQUFFLDBDQUFPO0FBQ1QsSUFBSSw0Q0FBUztBQUNiLE1BQU0sMkNBQVE7QUFDZCxpQkFBaUIsMkNBQVEsR0FBRztBQUM1QixnQkFBZ0IsbURBQVk7QUFDNUIsY0FBYywwQ0FBTyxDQUFDLG1EQUFZO0FBQ2xDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsaURBQWU7QUFDOUMsY0FBYztBQUNkLEVBQUUsMENBQVM7QUFDWDtBQUNBLFdBQVcsK0NBQWU7QUFDMUIsR0FBRztBQUNILEVBQUUsMENBQVM7QUFDWDtBQUNBLFdBQVcsaURBQWlCO0FBQzVCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaURBQWlCO0FBQ3RDO0FBQ0EsMENBQTBDLHVDQUFJLENBQUMsbURBQVk7QUFDM0Q7QUFDQSxxQkFBcUIsc0RBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vcGF5bWVudHMvZW1iZWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYml0Y29pbiBhcyBCSVRDT0lOX05FVFdPUksgfSBmcm9tICcuLi9uZXR3b3Jrcy5qcyc7XG5pbXBvcnQgKiBhcyBic2NyaXB0IGZyb20gJy4uL3NjcmlwdC5qcyc7XG5pbXBvcnQgeyBzdGFja3NFcXVhbCwgQnVmZmVyU2NoZW1hIH0gZnJvbSAnLi4vdHlwZXMuanMnO1xuaW1wb3J0ICogYXMgbGF6eSBmcm9tICcuL2xhenkuanMnO1xuaW1wb3J0ICogYXMgdiBmcm9tICd2YWxpYm90JztcbmNvbnN0IE9QUyA9IGJzY3JpcHQuT1BTO1xuLy8gb3V0cHV0OiBPUF9SRVRVUk4gLi4uXG4vKipcbiAqIEVtYmVkcyBkYXRhIGluIGEgQml0Y29pbiBwYXltZW50LlxuICogQHBhcmFtIGEgLSBUaGUgcGF5bWVudCBvYmplY3QuXG4gKiBAcGFyYW0gb3B0cyAtIE9wdGlvbmFsIHBheW1lbnQgb3B0aW9ucy5cbiAqIEByZXR1cm5zIFRoZSBtb2RpZmllZCBwYXltZW50IG9iamVjdC5cbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gSWYgdGhlcmUgaXMgbm90IGVub3VnaCBkYXRhIG9yIGlmIHRoZSBvdXRwdXQgaXMgaW52YWxpZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHAyZGF0YShhLCBvcHRzKSB7XG4gIGlmICghYS5kYXRhICYmICFhLm91dHB1dCkgdGhyb3cgbmV3IFR5cGVFcnJvcignTm90IGVub3VnaCBkYXRhJyk7XG4gIG9wdHMgPSBPYmplY3QuYXNzaWduKHsgdmFsaWRhdGU6IHRydWUgfSwgb3B0cyB8fCB7fSk7XG4gIHYucGFyc2UoXG4gICAgdi5wYXJ0aWFsKFxuICAgICAgdi5vYmplY3Qoe1xuICAgICAgICBuZXR3b3JrOiB2Lm9iamVjdCh7fSksXG4gICAgICAgIG91dHB1dDogQnVmZmVyU2NoZW1hLFxuICAgICAgICBkYXRhOiB2LmFycmF5KEJ1ZmZlclNjaGVtYSksXG4gICAgICB9KSxcbiAgICApLFxuICAgIGEsXG4gICk7XG4gIGNvbnN0IG5ldHdvcmsgPSBhLm5ldHdvcmsgfHwgQklUQ09JTl9ORVRXT1JLO1xuICBjb25zdCBvID0geyBuYW1lOiAnZW1iZWQnLCBuZXR3b3JrIH07XG4gIGxhenkucHJvcChvLCAnb3V0cHV0JywgKCkgPT4ge1xuICAgIGlmICghYS5kYXRhKSByZXR1cm47XG4gICAgcmV0dXJuIGJzY3JpcHQuY29tcGlsZShbT1BTLk9QX1JFVFVSTl0uY29uY2F0KGEuZGF0YSkpO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICdkYXRhJywgKCkgPT4ge1xuICAgIGlmICghYS5vdXRwdXQpIHJldHVybjtcbiAgICByZXR1cm4gYnNjcmlwdC5kZWNvbXBpbGUoYS5vdXRwdXQpLnNsaWNlKDEpO1xuICB9KTtcbiAgLy8gZXh0ZW5kZWQgdmFsaWRhdGlvblxuICBpZiAob3B0cy52YWxpZGF0ZSkge1xuICAgIGlmIChhLm91dHB1dCkge1xuICAgICAgY29uc3QgY2h1bmtzID0gYnNjcmlwdC5kZWNvbXBpbGUoYS5vdXRwdXQpO1xuICAgICAgaWYgKGNodW5rc1swXSAhPT0gT1BTLk9QX1JFVFVSTikgdGhyb3cgbmV3IFR5cGVFcnJvcignT3V0cHV0IGlzIGludmFsaWQnKTtcbiAgICAgIGlmICghY2h1bmtzLnNsaWNlKDEpLmV2ZXJ5KGNodW5rID0+IHYuaXMoQnVmZmVyU2NoZW1hLCBjaHVuaykpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPdXRwdXQgaXMgaW52YWxpZCcpO1xuICAgICAgaWYgKGEuZGF0YSAmJiAhc3RhY2tzRXF1YWwoYS5kYXRhLCBvLmRhdGEpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdEYXRhIG1pc21hdGNoJyk7XG4gICAgfVxuICB9XG4gIHJldHVybiBPYmplY3QuYXNzaWduKG8sIGEpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   embed: () => (/* reexport safe */ _embed_js__WEBPACK_IMPORTED_MODULE_0__.p2data),\n/* harmony export */   p2ms: () => (/* reexport safe */ _p2ms_js__WEBPACK_IMPORTED_MODULE_1__.p2ms),\n/* harmony export */   p2pk: () => (/* reexport safe */ _p2pk_js__WEBPACK_IMPORTED_MODULE_2__.p2pk),\n/* harmony export */   p2pkh: () => (/* reexport safe */ _p2pkh_js__WEBPACK_IMPORTED_MODULE_3__.p2pkh),\n/* harmony export */   p2sh: () => (/* reexport safe */ _p2sh_js__WEBPACK_IMPORTED_MODULE_4__.p2sh),\n/* harmony export */   p2tr: () => (/* reexport safe */ _p2tr_js__WEBPACK_IMPORTED_MODULE_7__.p2tr),\n/* harmony export */   p2wpkh: () => (/* reexport safe */ _p2wpkh_js__WEBPACK_IMPORTED_MODULE_5__.p2wpkh),\n/* harmony export */   p2wsh: () => (/* reexport safe */ _p2wsh_js__WEBPACK_IMPORTED_MODULE_6__.p2wsh)\n/* harmony export */ });\n/* harmony import */ var _embed_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./embed.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/embed.js\");\n/* harmony import */ var _p2ms_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./p2ms.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js\");\n/* harmony import */ var _p2pk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./p2pk.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js\");\n/* harmony import */ var _p2pkh_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./p2pkh.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js\");\n/* harmony import */ var _p2sh_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./p2sh.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js\");\n/* harmony import */ var _p2wpkh_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./p2wpkh.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js\");\n/* harmony import */ var _p2wsh_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./p2wsh.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js\");\n/* harmony import */ var _p2tr_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./p2tr.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js\");\n\n\n\n\n\n\n\n\n\n// TODO\n// witness commitment\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkM7QUFDWjtBQUNBO0FBQ0U7QUFDRjtBQUNJO0FBQ0Y7QUFDRjtBQUM4QjtBQUMvRDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wYXltZW50cy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwMmRhdGEgYXMgZW1iZWQgfSBmcm9tICcuL2VtYmVkLmpzJztcbmltcG9ydCB7IHAybXMgfSBmcm9tICcuL3AybXMuanMnO1xuaW1wb3J0IHsgcDJwayB9IGZyb20gJy4vcDJway5qcyc7XG5pbXBvcnQgeyBwMnBraCB9IGZyb20gJy4vcDJwa2guanMnO1xuaW1wb3J0IHsgcDJzaCB9IGZyb20gJy4vcDJzaC5qcyc7XG5pbXBvcnQgeyBwMndwa2ggfSBmcm9tICcuL3Ayd3BraC5qcyc7XG5pbXBvcnQgeyBwMndzaCB9IGZyb20gJy4vcDJ3c2guanMnO1xuaW1wb3J0IHsgcDJ0ciB9IGZyb20gJy4vcDJ0ci5qcyc7XG5leHBvcnQgeyBlbWJlZCwgcDJtcywgcDJwaywgcDJwa2gsIHAyc2gsIHAyd3BraCwgcDJ3c2gsIHAydHIgfTtcbi8vIFRPRE9cbi8vIHdpdG5lc3MgY29tbWl0bWVudFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prop: () => (/* binding */ prop),\n/* harmony export */   value: () => (/* binding */ value)\n/* harmony export */ });\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL2xhenkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vcGF5bWVudHMvbGF6eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcHJvcChvYmplY3QsIG5hbWUsIGYpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgbmFtZSwge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIGNvbnN0IF92YWx1ZSA9IGYuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXNbbmFtZV0gPSBfdmFsdWU7XG4gICAgICByZXR1cm4gX3ZhbHVlO1xuICAgIH0sXG4gICAgc2V0KF92YWx1ZSkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIG5hbWUsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogX3ZhbHVlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbHVlKGYpIHtcbiAgbGV0IF92YWx1ZTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAoX3ZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiBfdmFsdWU7XG4gICAgX3ZhbHVlID0gZigpO1xuICAgIHJldHVybiBfdmFsdWU7XG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2ms: () => (/* binding */ p2ms)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\n/**\n * Represents a function that creates a Pay-to-Multisig (P2MS) payment object.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The created payment object.\n * @throws {TypeError} If the provided data is not valid.\n */\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_4__.object({}),\n        m: valibot__WEBPACK_IMPORTED_MODULE_4__.number(),\n        n: valibot__WEBPACK_IMPORTED_MODULE_4__.number(),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        pubkeys: valibot__WEBPACK_IMPORTED_MODULE_4__.array(valibot__WEBPACK_IMPORTED_MODULE_4__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint), 'Received invalid pubkey'),\n        signatures: valibot__WEBPACK_IMPORTED_MODULE_4__.array(\n          valibot__WEBPACK_IMPORTED_MODULE_4__.custom(isAcceptableSignature),\n          'Expected signature to be of type isAcceptableSignature',\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.input).slice(1);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_0].concat(a.signatures));\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      valibot__WEBPACK_IMPORTED_MODULE_4__.parse(valibot__WEBPACK_IMPORTED_MODULE_4__.number(), chunks[0], { message: 'Output is invalid' });\n      valibot__WEBPACK_IMPORTED_MODULE_4__.parse(valibot__WEBPACK_IMPORTED_MODULE_4__.number(), chunks[chunks.length - 2], {\n        message: 'Output is invalid',\n      });\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2ms.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2pk: () => (/* binding */ p2pk)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\n/**\n * Creates a pay-to-public-key (P2PK) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PK payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_5__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_5__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_5__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint, 'invalid pubkey'),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_5__.custom(\n          _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature,\n          'Expected signature to be of type isCanonicalScriptSignature',\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.input);\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'p2pk', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([a.signature]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(o.pubkey)) throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.pubkey, o.pubkey) !== 0)\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.compare(a.input, o.input) !== 0)\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3BheW1lbnRzL3AycGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE0RDtBQUNwQjtBQUNZO0FBQ2xCO0FBQ1E7QUFDYjtBQUM3QixZQUFZLDJDQUFXO0FBQ3ZCLFdBQVc7QUFDWCxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCO0FBQ087QUFDUDtBQUNBO0FBQ0EseUJBQXlCLGdCQUFnQixZQUFZO0FBQ3JELEVBQUUsMENBQU87QUFDVCxJQUFJLDRDQUFTO0FBQ2IsTUFBTSwyQ0FBUTtBQUNkLGlCQUFpQiwyQ0FBUSxHQUFHO0FBQzVCLGdCQUFnQixtREFBWTtBQUM1QixnQkFBZ0IsMkNBQVEsQ0FBQyw4Q0FBTztBQUNoQyxtQkFBbUIsMkNBQVE7QUFDM0IsVUFBVSxrRUFBa0M7QUFDNUM7QUFDQTtBQUNBLGVBQWUsbURBQVk7QUFDM0IsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyQ0FBVTtBQUM1QixXQUFXLGlEQUFpQjtBQUM1QixHQUFHO0FBQ0gsK0JBQStCLGlEQUFlO0FBQzlDLGNBQWM7QUFDZCxFQUFFLDBDQUFTO0FBQ1g7QUFDQSxXQUFXLCtDQUFlO0FBQzFCLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQSxXQUFXLCtDQUFlO0FBQzFCLEdBQUc7QUFDSCxFQUFFLDBDQUFTO0FBQ1g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrREFBTztBQUNsQixzQkFBc0IscURBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFEQUFhO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRUFBa0M7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vcGF5bWVudHMvcDJway5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiaXRjb2luIGFzIEJJVENPSU5fTkVUV09SSyB9IGZyb20gJy4uL25ldHdvcmtzLmpzJztcbmltcG9ydCAqIGFzIGJzY3JpcHQgZnJvbSAnLi4vc2NyaXB0LmpzJztcbmltcG9ydCB7IEJ1ZmZlclNjaGVtYSwgaXNQb2ludCB9IGZyb20gJy4uL3R5cGVzLmpzJztcbmltcG9ydCAqIGFzIGxhenkgZnJvbSAnLi9sYXp5LmpzJztcbmltcG9ydCAqIGFzIHRvb2xzIGZyb20gJ3VpbnQ4YXJyYXktdG9vbHMnO1xuaW1wb3J0ICogYXMgdiBmcm9tICd2YWxpYm90JztcbmNvbnN0IE9QUyA9IGJzY3JpcHQuT1BTO1xuLy8gaW5wdXQ6IHtzaWduYXR1cmV9XG4vLyBvdXRwdXQ6IHtwdWJLZXl9IE9QX0NIRUNLU0lHXG4vKipcbiAqIENyZWF0ZXMgYSBwYXktdG8tcHVibGljLWtleSAoUDJQSykgcGF5bWVudCBvYmplY3QuXG4gKlxuICogQHBhcmFtIGEgLSBUaGUgcGF5bWVudCBvYmplY3QgY29udGFpbmluZyB0aGUgbmVjZXNzYXJ5IGRhdGEuXG4gKiBAcGFyYW0gb3B0cyAtIE9wdGlvbmFsIHBheW1lbnQgb3B0aW9ucy5cbiAqIEByZXR1cm5zIFRoZSBQMlBLIHBheW1lbnQgb2JqZWN0LlxuICogQHRocm93cyB7VHlwZUVycm9yfSBJZiB0aGUgcmVxdWlyZWQgZGF0YSBpcyBub3QgcHJvdmlkZWQgb3IgaWYgdGhlIGRhdGEgaXMgaW52YWxpZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHAycGsoYSwgb3B0cykge1xuICBpZiAoIWEuaW5wdXQgJiYgIWEub3V0cHV0ICYmICFhLnB1YmtleSAmJiAhYS5pbnB1dCAmJiAhYS5zaWduYXR1cmUpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignTm90IGVub3VnaCBkYXRhJyk7XG4gIG9wdHMgPSBPYmplY3QuYXNzaWduKHsgdmFsaWRhdGU6IHRydWUgfSwgb3B0cyB8fCB7fSk7XG4gIHYucGFyc2UoXG4gICAgdi5wYXJ0aWFsKFxuICAgICAgdi5vYmplY3Qoe1xuICAgICAgICBuZXR3b3JrOiB2Lm9iamVjdCh7fSksXG4gICAgICAgIG91dHB1dDogQnVmZmVyU2NoZW1hLFxuICAgICAgICBwdWJrZXk6IHYuY3VzdG9tKGlzUG9pbnQsICdpbnZhbGlkIHB1YmtleScpLFxuICAgICAgICBzaWduYXR1cmU6IHYuY3VzdG9tKFxuICAgICAgICAgIGJzY3JpcHQuaXNDYW5vbmljYWxTY3JpcHRTaWduYXR1cmUsXG4gICAgICAgICAgJ0V4cGVjdGVkIHNpZ25hdHVyZSB0byBiZSBvZiB0eXBlIGlzQ2Fub25pY2FsU2NyaXB0U2lnbmF0dXJlJyxcbiAgICAgICAgKSxcbiAgICAgICAgaW5wdXQ6IEJ1ZmZlclNjaGVtYSxcbiAgICAgIH0pLFxuICAgICksXG4gICAgYSxcbiAgKTtcbiAgY29uc3QgX2NodW5rcyA9IGxhenkudmFsdWUoKCkgPT4ge1xuICAgIHJldHVybiBic2NyaXB0LmRlY29tcGlsZShhLmlucHV0KTtcbiAgfSk7XG4gIGNvbnN0IG5ldHdvcmsgPSBhLm5ldHdvcmsgfHwgQklUQ09JTl9ORVRXT1JLO1xuICBjb25zdCBvID0geyBuYW1lOiAncDJwaycsIG5ldHdvcmsgfTtcbiAgbGF6eS5wcm9wKG8sICdvdXRwdXQnLCAoKSA9PiB7XG4gICAgaWYgKCFhLnB1YmtleSkgcmV0dXJuO1xuICAgIHJldHVybiBic2NyaXB0LmNvbXBpbGUoW2EucHVia2V5LCBPUFMuT1BfQ0hFQ0tTSUddKTtcbiAgfSk7XG4gIGxhenkucHJvcChvLCAncHVia2V5JywgKCkgPT4ge1xuICAgIGlmICghYS5vdXRwdXQpIHJldHVybjtcbiAgICByZXR1cm4gYS5vdXRwdXQuc2xpY2UoMSwgLTEpO1xuICB9KTtcbiAgbGF6eS5wcm9wKG8sICdzaWduYXR1cmUnLCAoKSA9PiB7XG4gICAgaWYgKCFhLmlucHV0KSByZXR1cm47XG4gICAgcmV0dXJuIF9jaHVua3MoKVswXTtcbiAgfSk7XG4gIGxhenkucHJvcChvLCAnaW5wdXQnLCAoKSA9PiB7XG4gICAgaWYgKCFhLnNpZ25hdHVyZSkgcmV0dXJuO1xuICAgIHJldHVybiBic2NyaXB0LmNvbXBpbGUoW2Euc2lnbmF0dXJlXSk7XG4gIH0pO1xuICBsYXp5LnByb3AobywgJ3dpdG5lc3MnLCAoKSA9PiB7XG4gICAgaWYgKCFvLmlucHV0KSByZXR1cm47XG4gICAgcmV0dXJuIFtdO1xuICB9KTtcbiAgLy8gZXh0ZW5kZWQgdmFsaWRhdGlvblxuICBpZiAob3B0cy52YWxpZGF0ZSkge1xuICAgIGlmIChhLm91dHB1dCkge1xuICAgICAgaWYgKGEub3V0cHV0W2Eub3V0cHV0Lmxlbmd0aCAtIDFdICE9PSBPUFMuT1BfQ0hFQ0tTSUcpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ091dHB1dCBpcyBpbnZhbGlkJyk7XG4gICAgICBpZiAoIWlzUG9pbnQoby5wdWJrZXkpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdPdXRwdXQgcHVia2V5IGlzIGludmFsaWQnKTtcbiAgICAgIGlmIChhLnB1YmtleSAmJiB0b29scy5jb21wYXJlKGEucHVia2V5LCBvLnB1YmtleSkgIT09IDApXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1B1YmtleSBtaXNtYXRjaCcpO1xuICAgIH1cbiAgICBpZiAoYS5zaWduYXR1cmUpIHtcbiAgICAgIGlmIChhLmlucHV0ICYmIHRvb2xzLmNvbXBhcmUoYS5pbnB1dCwgby5pbnB1dCkgIT09IDApXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NpZ25hdHVyZSBtaXNtYXRjaCcpO1xuICAgIH1cbiAgICBpZiAoYS5pbnB1dCkge1xuICAgICAgaWYgKF9jaHVua3MoKS5sZW5ndGggIT09IDEpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0lucHV0IGlzIGludmFsaWQnKTtcbiAgICAgIGlmICghYnNjcmlwdC5pc0Nhbm9uaWNhbFNjcmlwdFNpZ25hdHVyZShvLnNpZ25hdHVyZSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0lucHV0IGhhcyBpbnZhbGlkIHNpZ25hdHVyZScpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihvLCBhKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pk.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2pkh: () => (/* binding */ p2pkh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\n/**\n * Creates a Pay-to-Public-Key-Hash (P2PKH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PKH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: _types_js__WEBPACK_IMPORTED_MODULE_3__.Hash160bitSchema,\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(25),\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(a.address);\n    const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.input);\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  const o = { name: 'p2pkh', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = new Uint8Array(21);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, network.pubKeyHash);\n    payload.set(o.hash, 1);\n    return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey || o.pubkey);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([a.signature, a.pubkey]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(chunks[1])) throw new TypeError('Input has invalid pubkey');\n      if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.signature, chunks[0]) !== 0)\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.pubkey, chunks[1]) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(chunks[1]);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2pkh.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2sh: () => (/* binding */ p2sh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bs58check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58check */ \"(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\n/**\n * Creates a Pay-to-Script-Hash (P2SH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2SH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(20),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(23),\n        redeem: valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n          valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n            network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n            output: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n            input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n            witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n          }),\n        ),\n        input: _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n        witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  }\n  const o = { network };\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const payload = bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].decode(a.address);\n    const version = uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.readUInt8(payload, 0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.input);\n  });\n  const _redeem = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Uint8Array.from([]) : lastChunk,\n      input: _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = new Uint8Array(21);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(payload, 0, o.network.scriptHash);\n    payload.set(o.hash, 1);\n    return bs58check__WEBPACK_IMPORTED_MODULE_5__[\"default\"].encode(payload);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(o.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(\n      [].concat(_script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        if (redeem.output.byteLength > 520)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 520 bytes',\n          );\n        if (_script_js__WEBPACK_IMPORTED_MODULE_2__.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(redeem.output);\n        if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, hash2) !== 0)\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(redeem.input);\n          if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!(_redeem().output instanceof Uint8Array))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (\n          a.redeem.output &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.redeem.output, redeem.output) !== 0\n        )\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.redeem.input, redeem.input) !== 0)\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.stacksEqual)(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2sh.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2tr: () => (/* binding */ p2tr)\n/* harmony export */ });\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ecc_lib.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ecc_lib.js\");\n/* harmony import */ var _bip341_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bip341.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bech32 */ \"(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../address.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst TAPROOT_WITNESS_VERSION = 0x01;\nconst ANNEX_PREFIX = 0x50;\n/**\n * Creates a Pay-to-Taproot (P2TR) payment object.\n *\n * @param a - The payment object containing the necessary data for P2TR.\n * @param opts - Optional payment options.\n * @returns The P2TR payment object.\n * @throws {TypeError} If the provided data is invalid or insufficient.\n */\nfunction p2tr(a, opts) {\n  if (\n    !a.address &&\n    !a.output &&\n    !a.pubkey &&\n    !a.internalPubkey &&\n    !(a.witness && a.witness.length > 1)\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_9__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_9__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_9__.object({\n        address: valibot__WEBPACK_IMPORTED_MODULE_9__.string(),\n        input: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(0),\n        network: valibot__WEBPACK_IMPORTED_MODULE_9__.object({}),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(34),\n        internalPubkey: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32), // merkle root hash, the tweak\n        pubkey: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(32), // tweaked with `hash` from `internalPubkey`\n        signature: valibot__WEBPACK_IMPORTED_MODULE_9__.union([\n          (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(64),\n          (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(65),\n        ]),\n        witness: valibot__WEBPACK_IMPORTED_MODULE_9__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n        scriptTree: valibot__WEBPACK_IMPORTED_MODULE_9__.custom(_types_js__WEBPACK_IMPORTED_MODULE_2__.isTaptree, 'Taptree is not of type isTaptree'),\n        redeem: valibot__WEBPACK_IMPORTED_MODULE_9__.partial(\n          valibot__WEBPACK_IMPORTED_MODULE_9__.object({\n            output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema, // tapleaf script\n            redeemVersion: valibot__WEBPACK_IMPORTED_MODULE_9__.number(), // tapleaf version\n            witness: valibot__WEBPACK_IMPORTED_MODULE_9__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n          }),\n        ),\n        redeemVersion: valibot__WEBPACK_IMPORTED_MODULE_9__.number(),\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    return (0,_address_js__WEBPACK_IMPORTED_MODULE_7__.fromBech32)(a.address);\n  });\n  // remove annex if present, ignored by taproot\n  const _witness = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    if (!a.witness || !a.witness.length) return;\n    if (\n      a.witness.length >= 2 &&\n      a.witness[a.witness.length - 1][0] === ANNEX_PREFIX\n    ) {\n      return a.witness.slice(0, -1);\n    }\n    return a.witness.slice();\n  });\n  const _hashTree = _lazy_js__WEBPACK_IMPORTED_MODULE_5__.value(() => {\n    if (a.scriptTree) return (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.toHashTree)(a.scriptTree);\n    if (a.hash) return { hash: a.hash };\n    return;\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  const o = { name: 'p2tr', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'address', () => {\n    if (!o.pubkey) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_6__.bech32m.toWords(o.pubkey);\n    words.unshift(TAPROOT_WITNESS_VERSION);\n    return bech32__WEBPACK_IMPORTED_MODULE_6__.bech32m.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'hash', () => {\n    const hashTree = _hashTree();\n    if (hashTree) return hashTree.hash;\n    const w = _witness();\n    if (w && w.length > 1) {\n      const controlBlock = w[w.length - 1];\n      const leafVersion = controlBlock[0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK;\n      const script = w[w.length - 2];\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({ output: script, version: leafVersion });\n      return (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.rootHashFromPath)(controlBlock, leafHash);\n    }\n    return null;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'output', () => {\n    if (!o.pubkey) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_1, o.pubkey]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'redeemVersion', () => {\n    if (a.redeemVersion) return a.redeemVersion;\n    if (\n      a.redeem &&\n      a.redeem.redeemVersion !== undefined &&\n      a.redeem.redeemVersion !== null\n    ) {\n      return a.redeem.redeemVersion;\n    }\n    return _bip341_js__WEBPACK_IMPORTED_MODULE_4__.LEAF_VERSION_TAPSCRIPT;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'redeem', () => {\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length < 2) return;\n    return {\n      output: witness[witness.length - 2],\n      witness: witness.slice(0, -2),\n      redeemVersion: witness[witness.length - 1][0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK,\n    };\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.internalPubkey) {\n      const tweakedKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(o.internalPubkey, o.hash);\n      if (tweakedKey) return tweakedKey.x;\n    }\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'internalPubkey', () => {\n    if (a.internalPubkey) return a.internalPubkey;\n    const witness = _witness();\n    if (witness && witness.length > 1)\n      return witness[witness.length - 1].slice(1, 33);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'signature', () => {\n    if (a.signature) return a.signature;\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length !== 1) return;\n    return witness[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_5__.prop(o, 'witness', () => {\n    if (a.witness) return a.witness;\n    const hashTree = _hashTree();\n    if (hashTree && a.redeem && a.redeem.output && a.internalPubkey) {\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      const path = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.findScriptPath)(hashTree, leafHash);\n      if (!path) return;\n      const outputKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(a.internalPubkey, hashTree.hash);\n      if (!outputKey) return;\n      const controlBock = uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.concat(\n        [\n          Uint8Array.from([o.redeemVersion | outputKey.parity]),\n          a.internalPubkey,\n        ].concat(path),\n      );\n      return [a.redeem.output, controlBock];\n    }\n    if (a.signature) return [a.signature];\n  });\n  // extended validation\n  if (opts.validate) {\n    let pubkey = Uint8Array.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== TAPROOT_WITNESS_VERSION)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      pubkey = _address().data;\n    }\n    if (a.pubkey) {\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, a.pubkey) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.pubkey;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_1 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, a.output.slice(2)) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.output.slice(2);\n    }\n    if (a.internalPubkey) {\n      const tweakedKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(a.internalPubkey, o.hash);\n      if (pubkey.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, tweakedKey.x) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = tweakedKey.x;\n    }\n    if (pubkey && pubkey.length) {\n      if (!(0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__.getEccLib)().isXOnlyPoint(pubkey))\n        throw new TypeError('Invalid pubkey for p2tr');\n    }\n    const hashTree = _hashTree();\n    if (a.hash && hashTree) {\n      if (uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.hash, hashTree.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n    if (a.redeem && a.redeem.output && hashTree) {\n      const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      if (!(0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.findScriptPath)(hashTree, leafHash))\n        throw new TypeError('Redeem script not in tree');\n    }\n    const witness = _witness();\n    // compare the provided redeem data with the one computed from witness\n    if (a.redeem && o.redeem) {\n      if (a.redeem.redeemVersion) {\n        if (a.redeem.redeemVersion !== o.redeem.redeemVersion)\n          throw new TypeError('Redeem.redeemVersion and witness mismatch');\n      }\n      if (a.redeem.output) {\n        if (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // output redeem is constructed from the witness\n        if (\n          o.redeem.output &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.redeem.output, o.redeem.output) !== 0\n        )\n          throw new TypeError('Redeem.output and witness mismatch');\n      }\n      if (a.redeem.witness) {\n        if (\n          o.redeem.witness &&\n          !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.redeem.witness, o.redeem.witness)\n        )\n          throw new TypeError('Redeem.witness and witness mismatch');\n      }\n    }\n    if (witness && witness.length) {\n      if (witness.length === 1) {\n        // key spending\n        if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.signature, witness[0]) !== 0)\n          throw new TypeError('Signature mismatch');\n      } else {\n        // script path spending\n        const controlBlock = witness[witness.length - 1];\n        if (controlBlock.length < 33)\n          throw new TypeError(\n            `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n          );\n        if ((controlBlock.length - 33) % 32 !== 0)\n          throw new TypeError(\n            `The control-block length of ${controlBlock.length} is incorrect!`,\n          );\n        const m = (controlBlock.length - 33) / 32;\n        if (m > 128)\n          throw new TypeError(\n            `The script path is too long. Got ${m}, expected max 128.`,\n          );\n        const internalPubkey = controlBlock.slice(1, 33);\n        if (\n          a.internalPubkey &&\n          uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(a.internalPubkey, internalPubkey) !== 0\n        )\n          throw new TypeError('Internal pubkey mismatch');\n        if (!(0,_ecc_lib_js__WEBPACK_IMPORTED_MODULE_3__.getEccLib)().isXOnlyPoint(internalPubkey))\n          throw new TypeError('Invalid internalPubkey for p2tr witness');\n        const leafVersion = controlBlock[0] & _types_js__WEBPACK_IMPORTED_MODULE_2__.TAPLEAF_VERSION_MASK;\n        const script = witness[witness.length - 2];\n        const leafHash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tapleafHash)({ output: script, version: leafVersion });\n        const hash = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.rootHashFromPath)(controlBlock, leafHash);\n        const outputKey = (0,_bip341_js__WEBPACK_IMPORTED_MODULE_4__.tweakKey)(internalPubkey, hash);\n        if (!outputKey)\n          // todo: needs test data\n          throw new TypeError('Invalid outputKey for p2tr witness');\n        if (pubkey.length && uint8array_tools__WEBPACK_IMPORTED_MODULE_8__.compare(pubkey, outputKey.x) !== 0)\n          throw new TypeError('Pubkey mismatch for p2tr witness');\n        if (outputKey.parity !== (controlBlock[0] & 1))\n          throw new Error('Incorrect parity');\n      }\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2tr.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2wpkh: () => (/* binding */ p2wpkh)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bech32 */ \"(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS;\nconst EMPTY_BUFFER = new Uint8Array(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\n/**\n * Creates a pay-to-witness-public-key-hash (p2wpkh) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The p2wpkh payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_7__.partial(\n      valibot__WEBPACK_IMPORTED_MODULE_7__.object({\n        address: valibot__WEBPACK_IMPORTED_MODULE_7__.string(),\n        hash: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(20),\n        input: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(0),\n        network: valibot__WEBPACK_IMPORTED_MODULE_7__.object({}),\n        output: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(22),\n        pubkey: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint, 'Not a valid pubkey'),\n        signature: valibot__WEBPACK_IMPORTED_MODULE_7__.custom(_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature),\n        witness: valibot__WEBPACK_IMPORTED_MODULE_7__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n      }),\n    ),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_4__.value(() => {\n    const result = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Uint8Array.from(data),\n    };\n  });\n  const network = a.network || _networks_js__WEBPACK_IMPORTED_MODULE_1__.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32__WEBPACK_IMPORTED_MODULE_5__.bech32.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey || o.pubkey);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_2__.compile([OPS.OP_0, o.hash]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_4__.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, a.output.slice(2)) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.pubkey);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!_script_js__WEBPACK_IMPORTED_MODULE_2__.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.signature, a.witness[0]) !== 0)\n        throw new TypeError('Signature mismatch');\n      // if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n      if (a.pubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(a.pubkey, a.witness[1]) !== 0)\n        throw new TypeError('Pubkey mismatch');\n      const pkh = _crypto_js__WEBPACK_IMPORTED_MODULE_0__.hash160(a.witness[1]);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.compare(hash, pkh) !== 0)\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wpkh.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   p2wsh: () => (/* binding */ p2wsh)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lazy.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/lazy.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bech32 */ \"(app-pages-browser)/./node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nconst OPS = _script_js__WEBPACK_IMPORTED_MODULE_1__.OPS;\nconst EMPTY_BUFFER = new Uint8Array(0);\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    chunk instanceof Uint8Array &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\n/**\n * Creates a Pay-to-Witness-Script-Hash (P2WSH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2WSH payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  valibot__WEBPACK_IMPORTED_MODULE_6__.parse(\n    (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NullablePartial)({\n      network: valibot__WEBPACK_IMPORTED_MODULE_6__.object({}),\n      address: valibot__WEBPACK_IMPORTED_MODULE_6__.string(),\n      hash: _types_js__WEBPACK_IMPORTED_MODULE_2__.Buffer256bitSchema,\n      output: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(34),\n      redeem: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NullablePartial)({\n        input: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        network: valibot__WEBPACK_IMPORTED_MODULE_6__.object({}),\n        output: _types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema,\n        witness: valibot__WEBPACK_IMPORTED_MODULE_6__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n      }),\n      input: (0,_types_js__WEBPACK_IMPORTED_MODULE_2__.NBufferSchemaFactory)(0),\n      witness: valibot__WEBPACK_IMPORTED_MODULE_6__.array(_types_js__WEBPACK_IMPORTED_MODULE_2__.BufferSchema),\n    }),\n    a,\n  );\n  const _address = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    const result = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Uint8Array.from(data),\n    };\n  });\n  const _rchunks = _lazy_js__WEBPACK_IMPORTED_MODULE_3__.value(() => {\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || _networks_js__WEBPACK_IMPORTED_MODULE_0__.bitcoin;\n  }\n  const o = { network };\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32__WEBPACK_IMPORTED_MODULE_4__.bech32.encode(network.bech32, words);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__.sha256)(o.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return _script_js__WEBPACK_IMPORTED_MODULE_1__.compile([OPS.OP_0, o.hash]);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = _script_js__WEBPACK_IMPORTED_MODULE_1__.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  _lazy_js__WEBPACK_IMPORTED_MODULE_3__.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Uint8Array.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, a.hash) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, hash2) !== 0)\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty/valid?\n      if (a.redeem.output) {\n        const decompile = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output is invalid');\n        if (a.redeem.output.byteLength > 3600)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 3600 bytes',\n          );\n        if (_script_js__WEBPACK_IMPORTED_MODULE_1__.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_7__.sha256)(a.redeem.output);\n        if (hash.length > 0 && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(hash, hash2) !== 0)\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !_script_js__WEBPACK_IMPORTED_MODULE_1__.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !(0,_types_js__WEBPACK_IMPORTED_MODULE_2__.stacksEqual)(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (\n        a.redeem &&\n        a.redeem.output &&\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(a.redeem.output, wScript) !== 0\n      )\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (_script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/p2wsh.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Psbt: () => (/* binding */ Psbt)\n/* harmony export */ });\n/* harmony import */ var bip174__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bip174 */ \"(app-pages-browser)/./node_modules/.pnpm/bip174@3.0.0-rc.1/node_modules/bip174/src/esm/lib/psbt.js\");\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/address.js\");\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bufferutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./networks.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/networks.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./payments/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var _payments_bip341_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./payments/bip341.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./psbt/bip371.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js\");\n/* harmony import */ var _psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./psbt/psbtutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: _networks_js__WEBPACK_IMPORTED_MODULE_4__.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n *\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n *\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n *\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n *\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n *\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  data;\n  static fromBase64(data, opts = {}) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromBase64(data);\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromHex(data);\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174__WEBPACK_IMPORTED_MODULE_0__.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  __CACHE;\n  opts;\n  constructor(opts = {}, data = new bip174__WEBPACK_IMPORTED_MODULE_0__.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecessor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0,_address_js__WEBPACK_IMPORTED_MODULE_2__.fromOutputScript)(output.script, this.opts.network);\n      } catch (_) {}\n      return {\n        script: (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputFields)(inputData, inputData, 'addInput');\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0,_address_js__WEBPACK_IMPORTED_MODULE_2__.toOutputScript)(address, network);\n      outputData = Object.assign({}, outputData, { script });\n    }\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        undefined,\n        finalScriptsFunc,\n      );\n    return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n  }\n  finalizeTaprootInput(\n    inputIndex,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.tapScriptFinalizer,\n  ) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n        finalScriptsFunc,\n      );\n    throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n  }\n  _finalizeInput(inputIndex, input, finalScriptsFunc = getFinalScripts) {\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  _finalizeTaprootInput(\n    inputIndex,\n    input,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = _psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.tapScriptFinalizer,\n  ) {\n    if (!input.witnessUtxo)\n      throw new Error(\n        `Cannot finalize input #${inputIndex}. Missing withness utxo.`,\n      );\n    // Check key spend first. Increased privacy and reduced block space.\n    if (input.tapKeySig) {\n      const payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2tr({\n        output: input.witnessUtxo.script,\n        signature: input.tapKeySig,\n      });\n      const finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(payment.witness);\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    } else {\n      const { finalScriptWitness } = finalScriptsFunc(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    }\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this.validateSignaturesOfTaprootInput(\n        inputIndex,\n        validator,\n        pubkey,\n      );\n    return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n  }\n  _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(sig.pubkey, pubkey) === 0)\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const tapKeySig = (input || {}).tapKeySig;\n    const tapScriptSig = (input || {}).tapScriptSig;\n    if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length))\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    pubkey = pubkey && (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(pubkey);\n    const allHashses = pubkey\n      ? getTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          pubkey,\n          this.__CACHE,\n        )\n      : getAllTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          this.__CACHE,\n        );\n    if (!allHashses.length) throw new Error('No signatures for this pubkey');\n    const tapKeyHash = allHashses.find(h => !h.leafHash);\n    let validationResultCount = 0;\n    if (tapKeySig && tapKeyHash) {\n      const isValidTapkeySig = validator(\n        tapKeyHash.pubkey,\n        tapKeyHash.hash,\n        trimTaprootSig(tapKeySig),\n      );\n      if (!isValidTapkeySig) return false;\n      validationResultCount++;\n    }\n    if (tapScriptSig) {\n      for (const tapSig of tapScriptSig) {\n        const tapSigHash = allHashses.find(\n          h => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(h.pubkey, tapSig.pubkey) === 0,\n        );\n        if (tapSigHash) {\n          const isValidTapScriptSig = validator(\n            tapSig.pubkey,\n            tapSigHash.hash,\n            trimTaprootSig(tapSig.signature),\n          );\n          if (!isValidTapScriptSig) return false;\n          validationResultCount++;\n        }\n      }\n    }\n    return validationResultCount > 0;\n  }\n  signAllInputsHD(hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(inputIndex, hdKeyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(keyPair, sighashTypes) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(inputIndex, keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input)) {\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        undefined,\n        sighashTypes,\n      );\n    }\n    return this._signInput(inputIndex, keyPair, sighashTypes);\n  }\n  signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n    if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        tapLeafHashToSign,\n        sighashTypes,\n      );\n    throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n  }\n  _signInput(inputIndex, keyPair, sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL]) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  _signTaprootInput(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    const tapKeySig = hashesForSig\n      .filter(h => !h.leafHash)\n      .map(h =>\n        (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n      )[0];\n    const tapScriptSig = hashesForSig\n      .filter(h => !!h.leafHash)\n      .map(h => ({\n        pubkey: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(keyPair.publicKey),\n        signature: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n        leafHash: h.leafHash,\n      }));\n    if (tapKeySig) {\n      this.data.updateInput(inputIndex, { tapKeySig });\n    }\n    if (tapScriptSig.length) {\n      this.data.updateInput(inputIndex, { tapScriptSig });\n    }\n    return this;\n  }\n  signInputAsync(inputIndex, keyPair, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n      if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          undefined,\n          sighashTypes,\n        );\n      return this._signInputAsync(inputIndex, keyPair, sighashTypes);\n    });\n  }\n  signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(this.data.inputs, inputIndex);\n      if ((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          tapLeafHash,\n          sighashTypes,\n        );\n      throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n    });\n  }\n  _signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    return Promise.resolve(keyPair.sign(hash)).then(signature => {\n      const partialSig = [\n        {\n          pubkey: keyPair.publicKey,\n          signature: _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.encode(signature, sighashType),\n        },\n      ];\n      this.data.updateInput(inputIndex, { partialSig });\n    });\n  }\n  async _signTaprootInputAsync(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHash,\n    sighashTypes = [_transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHash,\n      sighashTypes,\n    );\n    const signaturePromises = [];\n    const tapKeyHash = hashesForSig.filter(h => !h.leafHash)[0];\n    if (tapKeyHash) {\n      const tapKeySigPromise = Promise.resolve(\n        keyPair.signSchnorr(tapKeyHash.hash),\n      ).then(sig => {\n        return { tapKeySig: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(sig, input.sighashType) };\n      });\n      signaturePromises.push(tapKeySigPromise);\n    }\n    const tapScriptHashes = hashesForSig.filter(h => !!h.leafHash);\n    if (tapScriptHashes.length) {\n      const tapScriptSigPromises = tapScriptHashes.map(tsh => {\n        return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(\n          signature => {\n            const tapScriptSig = [\n              {\n                pubkey: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(keyPair.publicKey),\n                signature: (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.serializeTaprootSignature)(\n                  signature,\n                  input.sighashType,\n                ),\n                leafHash: tsh.leafHash,\n              },\n            ];\n            return { tapScriptSig };\n          },\n        );\n      });\n      signaturePromises.push(...tapScriptSigPromises);\n    }\n    return Promise.all(signaturePromises).then(results => {\n      results.forEach(v => this.data.updateInput(inputIndex, v));\n    });\n  }\n  checkTaprootHashesForSig(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes,\n  ) {\n    if (typeof keyPair.signSchnorr !== 'function')\n      throw new Error(\n        `Need Schnorr Signer to sign taproot input #${inputIndex}.`,\n      );\n    const hashesForSig = getTaprootHashesForSig(\n      inputIndex,\n      input,\n      this.data.inputs,\n      keyPair.publicKey,\n      this.__CACHE,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    if (!hashesForSig || !hashesForSig.length)\n      throw new Error(\n        `Can not sign for input #${inputIndex} with the key ${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(keyPair.publicKey)}`,\n      );\n    return hashesForSig;\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputFields)(\n      this.data.inputs[inputIndex],\n      updateData,\n      'updateInput',\n    );\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const outputData = this.data.outputs[outputIndex];\n    (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootOutputFields)(outputData, updateData, 'updateOutput');\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  tx;\n  constructor(buffer = Uint8Array.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!(input.hash instanceof Uint8Array) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.reverseBuffer)(uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.fromHex(input.hash))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !(output.script instanceof Uint8Array) ||\n      typeof output.value !== 'bigint'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(\n          pSig => uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(pSig.pubkey, pubkey) === 0,\n        );\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(root.fingerprint, d.masterFingerprint)) return false;\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(root.derivePath(d.path).publicKey, d.pubkey))\n      return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    const throws = (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.isTaprootInput)(input)\n      ? (0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.checkTaprootInputForSigs)(input, action)\n      : (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.checkInputForSig)(input, action);\n    if (throws)\n      throw new Error('Can not modify transaction, signatures exist.');\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = _script_js__WEBPACK_IMPORTED_MODULE_7__.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!(0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(pubkey)}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_3__.reverseBuffer)(Uint8Array.from(input.hash))) + ':' + input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(scriptPubKey, redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(p2wsh.witness);\n    } else {\n      finalScriptWitness = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.witnessStackToScriptWitness)(payment.witness);\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType = input.sighashType || _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL;\n  checkSighashTypeAllowed(sighashType, sighashTypes);\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(prevoutHash, utxoHash) !== 0) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pkh({\n      hash: meaningfulScript.slice(2),\n    }).output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.toHex(meaningfulScript)}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecessor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n  const allPublicKeys = [];\n  if (input.tapInternalKey) {\n    const key = getPrevoutTaprootKey(inputIndex, input, cache);\n    if (key) {\n      allPublicKeys.push(key);\n    }\n  }\n  if (input.tapScriptSig) {\n    const tapScriptPubkeys = input.tapScriptSig.map(tss => tss.pubkey);\n    allPublicKeys.push(...tapScriptPubkeys);\n  }\n  const allHashes = allPublicKeys.map(publicKey =>\n    getTaprootHashesForSig(inputIndex, input, inputs, publicKey, cache),\n  );\n  return allHashes.flat();\n}\nfunction getPrevoutTaprootKey(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2TR)(script) ? script.subarray(2, 34) : null;\n}\nfunction trimTaprootSig(signature) {\n  return signature.length === 64 ? signature : signature.subarray(0, 64);\n}\nfunction getTaprootHashesForSig(\n  inputIndex,\n  input,\n  inputs,\n  pubkey,\n  cache,\n  tapLeafHashToSign,\n  allowedSighashTypes,\n) {\n  const unsignedTx = cache.__TX;\n  const sighashType = input.sighashType || _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_DEFAULT;\n  checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n  const prevOuts = inputs.map((i, index) =>\n    getScriptAndAmountFromUtxo(index, i, cache),\n  );\n  const signingScripts = prevOuts.map(o => o.script);\n  const values = prevOuts.map(o => o.value);\n  const hashes = [];\n  if (input.tapInternalKey && !tapLeafHashToSign) {\n    const outputKey =\n      getPrevoutTaprootKey(inputIndex, input, cache) || Uint8Array.from([]);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare((0,_psbt_bip371_js__WEBPACK_IMPORTED_MODULE_9__.toXOnly)(pubkey), outputKey) === 0) {\n      const tapKeyHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n      );\n      hashes.push({ pubkey, hash: tapKeyHash });\n    }\n  }\n  const tapLeafHashes = (input.tapLeafScript || [])\n    .filter(tapLeaf => (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, tapLeaf.script))\n    .map(tapLeaf => {\n      const hash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_6__.tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion,\n      });\n      return Object.assign({ hash }, tapLeaf);\n    })\n    .filter(\n      tapLeaf =>\n        !tapLeafHashToSign ||\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(tapLeafHashToSign, tapLeaf.hash) === 0,\n    )\n    .map(tapLeaf => {\n      const tapScriptHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n        tapLeaf.hash,\n      );\n      return {\n        pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash,\n      };\n    });\n  return hashes.concat(tapLeafHashes);\n}\nfunction checkSighashTypeAllowed(sighashType, sighashTypes) {\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0,bip174__WEBPACK_IMPORTED_MODULE_0__.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(bipDv.masterFingerprint, hdKeyPair.fingerprint) === 0) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(bipDv.pubkey, node.publicKey) !== 0) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = _payments_index_js__WEBPACK_IMPORTED_MODULE_5__.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return uint8array_tools__WEBPACK_IMPORTED_MODULE_11__.compare(ps.pubkey, pk) === 0;\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.decode(buffer, offset);\n    offset += varuint_bitcoin__WEBPACK_IMPORTED_MODULE_1__.encodingLength(vi.bigintValue);\n    return vi.numberValue;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0n;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0n);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(Number(fee / BigInt(bytes)));\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return script;\n}\nfunction getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return {\n      script: input.witnessUtxo.script,\n      value: input.witnessUtxo.value,\n    };\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n    return { script: o.script, value: o.value };\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !(lastItem instanceof Uint8Array) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = _script_js__WEBPACK_IMPORTED_MODULE_7__.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && _script_js__WEBPACK_IMPORTED_MODULE_7__.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return _script_js__WEBPACK_IMPORTED_MODULE_7__.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2SHScript)(script);\n  const isP2SHP2WSH = isP2SH && redeemScript && (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WSHScript)(redeemScript);\n  const isP2WSH = (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WSHScript)(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n        ? 'p2sh'\n        : isP2WSH\n          ? 'p2wsh'\n          : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(script) || (0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2SHScript)(script)) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction classifyScript(script) {\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2WPKH)(script)) return 'witnesspubkeyhash';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2PKH)(script)) return 'pubkeyhash';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2MS)(script)) return 'multisig';\n  if ((0,_psbt_psbtutils_js__WEBPACK_IMPORTED_MODULE_10__.isP2PK)(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkTaprootInputFields: () => (/* binding */ checkTaprootInputFields),\n/* harmony export */   checkTaprootInputForSigs: () => (/* binding */ checkTaprootInputForSigs),\n/* harmony export */   checkTaprootOutputFields: () => (/* binding */ checkTaprootOutputFields),\n/* harmony export */   isTaprootInput: () => (/* binding */ isTaprootInput),\n/* harmony export */   isTaprootOutput: () => (/* binding */ isTaprootOutput),\n/* harmony export */   serializeTaprootSignature: () => (/* binding */ serializeTaprootSignature),\n/* harmony export */   tapScriptFinalizer: () => (/* binding */ tapScriptFinalizer),\n/* harmony export */   tapTreeFromList: () => (/* binding */ tapTreeFromList),\n/* harmony export */   tapTreeToList: () => (/* binding */ tapTreeToList),\n/* harmony export */   toXOnly: () => (/* binding */ toXOnly),\n/* harmony export */   tweakInternalPubKey: () => (/* binding */ tweakInternalPubKey)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transaction.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _psbtutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./psbtutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\");\n/* harmony import */ var _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../payments/bip341.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/bip341.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../payments/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\n\n\n/**\n * Converts a public key to an X-only public key.\n * @param pubKey The public key to convert.\n * @returns The X-only public key.\n */\nconst toXOnly = pubKey =>\n  pubKey.length === 32 ? pubKey : pubKey.slice(1, 33);\n/**\n * Default tapscript finalizer. It searches for the `tapLeafHashToFinalize` if provided.\n * Otherwise it will search for the tapleaf that has at least one signature and has the shortest path.\n * @param inputIndex the position of the PSBT input.\n * @param input the PSBT input.\n * @param tapLeafHashToFinalize optional, if provided the finalizer will search for a tapleaf that has this hash\n *                              and will try to build the finalScriptWitness.\n * @returns the finalScriptWitness or throws an exception if no tapleaf found.\n */\nfunction tapScriptFinalizer(inputIndex, input, tapLeafHashToFinalize) {\n  const tapLeaf = findTapLeafToFinalize(\n    input,\n    inputIndex,\n    tapLeafHashToFinalize,\n  );\n  try {\n    const sigs = sortSignatures(input, tapLeaf);\n    const witness = sigs.concat(tapLeaf.script).concat(tapLeaf.controlBlock);\n    return { finalScriptWitness: (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.witnessStackToScriptWitness)(witness) };\n  } catch (err) {\n    throw new Error(`Can not finalize taproot input #${inputIndex}: ${err}`);\n  }\n}\n/**\n * Serializes a taproot signature.\n * @param sig The signature to serialize.\n * @param sighashType The sighash type. Optional.\n * @returns The serialized taproot signature.\n */\nfunction serializeTaprootSignature(sig, sighashType) {\n  const sighashTypeByte = sighashType\n    ? Uint8Array.from([sighashType])\n    : Uint8Array.from([]);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([sig, sighashTypeByte]);\n}\n/**\n * Checks if a PSBT input is a taproot input.\n * @param input The PSBT input to check.\n * @returns True if the input is a taproot input, false otherwise.\n */\nfunction isTaprootInput(input) {\n  return (\n    input &&\n    !!(\n      input.tapInternalKey ||\n      input.tapMerkleRoot ||\n      (input.tapLeafScript && input.tapLeafScript.length) ||\n      (input.tapBip32Derivation && input.tapBip32Derivation.length) ||\n      (input.witnessUtxo && (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.isP2TR)(input.witnessUtxo.script))\n    )\n  );\n}\n/**\n * Checks if a PSBT output is a taproot output.\n * @param output The PSBT output to check.\n * @param script The script to check. Optional.\n * @returns True if the output is a taproot output, false otherwise.\n */\nfunction isTaprootOutput(output, script) {\n  return (\n    output &&\n    !!(\n      output.tapInternalKey ||\n      output.tapTree ||\n      (output.tapBip32Derivation && output.tapBip32Derivation.length) ||\n      (script && (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.isP2TR)(script))\n    )\n  );\n}\n/**\n * Checks the taproot input fields for consistency.\n * @param inputData The original input data.\n * @param newInputData The new input data.\n * @param action The action being performed.\n * @throws Throws an error if the input fields are inconsistent.\n */\nfunction checkTaprootInputFields(inputData, newInputData, action) {\n  checkMixedTaprootAndNonTaprootInputFields(inputData, newInputData, action);\n  checkIfTapLeafInTree(inputData, newInputData, action);\n}\n/**\n * Checks the taproot output fields for consistency.\n * @param outputData The original output data.\n * @param newOutputData The new output data.\n * @param action The action being performed.\n * @throws Throws an error if the output fields are inconsistent.\n */\nfunction checkTaprootOutputFields(outputData, newOutputData, action) {\n  checkMixedTaprootAndNonTaprootOutputFields(outputData, newOutputData, action);\n  checkTaprootScriptPubkey(outputData, newOutputData);\n}\nfunction checkTaprootScriptPubkey(outputData, newOutputData) {\n  if (!newOutputData.tapTree && !newOutputData.tapInternalKey) return;\n  const tapInternalKey =\n    newOutputData.tapInternalKey || outputData.tapInternalKey;\n  const tapTree = newOutputData.tapTree || outputData.tapTree;\n  if (tapInternalKey) {\n    const { script: scriptPubkey } = outputData;\n    const script = getTaprootScripPubkey(tapInternalKey, tapTree);\n    if (scriptPubkey && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(script, scriptPubkey) !== 0)\n      throw new Error('Error adding output. Script or address mismatch.');\n  }\n}\n/**\n * Returns the Taproot script public key.\n *\n * @param tapInternalKey - The Taproot internal key.\n * @param tapTree - The Taproot tree (optional).\n * @returns The Taproot script public key.\n */\nfunction getTaprootScripPubkey(tapInternalKey, tapTree) {\n  const scriptTree = tapTree && tapTreeFromList(tapTree.leaves);\n  const { output } = (0,_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2tr)({\n    internalPubkey: tapInternalKey,\n    scriptTree,\n  });\n  return output;\n}\n/**\n * Tweak the internal public key for a specific input.\n * @param inputIndex - The index of the input.\n * @param input - The PsbtInput object representing the input.\n * @returns The tweaked internal public key.\n * @throws Error if the tap internal key cannot be tweaked.\n */\nfunction tweakInternalPubKey(inputIndex, input) {\n  const tapInternalKey = input.tapInternalKey;\n  const outputKey =\n    tapInternalKey && (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tweakKey)(tapInternalKey, input.tapMerkleRoot);\n  if (!outputKey)\n    throw new Error(\n      `Cannot tweak tap internal key for input #${inputIndex}. Public key: ${\n        // tapInternalKey && tapInternalKey.toString('hex')\n        tapInternalKey && uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.toHex(tapInternalKey)\n      }`,\n    );\n  return outputKey.x;\n}\n/**\n * Convert a binary tree to a BIP371 type list. Each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @param tree the binary tap tree\n * @returns a list of BIP 371 tapleaves\n */\nfunction tapTreeToList(tree) {\n  if (!(0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTaptree)(tree))\n    throw new Error(\n      'Cannot convert taptree to tapleaf list. Expecting a tapree structure.',\n    );\n  return _tapTreeToList(tree);\n}\n/**\n * Convert a BIP371 TapLeaf list to a TapTree (binary).\n * @param leaves a list of tapleaves where each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @returns the corresponding taptree, or throws an exception if the tree cannot be reconstructed\n */\nfunction tapTreeFromList(leaves = []) {\n  if (leaves.length === 1 && leaves[0].depth === 0)\n    return {\n      output: leaves[0].script,\n      version: leaves[0].leafVersion,\n    };\n  return instertLeavesInTree(leaves);\n}\n/**\n * Checks the taproot input for signatures.\n * @param input The PSBT input to check.\n * @param action The action being performed.\n * @returns True if the input has taproot signatures, false otherwise.\n */\nfunction checkTaprootInputForSigs(input, action) {\n  const sigs = extractTaprootSigs(input);\n  return sigs.some(sig =>\n    (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.signatureBlocksAction)(sig, decodeSchnorrSignature, action),\n  );\n}\n/**\n * Decodes a Schnorr signature.\n * @param signature The signature to decode.\n * @returns The decoded Schnorr signature.\n */\nfunction decodeSchnorrSignature(signature) {\n  return {\n    signature: signature.slice(0, 64),\n    hashType: signature.slice(64)[0] || _transaction_js__WEBPACK_IMPORTED_MODULE_1__.Transaction.SIGHASH_DEFAULT,\n  };\n}\n/**\n * Extracts taproot signatures from a PSBT input.\n * @param input The PSBT input to extract signatures from.\n * @returns An array of taproot signatures.\n */\nfunction extractTaprootSigs(input) {\n  const sigs = [];\n  if (input.tapKeySig) sigs.push(input.tapKeySig);\n  if (input.tapScriptSig)\n    sigs.push(...input.tapScriptSig.map(s => s.signature));\n  if (!sigs.length) {\n    const finalTapKeySig = getTapKeySigFromWithness(input.finalScriptWitness);\n    if (finalTapKeySig) sigs.push(finalTapKeySig);\n  }\n  return sigs;\n}\n/**\n * Gets the taproot signature from the witness.\n * @param finalScriptWitness The final script witness.\n * @returns The taproot signature, or undefined if not found.\n */\nfunction getTapKeySigFromWithness(finalScriptWitness) {\n  if (!finalScriptWitness) return;\n  const witness = finalScriptWitness.slice(2);\n  // todo: add schnorr signature validation\n  if (witness.length === 64 || witness.length === 65) return witness;\n}\n/**\n * Converts a binary tree to a BIP371 type list.\n * @param tree The binary tap tree.\n * @param leaves A list of tapleaves. Optional.\n * @param depth The current depth. Optional.\n * @returns A list of BIP 371 tapleaves.\n * @throws Throws an error if the taptree cannot be converted to a tapleaf list.\n */\nfunction _tapTreeToList(tree, leaves = [], depth = 0) {\n  if (depth > _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.MAX_TAPTREE_DEPTH) throw new Error('Max taptree depth exceeded.');\n  if (!tree) return [];\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTapleaf)(tree)) {\n    leaves.push({\n      depth,\n      leafVersion: tree.version || _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.LEAF_VERSION_TAPSCRIPT,\n      script: tree.output,\n    });\n    return leaves;\n  }\n  if (tree[0]) _tapTreeToList(tree[0], leaves, depth + 1);\n  if (tree[1]) _tapTreeToList(tree[1], leaves, depth + 1);\n  return leaves;\n}\n/**\n * Inserts the tapleaves into the taproot tree.\n * @param leaves The tapleaves to insert.\n * @returns The taproot tree.\n * @throws Throws an error if there is no room left to insert a tapleaf in the tree.\n */\nfunction instertLeavesInTree(leaves) {\n  let tree;\n  for (const leaf of leaves) {\n    tree = instertLeafInTree(leaf, tree);\n    if (!tree) throw new Error(`No room left to insert tapleaf in tree`);\n  }\n  return tree;\n}\n/**\n * Inserts a tapleaf into the taproot tree.\n * @param leaf The tapleaf to insert.\n * @param tree The taproot tree.\n * @param depth The current depth. Optional.\n * @returns The updated taproot tree.\n */\nfunction instertLeafInTree(leaf, tree, depth = 0) {\n  if (depth > _payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.MAX_TAPTREE_DEPTH) throw new Error('Max taptree depth exceeded.');\n  if (leaf.depth === depth) {\n    if (!tree)\n      return {\n        output: leaf.script,\n        version: leaf.leafVersion,\n      };\n    return;\n  }\n  if ((0,_types_js__WEBPACK_IMPORTED_MODULE_0__.isTapleaf)(tree)) return;\n  const leftSide = instertLeafInTree(leaf, tree && tree[0], depth + 1);\n  if (leftSide) return [leftSide, tree && tree[1]];\n  const rightSide = instertLeafInTree(leaf, tree && tree[1], depth + 1);\n  if (rightSide) return [tree && tree[0], rightSide];\n}\n/**\n * Checks the input fields for mixed taproot and non-taproot fields.\n * @param inputData The original input data.\n * @param newInputData The new input data.\n * @param action The action being performed.\n * @throws Throws an error if the input fields are inconsistent.\n */\nfunction checkMixedTaprootAndNonTaprootInputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootInput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootInput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootInput(newInputData) &&\n    hasNonTaprootFields(newInputData); // todo: bad? use !===\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\n/**\n * Checks the output fields for mixed taproot and non-taproot fields.\n * @param inputData The original output data.\n * @param newInputData The new output data.\n * @param action The action being performed.\n * @throws Throws an error if the output fields are inconsistent.\n */\nfunction checkMixedTaprootAndNonTaprootOutputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootOutput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootOutput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootOutput(newInputData) &&\n    hasNonTaprootFields(newInputData);\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\n/**\n * Checks if the tap leaf is part of the tap tree for the given input data.\n * Throws an error if the tap leaf is not part of the tap tree.\n * @param inputData - The original PsbtInput data.\n * @param newInputData - The new PsbtInput data.\n * @param action - The action being performed.\n * @throws {Error} - If the tap leaf is not part of the tap tree.\n */\nfunction checkIfTapLeafInTree(inputData, newInputData, action) {\n  if (newInputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    const oldLeafsInTree = (inputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree || !oldLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  } else if (inputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, inputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  }\n}\n/**\n * Checks if a TapLeafScript is present in a Merkle tree.\n * @param tapLeaf The TapLeafScript to check.\n * @param merkleRoot The Merkle root of the tree. If not provided, the function assumes the TapLeafScript is present.\n * @returns A boolean indicating whether the TapLeafScript is present in the tree.\n */\nfunction isTapLeafInTree(tapLeaf, merkleRoot) {\n  if (!merkleRoot) return true;\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  const rootHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.rootHashFromPath)(tapLeaf.controlBlock, leafHash);\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(rootHash, merkleRoot) === 0;\n}\n/**\n * Sorts the signatures in the input's tapScriptSig array based on their position in the tapLeaf script.\n *\n * @param input - The PsbtInput object.\n * @param tapLeaf - The TapLeafScript object.\n * @returns An array of sorted signatures as Buffers.\n */\nfunction sortSignatures(input, tapLeaf) {\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  return (\n    (input.tapScriptSig || [])\n      // .filter(tss => tss.leafHash.equals(leafHash))\n      .filter(tss => uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(tss.leafHash, leafHash) === 0)\n      .map(tss => addPubkeyPositionInScript(tapLeaf.script, tss))\n      .sort((t1, t2) => t2.positionInScript - t1.positionInScript)\n      .map(t => t.signature)\n  );\n}\n/**\n * Adds the position of a public key in a script to a TapScriptSig object.\n * @param script The script in which to find the position of the public key.\n * @param tss The TapScriptSig object to add the position to.\n * @returns A TapScriptSigWitPosition object with the added position.\n */\nfunction addPubkeyPositionInScript(script, tss) {\n  return Object.assign(\n    {\n      positionInScript: (0,_psbtutils_js__WEBPACK_IMPORTED_MODULE_2__.pubkeyPositionInScript)(tss.pubkey, script),\n    },\n    tss,\n  );\n}\n/**\n * Find tapleaf by hash, or get the signed tapleaf with the shortest path.\n */\nfunction findTapLeafToFinalize(input, inputIndex, leafHashToFinalize) {\n  if (!input.tapScriptSig || !input.tapScriptSig.length)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. No tapleaf script signature provided.`,\n    );\n  const tapLeaf = (input.tapLeafScript || [])\n    .sort((a, b) => a.controlBlock.length - b.controlBlock.length)\n    .find(leaf =>\n      canFinalizeLeaf(leaf, input.tapScriptSig, leafHashToFinalize),\n    );\n  if (!tapLeaf)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. Signature for tapleaf script not found.`,\n    );\n  return tapLeaf;\n}\n/**\n * Determines whether a TapLeafScript can be finalized.\n *\n * @param leaf - The TapLeafScript to check.\n * @param tapScriptSig - The array of TapScriptSig objects.\n * @param hash - The optional hash to compare with the leaf hash.\n * @returns A boolean indicating whether the TapLeafScript can be finalized.\n */\nfunction canFinalizeLeaf(leaf, tapScriptSig, hash) {\n  const leafHash = (0,_payments_bip341_js__WEBPACK_IMPORTED_MODULE_3__.tapleafHash)({\n    output: leaf.script,\n    version: leaf.leafVersion,\n  });\n  const whiteListedHash = !hash || uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(leafHash, hash) === 0;\n  return (\n    whiteListedHash &&\n    tapScriptSig.find(tss => uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(tss.leafHash, leafHash) === 0) !==\n      undefined\n  );\n}\n/**\n * Checks if the given PsbtInput or PsbtOutput has non-taproot fields.\n * Non-taproot fields include redeemScript, witnessScript, and bip32Derivation.\n * @param io The PsbtInput or PsbtOutput to check.\n * @returns A boolean indicating whether the given input or output has non-taproot fields.\n */\nfunction hasNonTaprootFields(io) {\n  return (\n    io &&\n    !!(\n      io.redeemScript ||\n      io.witnessScript ||\n      (io.bip32Derivation && io.bip32Derivation.length)\n    )\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/bip371.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkInputForSig: () => (/* binding */ checkInputForSig),\n/* harmony export */   isP2MS: () => (/* binding */ isP2MS),\n/* harmony export */   isP2PK: () => (/* binding */ isP2PK),\n/* harmony export */   isP2PKH: () => (/* binding */ isP2PKH),\n/* harmony export */   isP2SHScript: () => (/* binding */ isP2SHScript),\n/* harmony export */   isP2TR: () => (/* binding */ isP2TR),\n/* harmony export */   isP2WPKH: () => (/* binding */ isP2WPKH),\n/* harmony export */   isP2WSHScript: () => (/* binding */ isP2WSHScript),\n/* harmony export */   pubkeyInScript: () => (/* binding */ pubkeyInScript),\n/* harmony export */   pubkeyPositionInScript: () => (/* binding */ pubkeyPositionInScript),\n/* harmony export */   signatureBlocksAction: () => (/* binding */ signatureBlocksAction),\n/* harmony export */   witnessStackToScriptWitness: () => (/* binding */ witnessStackToScriptWitness)\n/* harmony export */ });\n/* harmony import */ var varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! varuint-bitcoin */ \"(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transaction.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _payments_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../payments/index.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/payments/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n\n\n\n\n/**\n * Checks if a given payment factory can generate a payment script from a given script.\n * @param payment The payment factory to check.\n * @returns A function that takes a script and returns a boolean indicating whether the payment factory can generate a payment script from the script.\n */\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nconst isP2MS = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2ms);\nconst isP2PK = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2pk);\nconst isP2PKH = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2pkh);\nconst isP2WPKH = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2wpkh);\nconst isP2WSHScript = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2wsh);\nconst isP2SHScript = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2sh);\nconst isP2TR = isPaymentFactory(_payments_index_js__WEBPACK_IMPORTED_MODULE_4__.p2tr);\n/**\n * Converts a witness stack to a script witness.\n * @param witness The witness stack to convert.\n * @returns The script witness as a Buffer.\n */\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = new Uint8Array(0);\n  function writeSlice(slice) {\n    buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([buffer, slice]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encodingLength(i);\n    buffer = uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.concat([buffer, new Uint8Array(varintLen)]);\n    varuint_bitcoin__WEBPACK_IMPORTED_MODULE_0__.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\n/**\n * Finds the position of a public key in a script.\n * @param pubkey The public key to search for.\n * @param script The script to search in.\n * @returns The index of the public key in the script, or -1 if not found.\n * @throws {Error} If there is an unknown script error.\n */\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0,_crypto_js__WEBPACK_IMPORTED_MODULE_3__.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkey, element) === 0 ||\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkeyHash, element) === 0 ||\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_5__.compare(pubkeyXOnly, element) === 0\n    );\n  });\n}\n/**\n * Checks if a public key is present in a script.\n * @param pubkey The public key to check.\n * @param script The script to search in.\n * @returns A boolean indicating whether the public key is present in the script.\n */\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\n/**\n * Checks if an input contains a signature for a specific action.\n * @param input - The input to check.\n * @param action - The action to check for.\n * @returns A boolean indicating whether the input contains a signature for the specified action.\n */\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, _script_js__WEBPACK_IMPORTED_MODULE_1__.signature.decode, action),\n  );\n}\n/**\n * Determines if a given action is allowed for a signature block.\n * @param signature - The signature block.\n * @param signatureDecodeFn - The function used to decode the signature.\n * @param action - The action to be checked.\n * @returns True if the action is allowed, false otherwise.\n */\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay = hashType & _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_ALL:\n      break;\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_SINGLE:\n    case _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\n/**\n * Extracts the signatures from a PsbtInput object.\n * If the input has partial signatures, it returns an array of the signatures.\n * If the input does not have partial signatures, it checks if it has a finalScriptSig or finalScriptWitness.\n * If it does, it extracts the signatures from the final scripts and returns them.\n * If none of the above conditions are met, it returns an empty array.\n *\n * @param input - The PsbtInput object from which to extract the signatures.\n * @returns An array of signatures extracted from the PsbtInput object.\n */\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\n/**\n * Retrieves the partial signatures (Psigs) from the input's final scripts.\n * Psigs are extracted from both the final scriptSig and final scriptWitness of the input.\n * Only canonical script signatures are considered.\n *\n * @param input - The PsbtInput object representing the input.\n * @returns An array of PartialSig objects containing the extracted Psigs.\n */\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : _script_js__WEBPACK_IMPORTED_MODULE_1__.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return (\n        item instanceof Uint8Array && _script_js__WEBPACK_IMPORTED_MODULE_1__.isCanonicalScriptSignature(item)\n      );\n    })\n    .map(sig => ({ signature: sig }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/psbt/psbtutils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ops.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\n/**\n * Calculates the encoding length of a number used for push data in Bitcoin transactions.\n * @param i The number to calculate the encoding length for.\n * @returns The encoding length of the number.\n */\nfunction encodingLength(i) {\n  return i < _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\n/**\n * Encodes a number into a buffer using a variable-length encoding scheme.\n * The encoded buffer is written starting at the specified offset.\n * Returns the size of the encoded buffer.\n *\n * @param buffer - The buffer to write the encoded data into.\n * @param num - The number to encode.\n * @param offset - The offset at which to start writing the encoded buffer.\n * @returns The size of the encoded buffer.\n */\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, num);\n    // 8 bit\n  } else if (size === 2) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset + 1, num);\n    // 16 bit\n  } else if (size === 3) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA2);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt16(buffer, offset + 1, num, 'LE');\n    // 32 bit\n  } else {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt8(buffer, offset, _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA4);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.writeUInt32(buffer, offset + 1, num, 'LE');\n  }\n  return size;\n}\n/**\n * Decodes a buffer and returns information about the opcode, number, and size.\n * @param buffer - The buffer to decode.\n * @param offset - The offset within the buffer to start decoding.\n * @returns An object containing the opcode, number, and size, or null if decoding fails.\n */\nfunction decode(buffer, offset) {\n  const opcode = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt8(buffer, offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt8(buffer, offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt16(buffer, offset + 1, 'LE');\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== _ops_js__WEBPACK_IMPORTED_MODULE_0__.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = uint8array_tools__WEBPACK_IMPORTED_MODULE_1__.readUInt32(buffer, offset + 1, 'LE');\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3B1c2hfZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQjtBQUNXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGFBQWEsd0NBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsSUFBSSx3REFBZ0I7QUFDcEI7QUFDQSxJQUFJO0FBQ0osSUFBSSx3REFBZ0IsaUJBQWlCLHdDQUFHO0FBQ3hDLElBQUksd0RBQWdCO0FBQ3BCO0FBQ0EsSUFBSTtBQUNKLElBQUksd0RBQWdCLGlCQUFpQix3Q0FBRztBQUN4QyxJQUFJLHlEQUFpQjtBQUNyQjtBQUNBLElBQUk7QUFDSixJQUFJLHdEQUFnQixpQkFBaUIsd0NBQUc7QUFDeEMsSUFBSSx5REFBaUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQkFBaUIsdURBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsZUFBZSx3Q0FBRztBQUNsQjtBQUNBO0FBQ0E7QUFDQSxJQUFJLG9CQUFvQix3Q0FBRztBQUMzQjtBQUNBLFVBQVUsdURBQWU7QUFDekI7QUFDQTtBQUNBLElBQUksb0JBQW9CLHdDQUFHO0FBQzNCO0FBQ0EsVUFBVSx3REFBZ0I7QUFDMUI7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLG1CQUFtQix3Q0FBRztBQUN0QixVQUFVLHdEQUFnQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vYml0Y29pbmpzLWxpYkA3LjAuMC1yYy4wX3R5cGVzY3JpcHRANS45LjIvbm9kZV9tb2R1bGVzL2JpdGNvaW5qcy1saWIvc3JjL2VzbS9wdXNoX2RhdGEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT1BTIH0gZnJvbSAnLi9vcHMuanMnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIGVuY29kaW5nIGxlbmd0aCBvZiBhIG51bWJlciB1c2VkIGZvciBwdXNoIGRhdGEgaW4gQml0Y29pbiB0cmFuc2FjdGlvbnMuXG4gKiBAcGFyYW0gaSBUaGUgbnVtYmVyIHRvIGNhbGN1bGF0ZSB0aGUgZW5jb2RpbmcgbGVuZ3RoIGZvci5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGluZyBsZW5ndGggb2YgdGhlIG51bWJlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKGkpIHtcbiAgcmV0dXJuIGkgPCBPUFMuT1BfUFVTSERBVEExID8gMSA6IGkgPD0gMHhmZiA/IDIgOiBpIDw9IDB4ZmZmZiA/IDMgOiA1O1xufVxuLyoqXG4gKiBFbmNvZGVzIGEgbnVtYmVyIGludG8gYSBidWZmZXIgdXNpbmcgYSB2YXJpYWJsZS1sZW5ndGggZW5jb2Rpbmcgc2NoZW1lLlxuICogVGhlIGVuY29kZWQgYnVmZmVyIGlzIHdyaXR0ZW4gc3RhcnRpbmcgYXQgdGhlIHNwZWNpZmllZCBvZmZzZXQuXG4gKiBSZXR1cm5zIHRoZSBzaXplIG9mIHRoZSBlbmNvZGVkIGJ1ZmZlci5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIGJ1ZmZlciB0byB3cml0ZSB0aGUgZW5jb2RlZCBkYXRhIGludG8uXG4gKiBAcGFyYW0gbnVtIC0gVGhlIG51bWJlciB0byBlbmNvZGUuXG4gKiBAcGFyYW0gb2Zmc2V0IC0gVGhlIG9mZnNldCBhdCB3aGljaCB0byBzdGFydCB3cml0aW5nIHRoZSBlbmNvZGVkIGJ1ZmZlci5cbiAqIEByZXR1cm5zIFRoZSBzaXplIG9mIHRoZSBlbmNvZGVkIGJ1ZmZlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShidWZmZXIsIG51bSwgb2Zmc2V0KSB7XG4gIGNvbnN0IHNpemUgPSBlbmNvZGluZ0xlbmd0aChudW0pO1xuICAvLyB+NiBiaXRcbiAgaWYgKHNpemUgPT09IDEpIHtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgb2Zmc2V0LCBudW0pO1xuICAgIC8vIDggYml0XG4gIH0gZWxzZSBpZiAoc2l6ZSA9PT0gMikge1xuICAgIHRvb2xzLndyaXRlVUludDgoYnVmZmVyLCBvZmZzZXQsIE9QUy5PUF9QVVNIREFUQTEpO1xuICAgIHRvb2xzLndyaXRlVUludDgoYnVmZmVyLCBvZmZzZXQgKyAxLCBudW0pO1xuICAgIC8vIDE2IGJpdFxuICB9IGVsc2UgaWYgKHNpemUgPT09IDMpIHtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgb2Zmc2V0LCBPUFMuT1BfUFVTSERBVEEyKTtcbiAgICB0b29scy53cml0ZVVJbnQxNihidWZmZXIsIG9mZnNldCArIDEsIG51bSwgJ0xFJyk7XG4gICAgLy8gMzIgYml0XG4gIH0gZWxzZSB7XG4gICAgdG9vbHMud3JpdGVVSW50OChidWZmZXIsIG9mZnNldCwgT1BTLk9QX1BVU0hEQVRBNCk7XG4gICAgdG9vbHMud3JpdGVVSW50MzIoYnVmZmVyLCBvZmZzZXQgKyAxLCBudW0sICdMRScpO1xuICB9XG4gIHJldHVybiBzaXplO1xufVxuLyoqXG4gKiBEZWNvZGVzIGEgYnVmZmVyIGFuZCByZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBvcGNvZGUsIG51bWJlciwgYW5kIHNpemUuXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIGJ1ZmZlciB0byBkZWNvZGUuXG4gKiBAcGFyYW0gb2Zmc2V0IC0gVGhlIG9mZnNldCB3aXRoaW4gdGhlIGJ1ZmZlciB0byBzdGFydCBkZWNvZGluZy5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBvcGNvZGUsIG51bWJlciwgYW5kIHNpemUsIG9yIG51bGwgaWYgZGVjb2RpbmcgZmFpbHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGUoYnVmZmVyLCBvZmZzZXQpIHtcbiAgY29uc3Qgb3Bjb2RlID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgb2Zmc2V0KTtcbiAgbGV0IG51bTtcbiAgbGV0IHNpemU7XG4gIC8vIH42IGJpdFxuICBpZiAob3Bjb2RlIDwgT1BTLk9QX1BVU0hEQVRBMSkge1xuICAgIG51bSA9IG9wY29kZTtcbiAgICBzaXplID0gMTtcbiAgICAvLyA4IGJpdFxuICB9IGVsc2UgaWYgKG9wY29kZSA9PT0gT1BTLk9QX1BVU0hEQVRBMSkge1xuICAgIGlmIChvZmZzZXQgKyAyID4gYnVmZmVyLmxlbmd0aCkgcmV0dXJuIG51bGw7XG4gICAgbnVtID0gdG9vbHMucmVhZFVJbnQ4KGJ1ZmZlciwgb2Zmc2V0ICsgMSk7XG4gICAgc2l6ZSA9IDI7XG4gICAgLy8gMTYgYml0XG4gIH0gZWxzZSBpZiAob3Bjb2RlID09PSBPUFMuT1BfUFVTSERBVEEyKSB7XG4gICAgaWYgKG9mZnNldCArIDMgPiBidWZmZXIubGVuZ3RoKSByZXR1cm4gbnVsbDtcbiAgICBudW0gPSB0b29scy5yZWFkVUludDE2KGJ1ZmZlciwgb2Zmc2V0ICsgMSwgJ0xFJyk7XG4gICAgc2l6ZSA9IDM7XG4gICAgLy8gMzIgYml0XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9mZnNldCArIDUgPiBidWZmZXIubGVuZ3RoKSByZXR1cm4gbnVsbDtcbiAgICBpZiAob3Bjb2RlICE9PSBPUFMuT1BfUFVTSERBVEE0KSB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgb3Bjb2RlJyk7XG4gICAgbnVtID0gdG9vbHMucmVhZFVJbnQzMihidWZmZXIsIG9mZnNldCArIDEsICdMRScpO1xuICAgIHNpemUgPSA1O1xuICB9XG4gIHJldHVybiB7XG4gICAgb3Bjb2RlLFxuICAgIG51bWJlcjogbnVtLFxuICAgIHNpemUsXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPS: () => (/* reexport safe */ _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS),\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   countNonPushOnlyOPs: () => (/* binding */ countNonPushOnlyOPs),\n/* harmony export */   decompile: () => (/* binding */ decompile),\n/* harmony export */   fromASM: () => (/* binding */ fromASM),\n/* harmony export */   isCanonicalPubKey: () => (/* binding */ isCanonicalPubKey),\n/* harmony export */   isCanonicalScriptSignature: () => (/* binding */ isCanonicalScriptSignature),\n/* harmony export */   isDefinedHashType: () => (/* binding */ isDefinedHashType),\n/* harmony export */   isPushOnly: () => (/* binding */ isPushOnly),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   signature: () => (/* binding */ signature),\n/* harmony export */   toASM: () => (/* binding */ toASM),\n/* harmony export */   toStack: () => (/* binding */ toStack)\n/* harmony export */ });\n/* harmony import */ var _bip66_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bip66.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\");\n/* harmony import */ var _ops_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ops.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/ops.js\");\n/* harmony import */ var _push_data_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./push_data.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/push_data.js\");\n/* harmony import */ var _script_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./script_number.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js\");\n/* harmony import */ var _script_signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./script_signature.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/**\n * Script tools, including decompile, compile, toASM, fromASM, toStack, isCanonicalPubKey, isCanonicalScriptSignature\n * @packageDocumentation\n */\n\n\n\n\n\n\n\n\nconst OP_INT_BASE = _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_RESERVED; // OP_1 - 1\n\nconst StackSchema = valibot__WEBPACK_IMPORTED_MODULE_7__.array(valibot__WEBPACK_IMPORTED_MODULE_7__.union([valibot__WEBPACK_IMPORTED_MODULE_7__.instance(Uint8Array), valibot__WEBPACK_IMPORTED_MODULE_7__.number()]));\nfunction isOPInt(value) {\n  return (\n    valibot__WEBPACK_IMPORTED_MODULE_7__.is(valibot__WEBPACK_IMPORTED_MODULE_7__.number(), value) &&\n    (value === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0 ||\n      (value >= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1 && value <= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_16) ||\n      value === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(_types_js__WEBPACK_IMPORTED_MODULE_5__.BufferSchema, value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(valibot__WEBPACK_IMPORTED_MODULE_7__.pipe(valibot__WEBPACK_IMPORTED_MODULE_7__.any(), valibot__WEBPACK_IMPORTED_MODULE_7__.everyItem(isPushOnlyChunk)), value);\n}\nfunction countNonPushOnlyOPs(value) {\n  return value.length - value.filter(isPushOnlyChunk).length;\n}\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return buf instanceof Uint8Array;\n}\nfunction chunksIsArray(buf) {\n  return valibot__WEBPACK_IMPORTED_MODULE_7__.is(StackSchema, buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return buf instanceof Uint8Array;\n}\n/**\n * Compiles an array of chunks into a Buffer.\n *\n * @param chunks - The array of chunks to compile.\n * @returns The compiled Buffer.\n * @throws Error if the compilation fails.\n */\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(StackSchema, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + _push_data_js__WEBPACK_IMPORTED_MODULE_2__.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = new Uint8Array(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(buffer, offset, opcode);\n        offset += 1;\n        return;\n      }\n      offset += _push_data_js__WEBPACK_IMPORTED_MODULE_2__.encode(buffer, chunk.length, offset);\n      buffer.set(chunk, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.writeUInt8(buffer, offset, chunk);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(_types_js__WEBPACK_IMPORTED_MODULE_5__.BufferSchema, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0 && opcode <= _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_PUSHDATA4) {\n      const d = _push_data_js__WEBPACK_IMPORTED_MODULE_2__.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\n/**\n * Converts the given chunks into an ASM (Assembly) string representation.\n * If the chunks parameter is a Buffer, it will be decompiled into a Stack before conversion.\n * @param chunks - The chunks to convert into ASM.\n * @returns The ASM string representation of the chunks.\n */\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  if (!chunks) {\n    throw new Error('Could not convert invalid chunks to ASM');\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.toHex(chunk);\n        chunk = op;\n      }\n      // opcode!\n      return _ops_js__WEBPACK_IMPORTED_MODULE_1__.REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\n/**\n * Converts an ASM string to a Buffer.\n * @param asm The ASM string to convert.\n * @returns The converted Buffer.\n */\nfunction fromASM(asm) {\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.string(), asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (_ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS[chunkStr] !== undefined) return _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS[chunkStr];\n      valibot__WEBPACK_IMPORTED_MODULE_7__.parse(_types_js__WEBPACK_IMPORTED_MODULE_5__.HexSchema, chunkStr);\n      // data!\n      return uint8array_tools__WEBPACK_IMPORTED_MODULE_6__.fromHex(chunkStr);\n    }),\n  );\n}\n/**\n * Converts the given chunks into a stack of buffers.\n *\n * @param chunks - The chunks to convert.\n * @returns The stack of buffers.\n */\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  valibot__WEBPACK_IMPORTED_MODULE_7__.parse(valibot__WEBPACK_IMPORTED_MODULE_7__.custom(isPushOnly), chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === _ops_js__WEBPACK_IMPORTED_MODULE_1__.OPS.OP_0) return new Uint8Array(0);\n    return _script_number_js__WEBPACK_IMPORTED_MODULE_3__.encode(op - OP_INT_BASE);\n  });\n}\nfunction isCanonicalPubKey(buffer) {\n  return _types_js__WEBPACK_IMPORTED_MODULE_5__.isPoint(buffer);\n}\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nfunction isCanonicalScriptSignature(buffer) {\n  if (!(buffer instanceof Uint8Array)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return _bip66_js__WEBPACK_IMPORTED_MODULE_0__.check(buffer.slice(0, -1));\n}\nconst number = _script_number_js__WEBPACK_IMPORTED_MODULE_3__;\nconst signature = _script_signature_js__WEBPACK_IMPORTED_MODULE_4__;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n/**\n * Decodes a script number from a buffer.\n *\n * @param buffer - The buffer containing the script number.\n * @param maxLength - The maximum length of the script number. Defaults to 4.\n * @param minimal - Whether the script number should be minimal. Defaults to true.\n * @returns The decoded script number.\n * @throws {TypeError} If the script number overflows the maximum length.\n * @throws {Error} If the script number is not minimally encoded when minimal is true.\n */\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt32(buffer, 0, 'LE');\n    const b = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt8(buffer, 4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n      ? 4\n      : i > 0x7fff\n        ? 3\n        : i > 0x7f\n          ? 2\n          : i > 0x00\n            ? 1\n            : 0;\n}\n/**\n * Encodes a number into a Uint8Array using a specific format.\n *\n * @param _number - The number to encode.\n * @returns The encoded number as a Uint8Array.\n */\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = new Uint8Array(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt8(buffer, i, value & 0xff);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt8(buffer, size - 1, negative ? 0x80 : 0x00);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3NjcmlwdF9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCLFlBQVksT0FBTztBQUNuQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdEQUFnQjtBQUM5QixjQUFjLHVEQUFlO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsVUFBVTtBQUM1QixJQUFJLHdEQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdEQUFnQjtBQUNwQixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3NjcmlwdF9udW1iZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG4vKipcbiAqIERlY29kZXMgYSBzY3JpcHQgbnVtYmVyIGZyb20gYSBidWZmZXIuXG4gKlxuICogQHBhcmFtIGJ1ZmZlciAtIFRoZSBidWZmZXIgY29udGFpbmluZyB0aGUgc2NyaXB0IG51bWJlci5cbiAqIEBwYXJhbSBtYXhMZW5ndGggLSBUaGUgbWF4aW11bSBsZW5ndGggb2YgdGhlIHNjcmlwdCBudW1iZXIuIERlZmF1bHRzIHRvIDQuXG4gKiBAcGFyYW0gbWluaW1hbCAtIFdoZXRoZXIgdGhlIHNjcmlwdCBudW1iZXIgc2hvdWxkIGJlIG1pbmltYWwuIERlZmF1bHRzIHRvIHRydWUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBzY3JpcHQgbnVtYmVyLlxuICogQHRocm93cyB7VHlwZUVycm9yfSBJZiB0aGUgc2NyaXB0IG51bWJlciBvdmVyZmxvd3MgdGhlIG1heGltdW0gbGVuZ3RoLlxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBzY3JpcHQgbnVtYmVyIGlzIG5vdCBtaW5pbWFsbHkgZW5jb2RlZCB3aGVuIG1pbmltYWwgaXMgdHJ1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShidWZmZXIsIG1heExlbmd0aCwgbWluaW1hbCkge1xuICBtYXhMZW5ndGggPSBtYXhMZW5ndGggfHwgNDtcbiAgbWluaW1hbCA9IG1pbmltYWwgPT09IHVuZGVmaW5lZCA/IHRydWUgOiBtaW5pbWFsO1xuICBjb25zdCBsZW5ndGggPSBidWZmZXIubGVuZ3RoO1xuICBpZiAobGVuZ3RoID09PSAwKSByZXR1cm4gMDtcbiAgaWYgKGxlbmd0aCA+IG1heExlbmd0aCkgdGhyb3cgbmV3IFR5cGVFcnJvcignU2NyaXB0IG51bWJlciBvdmVyZmxvdycpO1xuICBpZiAobWluaW1hbCkge1xuICAgIGlmICgoYnVmZmVyW2xlbmd0aCAtIDFdICYgMHg3ZikgPT09IDApIHtcbiAgICAgIGlmIChsZW5ndGggPD0gMSB8fCAoYnVmZmVyW2xlbmd0aCAtIDJdICYgMHg4MCkgPT09IDApXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm9uLW1pbmltYWxseSBlbmNvZGVkIHNjcmlwdCBudW1iZXInKTtcbiAgICB9XG4gIH1cbiAgLy8gNDAtYml0XG4gIGlmIChsZW5ndGggPT09IDUpIHtcbiAgICBjb25zdCBhID0gdG9vbHMucmVhZFVJbnQzMihidWZmZXIsIDAsICdMRScpO1xuICAgIGNvbnN0IGIgPSB0b29scy5yZWFkVUludDgoYnVmZmVyLCA0KTtcbiAgICBpZiAoYiAmIDB4ODApIHJldHVybiAtKChiICYgfjB4ODApICogMHgxMDAwMDAwMDAgKyBhKTtcbiAgICByZXR1cm4gYiAqIDB4MTAwMDAwMDAwICsgYTtcbiAgfVxuICAvLyAzMi1iaXQgLyAyNC1iaXQgLyAxNi1iaXQgLyA4LWJpdFxuICBsZXQgcmVzdWx0ID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIHJlc3VsdCB8PSBidWZmZXJbaV0gPDwgKDggKiBpKTtcbiAgfVxuICBpZiAoYnVmZmVyW2xlbmd0aCAtIDFdICYgMHg4MClcbiAgICByZXR1cm4gLShyZXN1bHQgJiB+KDB4ODAgPDwgKDggKiAobGVuZ3RoIC0gMSkpKSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBzY3JpcHROdW1TaXplKGkpIHtcbiAgcmV0dXJuIGkgPiAweDdmZmZmZmZmXG4gICAgPyA1XG4gICAgOiBpID4gMHg3ZmZmZmZcbiAgICAgID8gNFxuICAgICAgOiBpID4gMHg3ZmZmXG4gICAgICAgID8gM1xuICAgICAgICA6IGkgPiAweDdmXG4gICAgICAgICAgPyAyXG4gICAgICAgICAgOiBpID4gMHgwMFxuICAgICAgICAgICAgPyAxXG4gICAgICAgICAgICA6IDA7XG59XG4vKipcbiAqIEVuY29kZXMgYSBudW1iZXIgaW50byBhIFVpbnQ4QXJyYXkgdXNpbmcgYSBzcGVjaWZpYyBmb3JtYXQuXG4gKlxuICogQHBhcmFtIF9udW1iZXIgLSBUaGUgbnVtYmVyIHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIG51bWJlciBhcyBhIFVpbnQ4QXJyYXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoX251bWJlcikge1xuICBsZXQgdmFsdWUgPSBNYXRoLmFicyhfbnVtYmVyKTtcbiAgY29uc3Qgc2l6ZSA9IHNjcmlwdE51bVNpemUodmFsdWUpO1xuICBjb25zdCBidWZmZXIgPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgY29uc3QgbmVnYXRpdmUgPSBfbnVtYmVyIDwgMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyArK2kpIHtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgaSwgdmFsdWUgJiAweGZmKTtcbiAgICB2YWx1ZSA+Pj0gODtcbiAgfVxuICBpZiAoYnVmZmVyW3NpemUgLSAxXSAmIDB4ODApIHtcbiAgICB0b29scy53cml0ZVVJbnQ4KGJ1ZmZlciwgc2l6ZSAtIDEsIG5lZ2F0aXZlID8gMHg4MCA6IDB4MDApO1xuICB9IGVsc2UgaWYgKG5lZ2F0aXZlKSB7XG4gICAgYnVmZmVyW3NpemUgLSAxXSB8PSAweDgwO1xuICB9XG4gIHJldHVybiBidWZmZXI7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_number.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _bip66_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bip66.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bip66.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n\n\n\n\n\nconst ZERO = new Uint8Array(1);\n/**\n * Converts a buffer to a DER-encoded buffer.\n * @param x - The buffer to be converted.\n * @returns The DER-encoded buffer.\n */\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([ZERO, x]);\n  return x;\n}\n/**\n * Converts a DER-encoded signature to a buffer.\n * If the first byte of the input buffer is 0x00, it is skipped.\n * The resulting buffer is 32 bytes long, filled with zeros if necessary.\n * @param x - The DER-encoded signature.\n * @returns The converted buffer.\n */\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = new Uint8Array(32);\n  const bstart = Math.max(0, 32 - x.length);\n  buffer.set(x, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\n/**\n * Decodes a buffer into a ScriptSignature object.\n * @param buffer - The buffer to decode.\n * @returns The decoded ScriptSignature object.\n * @throws Error if the hashType is invalid.\n */\nfunction decode(buffer) {\n  const hashType = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.readUInt8(buffer, buffer.length - 1);\n  if (!(0,_script_js__WEBPACK_IMPORTED_MODULE_1__.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const decoded = _bip66_js__WEBPACK_IMPORTED_MODULE_0__.decode(buffer.subarray(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([r, s]);\n  return { signature, hashType };\n}\n/**\n * Encodes a signature and hash type into a buffer.\n * @param signature - The signature to encode.\n * @param hashType - The hash type to encode.\n * @returns The encoded buffer.\n * @throws Error if the hashType is invalid.\n */\nfunction encode(signature, hashType) {\n  valibot__WEBPACK_IMPORTED_MODULE_4__.parse(\n    valibot__WEBPACK_IMPORTED_MODULE_4__.object({\n      signature: (0,_types_js__WEBPACK_IMPORTED_MODULE_3__.NBufferSchemaFactory)(64),\n      hashType: _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt8Schema,\n    }),\n    { signature, hashType },\n  );\n  if (!(0,_script_js__WEBPACK_IMPORTED_MODULE_1__.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const hashTypeBuffer = new Uint8Array(1);\n  uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.writeUInt8(hashTypeBuffer, 0, hashType);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return uint8array_tools__WEBPACK_IMPORTED_MODULE_2__.concat([_bip66_js__WEBPACK_IMPORTED_MODULE_0__.encode(r, s), hashTypeBuffer]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3NjcmlwdF9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvQztBQUNZO0FBQ25CO0FBQ2E7QUFDcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvREFBWTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxtQkFBbUIsdURBQWU7QUFDbEMsT0FBTyw2REFBaUI7QUFDeEI7QUFDQTtBQUNBLGtCQUFrQiw2Q0FBWTtBQUM5QjtBQUNBO0FBQ0Esb0JBQW9CLG9EQUFZO0FBQ2hDLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxFQUFFLDBDQUFPO0FBQ1QsSUFBSSwyQ0FBUTtBQUNaLGlCQUFpQiwrREFBb0I7QUFDckMsZ0JBQWdCLGtEQUFXO0FBQzNCLEtBQUs7QUFDTCxNQUFNLHFCQUFxQjtBQUMzQjtBQUNBLE9BQU8sNkRBQWlCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0RBQWdCO0FBQ2xCO0FBQ0E7QUFDQSxTQUFTLG9EQUFZLEVBQUUsNkNBQVk7QUFDbkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3NjcmlwdF9zaWduYXR1cmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmlwNjYgZnJvbSAnLi9iaXA2Ni5qcyc7XG5pbXBvcnQgeyBpc0RlZmluZWRIYXNoVHlwZSB9IGZyb20gJy4vc2NyaXB0LmpzJztcbmltcG9ydCAqIGFzIHYgZnJvbSAndmFsaWJvdCc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmltcG9ydCB7IE5CdWZmZXJTY2hlbWFGYWN0b3J5LCBVSW50OFNjaGVtYSB9IGZyb20gJy4vdHlwZXMuanMnO1xuY29uc3QgWkVSTyA9IG5ldyBVaW50OEFycmF5KDEpO1xuLyoqXG4gKiBDb252ZXJ0cyBhIGJ1ZmZlciB0byBhIERFUi1lbmNvZGVkIGJ1ZmZlci5cbiAqIEBwYXJhbSB4IC0gVGhlIGJ1ZmZlciB0byBiZSBjb252ZXJ0ZWQuXG4gKiBAcmV0dXJucyBUaGUgREVSLWVuY29kZWQgYnVmZmVyLlxuICovXG5mdW5jdGlvbiB0b0RFUih4KSB7XG4gIGxldCBpID0gMDtcbiAgd2hpbGUgKHhbaV0gPT09IDApICsraTtcbiAgaWYgKGkgPT09IHgubGVuZ3RoKSByZXR1cm4gWkVSTztcbiAgeCA9IHguc2xpY2UoaSk7XG4gIGlmICh4WzBdICYgMHg4MCkgcmV0dXJuIHRvb2xzLmNvbmNhdChbWkVSTywgeF0pO1xuICByZXR1cm4geDtcbn1cbi8qKlxuICogQ29udmVydHMgYSBERVItZW5jb2RlZCBzaWduYXR1cmUgdG8gYSBidWZmZXIuXG4gKiBJZiB0aGUgZmlyc3QgYnl0ZSBvZiB0aGUgaW5wdXQgYnVmZmVyIGlzIDB4MDAsIGl0IGlzIHNraXBwZWQuXG4gKiBUaGUgcmVzdWx0aW5nIGJ1ZmZlciBpcyAzMiBieXRlcyBsb25nLCBmaWxsZWQgd2l0aCB6ZXJvcyBpZiBuZWNlc3NhcnkuXG4gKiBAcGFyYW0geCAtIFRoZSBERVItZW5jb2RlZCBzaWduYXR1cmUuXG4gKiBAcmV0dXJucyBUaGUgY29udmVydGVkIGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gZnJvbURFUih4KSB7XG4gIGlmICh4WzBdID09PSAweDAwKSB4ID0geC5zbGljZSgxKTtcbiAgY29uc3QgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuICBjb25zdCBic3RhcnQgPSBNYXRoLm1heCgwLCAzMiAtIHgubGVuZ3RoKTtcbiAgYnVmZmVyLnNldCh4LCBic3RhcnQpO1xuICByZXR1cm4gYnVmZmVyO1xufVxuLy8gQklQNjI6IDEgYnl0ZSBoYXNoVHlwZSBmbGFnIChvbmx5IDB4MDEsIDB4MDIsIDB4MDMsIDB4ODEsIDB4ODIgYW5kIDB4ODMgYXJlIGFsbG93ZWQpXG4vKipcbiAqIERlY29kZXMgYSBidWZmZXIgaW50byBhIFNjcmlwdFNpZ25hdHVyZSBvYmplY3QuXG4gKiBAcGFyYW0gYnVmZmVyIC0gVGhlIGJ1ZmZlciB0byBkZWNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBTY3JpcHRTaWduYXR1cmUgb2JqZWN0LlxuICogQHRocm93cyBFcnJvciBpZiB0aGUgaGFzaFR5cGUgaXMgaW52YWxpZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShidWZmZXIpIHtcbiAgY29uc3QgaGFzaFR5cGUgPSB0b29scy5yZWFkVUludDgoYnVmZmVyLCBidWZmZXIubGVuZ3RoIC0gMSk7XG4gIGlmICghaXNEZWZpbmVkSGFzaFR5cGUoaGFzaFR5cGUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGhhc2hUeXBlICcgKyBoYXNoVHlwZSk7XG4gIH1cbiAgY29uc3QgZGVjb2RlZCA9IGJpcDY2LmRlY29kZShidWZmZXIuc3ViYXJyYXkoMCwgLTEpKTtcbiAgY29uc3QgciA9IGZyb21ERVIoZGVjb2RlZC5yKTtcbiAgY29uc3QgcyA9IGZyb21ERVIoZGVjb2RlZC5zKTtcbiAgY29uc3Qgc2lnbmF0dXJlID0gdG9vbHMuY29uY2F0KFtyLCBzXSk7XG4gIHJldHVybiB7IHNpZ25hdHVyZSwgaGFzaFR5cGUgfTtcbn1cbi8qKlxuICogRW5jb2RlcyBhIHNpZ25hdHVyZSBhbmQgaGFzaCB0eXBlIGludG8gYSBidWZmZXIuXG4gKiBAcGFyYW0gc2lnbmF0dXJlIC0gVGhlIHNpZ25hdHVyZSB0byBlbmNvZGUuXG4gKiBAcGFyYW0gaGFzaFR5cGUgLSBUaGUgaGFzaCB0eXBlIHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIGJ1ZmZlci5cbiAqIEB0aHJvd3MgRXJyb3IgaWYgdGhlIGhhc2hUeXBlIGlzIGludmFsaWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoc2lnbmF0dXJlLCBoYXNoVHlwZSkge1xuICB2LnBhcnNlKFxuICAgIHYub2JqZWN0KHtcbiAgICAgIHNpZ25hdHVyZTogTkJ1ZmZlclNjaGVtYUZhY3RvcnkoNjQpLFxuICAgICAgaGFzaFR5cGU6IFVJbnQ4U2NoZW1hLFxuICAgIH0pLFxuICAgIHsgc2lnbmF0dXJlLCBoYXNoVHlwZSB9LFxuICApO1xuICBpZiAoIWlzRGVmaW5lZEhhc2hUeXBlKGhhc2hUeXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBoYXNoVHlwZSAnICsgaGFzaFR5cGUpO1xuICB9XG4gIGNvbnN0IGhhc2hUeXBlQnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoMSk7XG4gIHRvb2xzLndyaXRlVUludDgoaGFzaFR5cGVCdWZmZXIsIDAsIGhhc2hUeXBlKTtcbiAgY29uc3QgciA9IHRvREVSKHNpZ25hdHVyZS5zbGljZSgwLCAzMikpO1xuICBjb25zdCBzID0gdG9ERVIoc2lnbmF0dXJlLnNsaWNlKDMyLCA2NCkpO1xuICByZXR1cm4gdG9vbHMuY29uY2F0KFtiaXA2Ni5lbmNvZGUociwgcyksIGhhc2hUeXBlQnVmZmVyXSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script_signature.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bufferutils.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/bufferutils.js\");\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/crypto.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./script.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/script.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\");\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\n\n\n\n\n\n\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_BUFFER = new Uint8Array(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n);\nconst ONE = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n);\nconst VALUE_UINT64_MAX = uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex('ffffffffffffffff');\nconst BLANK_OUTPUT = {\n  script: EMPTY_BUFFER,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\n/**\n * Represents a Bitcoin transaction.\n */\nclass Transaction {\n  static DEFAULT_SEQUENCE = 0xffffffff;\n  static SIGHASH_DEFAULT = 0x00;\n  static SIGHASH_ALL = 0x01;\n  static SIGHASH_NONE = 0x02;\n  static SIGHASH_SINGLE = 0x03;\n  static SIGHASH_ANYONECANPAY = 0x80;\n  static SIGHASH_OUTPUT_MASK = 0x03;\n  static SIGHASH_INPUT_MASK = 0x80;\n  static ADVANCED_TRANSACTION_MARKER = 0x00;\n  static ADVANCED_TRANSACTION_FLAG = 0x01;\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.fromHex(hex), false);\n  }\n  static isCoinbaseHash(buffer) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(_types_js__WEBPACK_IMPORTED_MODULE_3__.Hash256bitSchema, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  version = 1;\n  locktime = 0;\n  ins = [];\n  outs = [];\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.Hash256bitSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        valibot__WEBPACK_IMPORTED_MODULE_5__.nullable(valibot__WEBPACK_IMPORTED_MODULE_5__.optional(_types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema)),\n        valibot__WEBPACK_IMPORTED_MODULE_5__.nullable(valibot__WEBPACK_IMPORTED_MODULE_5__.optional(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema)),\n      ]),\n      [hash, index, sequence, scriptSig],\n    );\n    if (sequence === undefined || sequence === null) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_BUFFER,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema, _types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema]), [\n      scriptPubKey,\n      value,\n    ]);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.ins.length) +\n      _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([_types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema, _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema, valibot__WEBPACK_IMPORTED_MODULE_5__.number()]), [\n      inIndex,\n      prevOutScript,\n      hashType,\n    ]);\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = _script_js__WEBPACK_IMPORTED_MODULE_2__.compile(\n      _script_js__WEBPACK_IMPORTED_MODULE_2__.decompile(prevOutScript).filter(x => {\n        return x !== _script_js__WEBPACK_IMPORTED_MODULE_2__.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_BUFFER;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = new Uint8Array(txTmp.byteLength(false) + 4);\n    uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.writeInt32(buffer, buffer.length - 4, hashType, 'LE');\n    txTmp.__toBuffer(buffer, 0, false);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(buffer);\n  }\n  hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema),\n        valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema),\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n      ]),\n      [inIndex, prevOutScripts, values, hashType],\n    );\n    if (\n      values.length !== this.ins.length ||\n      prevOutScripts.length !== this.ins.length\n    ) {\n      throw new Error('Must supply prevout script and value for all inputs');\n    }\n    const outputType =\n      hashType === Transaction.SIGHASH_DEFAULT\n        ? Transaction.SIGHASH_ALL\n        : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n    const inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n    const isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n    const isNone = outputType === Transaction.SIGHASH_NONE;\n    const isSingle = outputType === Transaction.SIGHASH_SINGLE;\n    let hashPrevouts = EMPTY_BUFFER;\n    let hashAmounts = EMPTY_BUFFER;\n    let hashScriptPubKeys = EMPTY_BUFFER;\n    let hashSequences = EMPTY_BUFFER;\n    let hashOutputs = EMPTY_BUFFER;\n    if (!isAnyoneCanPay) {\n      let bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(36 * this.ins.length);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(8 * this.ins.length);\n      values.forEach(value => bufferWriter.writeInt64(value));\n      hashAmounts = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(\n        prevOutScripts.map(varSliceSize).reduce((a, b) => a + b),\n      );\n      prevOutScripts.forEach(prevOutScript =>\n        bufferWriter.writeVarSlice(prevOutScript),\n      );\n      hashScriptPubKeys = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n      bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(4 * this.ins.length);\n      this.ins.forEach(txIn => bufferWriter.writeUInt32(txIn.sequence));\n      hashSequences = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    }\n    if (!(isNone || isSingle)) {\n      if (!this.outs.length)\n        throw new Error('Add outputs to the transaction before signing.');\n      const txOutsSize = this.outs\n        .map(output => 8 + varSliceSize(output.script))\n        .reduce((a, b) => a + b);\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(txOutsSize);\n      this.outs.forEach(out => {\n        bufferWriter.writeInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    } else if (isSingle && inIndex < this.outs.length) {\n      const output = this.outs[inIndex];\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(\n        8 + varSliceSize(output.script),\n      );\n      bufferWriter.writeInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end());\n    }\n    const spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n    // Length calculation from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n    // With extension from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n    const sigMsgSize =\n      174 -\n      (isAnyoneCanPay ? 49 : 0) -\n      (isNone ? 32 : 0) +\n      (annex ? 32 : 0) +\n      (leafHash ? 37 : 0);\n    const sigMsgWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(sigMsgSize);\n    sigMsgWriter.writeUInt8(hashType);\n    // Transaction\n    sigMsgWriter.writeInt32(this.version);\n    sigMsgWriter.writeUInt32(this.locktime);\n    sigMsgWriter.writeSlice(hashPrevouts);\n    sigMsgWriter.writeSlice(hashAmounts);\n    sigMsgWriter.writeSlice(hashScriptPubKeys);\n    sigMsgWriter.writeSlice(hashSequences);\n    if (!(isNone || isSingle)) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // Input\n    sigMsgWriter.writeUInt8(spendType);\n    if (isAnyoneCanPay) {\n      const input = this.ins[inIndex];\n      sigMsgWriter.writeSlice(input.hash);\n      sigMsgWriter.writeUInt32(input.index);\n      sigMsgWriter.writeInt64(values[inIndex]);\n      sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n      sigMsgWriter.writeUInt32(input.sequence);\n    } else {\n      sigMsgWriter.writeUInt32(inIndex);\n    }\n    if (annex) {\n      const bufferWriter = _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter.withCapacity(varSliceSize(annex));\n      bufferWriter.writeVarSlice(annex);\n      sigMsgWriter.writeSlice((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_6__.sha256)(bufferWriter.end()));\n    }\n    // Output\n    if (isSingle) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // BIP342 extension\n    if (leafHash) {\n      sigMsgWriter.writeSlice(leafHash);\n      sigMsgWriter.writeUInt8(0);\n      sigMsgWriter.writeUInt32(0xffffffff);\n    }\n    // Extra zero byte because:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.taggedHash(\n      'TapSighash',\n      uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.concat([Uint8Array.from([0x00]), sigMsgWriter.end()]),\n    );\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(\n      valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.SatoshiSchema,\n        _types_js__WEBPACK_IMPORTED_MODULE_3__.UInt32Schema,\n      ]),\n      [inIndex, prevOutScript, value, hashType],\n    );\n    let tbuffer = Uint8Array.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = new Uint8Array(36 * this.ins.length);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = new Uint8Array(4 * this.ins.length);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = new Uint8Array(txOutsSize);\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = new Uint8Array(8 + varSliceSize(output.script));\n      bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n      bufferWriter.writeInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n    }\n    tbuffer = new Uint8Array(156 + varSliceSize(prevOutScript));\n    bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return new Uint8Array(32);\n    return _crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex((0,_bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.reverseBuffer)(this.getHash(false)));\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_4__.toHex(this.toBuffer(undefined, undefined));\n  }\n  setInputScript(index, scriptSig) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([valibot__WEBPACK_IMPORTED_MODULE_5__.number(), _types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema]), [index, scriptSig]);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    valibot__WEBPACK_IMPORTED_MODULE_5__.parse(valibot__WEBPACK_IMPORTED_MODULE_5__.tuple([valibot__WEBPACK_IMPORTED_MODULE_5__.number(), valibot__WEBPACK_IMPORTED_MODULE_5__.array(_types_js__WEBPACK_IMPORTED_MODULE_3__.BufferSchema)]), [\n      index,\n      witness,\n    ]);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = new Uint8Array(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new _bufferutils_js__WEBPACK_IMPORTED_MODULE_0__.BufferWriter(buffer, initialOffset || 0);\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/transaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Buffer256bitSchema: () => (/* binding */ Buffer256bitSchema),\n/* harmony export */   BufferSchema: () => (/* binding */ BufferSchema),\n/* harmony export */   Hash160bitSchema: () => (/* binding */ Hash160bitSchema),\n/* harmony export */   Hash256bitSchema: () => (/* binding */ Hash256bitSchema),\n/* harmony export */   HexSchema: () => (/* binding */ HexSchema),\n/* harmony export */   NBufferSchemaFactory: () => (/* binding */ NBufferSchemaFactory),\n/* harmony export */   NullablePartial: () => (/* binding */ NullablePartial),\n/* harmony export */   SatoshiSchema: () => (/* binding */ SatoshiSchema),\n/* harmony export */   TAPLEAF_VERSION_MASK: () => (/* binding */ TAPLEAF_VERSION_MASK),\n/* harmony export */   UInt32Schema: () => (/* binding */ UInt32Schema),\n/* harmony export */   UInt8Schema: () => (/* binding */ UInt8Schema),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isTapleaf: () => (/* binding */ isTapleaf),\n/* harmony export */   isTaptree: () => (/* binding */ isTaptree),\n/* harmony export */   stacksEqual: () => (/* binding */ stacksEqual)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\");\n\n\nconst ZERO32 = new Uint8Array(32);\nconst EC_P = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.fromHex(\n  'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',\n);\nconst NBufferSchemaFactory = size =>\n  valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(valibot__WEBPACK_IMPORTED_MODULE_1__.instance(Uint8Array), valibot__WEBPACK_IMPORTED_MODULE_1__.length(size));\n/**\n * Checks if two arrays of Buffers are equal.\n * @param a - The first array of Buffers.\n * @param b - The second array of Buffers.\n * @returns True if the arrays are equal, false otherwise.\n */\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(x, b[i]) === 0;\n  });\n}\n/**\n * Checks if the given value is a valid elliptic curve point.\n * @param p - The value to check.\n * @returns True if the value is a valid elliptic curve point, false otherwise.\n */\nfunction isPoint(p) {\n  if (!(p instanceof Uint8Array)) return false;\n  if (p.length < 33) return false;\n  const t = p[0];\n  const x = p.slice(1, 33);\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(ZERO32, x) === 0) return false;\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(x, EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    return true;\n  }\n  const y = p.slice(33);\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(ZERO32, y) === 0) return false;\n  if (uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.compare(y, EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\nconst TAPLEAF_VERSION_MASK = 0xfe;\nfunction isTapleaf(o) {\n  if (!o || !('output' in o)) return false;\n  if (!(o.output instanceof Uint8Array)) return false;\n  if (o.version !== undefined)\n    return (o.version & TAPLEAF_VERSION_MASK) === o.version;\n  return true;\n}\nfunction isTaptree(scriptTree) {\n  if (!Array.isArray(scriptTree)) return isTapleaf(scriptTree);\n  if (scriptTree.length !== 2) return false;\n  return scriptTree.every(t => isTaptree(t));\n}\nconst Buffer256bitSchema = NBufferSchemaFactory(32);\nconst Hash160bitSchema = NBufferSchemaFactory(20);\nconst Hash256bitSchema = NBufferSchemaFactory(32);\nconst BufferSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.instance(Uint8Array);\nconst HexSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(valibot__WEBPACK_IMPORTED_MODULE_1__.string(), valibot__WEBPACK_IMPORTED_MODULE_1__.regex(/^([0-9a-f]{2})+$/i));\nconst UInt8Schema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.number(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.integer(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0xff),\n);\nconst UInt32Schema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.number(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.integer(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0xffffffff),\n);\nconst SatoshiSchema = valibot__WEBPACK_IMPORTED_MODULE_1__.pipe(\n  valibot__WEBPACK_IMPORTED_MODULE_1__.bigint(),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.minValue(0n),\n  valibot__WEBPACK_IMPORTED_MODULE_1__.maxValue(0x7fffffffffffffffn),\n);\nconst NullablePartial = a =>\n  valibot__WEBPACK_IMPORTED_MODULE_1__.object(\n    Object.entries(a).reduce(\n      (acc, next) => ({ ...acc, [next[0]]: valibot__WEBPACK_IMPORTED_MODULE_1__.nullish(next[1]) }),\n      {},\n    ),\n  );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iaXRjb2luanMtbGliQDcuMC4wLXJjLjBfdHlwZXNjcmlwdEA1LjkuMi9ub2RlX21vZHVsZXMvYml0Y29pbmpzLWxpYi9zcmMvZXNtL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ2I7QUFDN0I7QUFDQSxhQUFhLHFEQUFhO0FBQzFCO0FBQ0E7QUFDTztBQUNQLEVBQUUseUNBQU0sQ0FBQyw2Q0FBVSxjQUFjLDJDQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFdBQVcscURBQWE7QUFDeEIsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFhO0FBQ25CLE1BQU0scURBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFhO0FBQ25CLE1BQU0scURBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNkNBQVU7QUFDL0Isa0JBQWtCLHlDQUFNLENBQUMsMkNBQVEsSUFBSSwwQ0FBTyxhQUFhLEVBQUU7QUFDM0Qsb0JBQW9CLHlDQUFNO0FBQ2pDLEVBQUUsMkNBQVE7QUFDVixFQUFFLDRDQUFTO0FBQ1gsRUFBRSw2Q0FBVTtBQUNaLEVBQUUsNkNBQVU7QUFDWjtBQUNPLHFCQUFxQix5Q0FBTTtBQUNsQyxFQUFFLDJDQUFRO0FBQ1YsRUFBRSw0Q0FBUztBQUNYLEVBQUUsNkNBQVU7QUFDWixFQUFFLDZDQUFVO0FBQ1o7QUFDTyxzQkFBc0IseUNBQU07QUFDbkMsRUFBRSwyQ0FBUTtBQUNWLEVBQUUsNkNBQVU7QUFDWixFQUFFLDZDQUFVO0FBQ1o7QUFDTztBQUNQLEVBQUUsMkNBQVE7QUFDVjtBQUNBLHdCQUF3QixtQkFBbUIsNENBQVMsV0FBVztBQUMvRCxRQUFRO0FBQ1I7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JpdGNvaW5qcy1saWJANy4wLjAtcmMuMF90eXBlc2NyaXB0QDUuOS4yL25vZGVfbW9kdWxlcy9iaXRjb2luanMtbGliL3NyYy9lc20vdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndWludDhhcnJheS10b29scyc7XG5pbXBvcnQgKiBhcyB2IGZyb20gJ3ZhbGlib3QnO1xuY29uc3QgWkVSTzMyID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuY29uc3QgRUNfUCA9IHRvb2xzLmZyb21IZXgoXG4gICdmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZWZmZmZmYzJmJyxcbik7XG5leHBvcnQgY29uc3QgTkJ1ZmZlclNjaGVtYUZhY3RvcnkgPSBzaXplID0+XG4gIHYucGlwZSh2Lmluc3RhbmNlKFVpbnQ4QXJyYXkpLCB2Lmxlbmd0aChzaXplKSk7XG4vKipcbiAqIENoZWNrcyBpZiB0d28gYXJyYXlzIG9mIEJ1ZmZlcnMgYXJlIGVxdWFsLlxuICogQHBhcmFtIGEgLSBUaGUgZmlyc3QgYXJyYXkgb2YgQnVmZmVycy5cbiAqIEBwYXJhbSBiIC0gVGhlIHNlY29uZCBhcnJheSBvZiBCdWZmZXJzLlxuICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgYXJyYXlzIGFyZSBlcXVhbCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RhY2tzRXF1YWwoYSwgYikge1xuICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBhLmV2ZXJ5KCh4LCBpKSA9PiB7XG4gICAgcmV0dXJuIHRvb2xzLmNvbXBhcmUoeCwgYltpXSkgPT09IDA7XG4gIH0pO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIHZhbHVlIGlzIGEgdmFsaWQgZWxsaXB0aWMgY3VydmUgcG9pbnQuXG4gKiBAcGFyYW0gcCAtIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIFRydWUgaWYgdGhlIHZhbHVlIGlzIGEgdmFsaWQgZWxsaXB0aWMgY3VydmUgcG9pbnQsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUG9pbnQocCkge1xuICBpZiAoIShwIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHJldHVybiBmYWxzZTtcbiAgaWYgKHAubGVuZ3RoIDwgMzMpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgdCA9IHBbMF07XG4gIGNvbnN0IHggPSBwLnNsaWNlKDEsIDMzKTtcbiAgaWYgKHRvb2xzLmNvbXBhcmUoWkVSTzMyLCB4KSA9PT0gMCkgcmV0dXJuIGZhbHNlO1xuICBpZiAodG9vbHMuY29tcGFyZSh4LCBFQ19QKSA+PSAwKSByZXR1cm4gZmFsc2U7XG4gIGlmICgodCA9PT0gMHgwMiB8fCB0ID09PSAweDAzKSAmJiBwLmxlbmd0aCA9PT0gMzMpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCB5ID0gcC5zbGljZSgzMyk7XG4gIGlmICh0b29scy5jb21wYXJlKFpFUk8zMiwgeSkgPT09IDApIHJldHVybiBmYWxzZTtcbiAgaWYgKHRvb2xzLmNvbXBhcmUoeSwgRUNfUCkgPj0gMCkgcmV0dXJuIGZhbHNlO1xuICBpZiAodCA9PT0gMHgwNCAmJiBwLmxlbmd0aCA9PT0gNjUpIHJldHVybiB0cnVlO1xuICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgY29uc3QgVEFQTEVBRl9WRVJTSU9OX01BU0sgPSAweGZlO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGFwbGVhZihvKSB7XG4gIGlmICghbyB8fCAhKCdvdXRwdXQnIGluIG8pKSByZXR1cm4gZmFsc2U7XG4gIGlmICghKG8ub3V0cHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkpIHJldHVybiBmYWxzZTtcbiAgaWYgKG8udmVyc2lvbiAhPT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiAoby52ZXJzaW9uICYgVEFQTEVBRl9WRVJTSU9OX01BU0spID09PSBvLnZlcnNpb247XG4gIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVGFwdHJlZShzY3JpcHRUcmVlKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShzY3JpcHRUcmVlKSkgcmV0dXJuIGlzVGFwbGVhZihzY3JpcHRUcmVlKTtcbiAgaWYgKHNjcmlwdFRyZWUubGVuZ3RoICE9PSAyKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBzY3JpcHRUcmVlLmV2ZXJ5KHQgPT4gaXNUYXB0cmVlKHQpKTtcbn1cbmV4cG9ydCBjb25zdCBCdWZmZXIyNTZiaXRTY2hlbWEgPSBOQnVmZmVyU2NoZW1hRmFjdG9yeSgzMik7XG5leHBvcnQgY29uc3QgSGFzaDE2MGJpdFNjaGVtYSA9IE5CdWZmZXJTY2hlbWFGYWN0b3J5KDIwKTtcbmV4cG9ydCBjb25zdCBIYXNoMjU2Yml0U2NoZW1hID0gTkJ1ZmZlclNjaGVtYUZhY3RvcnkoMzIpO1xuZXhwb3J0IGNvbnN0IEJ1ZmZlclNjaGVtYSA9IHYuaW5zdGFuY2UoVWludDhBcnJheSk7XG5leHBvcnQgY29uc3QgSGV4U2NoZW1hID0gdi5waXBlKHYuc3RyaW5nKCksIHYucmVnZXgoL14oWzAtOWEtZl17Mn0pKyQvaSkpO1xuZXhwb3J0IGNvbnN0IFVJbnQ4U2NoZW1hID0gdi5waXBlKFxuICB2Lm51bWJlcigpLFxuICB2LmludGVnZXIoKSxcbiAgdi5taW5WYWx1ZSgwKSxcbiAgdi5tYXhWYWx1ZSgweGZmKSxcbik7XG5leHBvcnQgY29uc3QgVUludDMyU2NoZW1hID0gdi5waXBlKFxuICB2Lm51bWJlcigpLFxuICB2LmludGVnZXIoKSxcbiAgdi5taW5WYWx1ZSgwKSxcbiAgdi5tYXhWYWx1ZSgweGZmZmZmZmZmKSxcbik7XG5leHBvcnQgY29uc3QgU2F0b3NoaVNjaGVtYSA9IHYucGlwZShcbiAgdi5iaWdpbnQoKSxcbiAgdi5taW5WYWx1ZSgwbiksXG4gIHYubWF4VmFsdWUoMHg3ZmZmZmZmZmZmZmZmZmZmbiksXG4pO1xuZXhwb3J0IGNvbnN0IE51bGxhYmxlUGFydGlhbCA9IGEgPT5cbiAgdi5vYmplY3QoXG4gICAgT2JqZWN0LmVudHJpZXMoYSkucmVkdWNlKFxuICAgICAgKGFjYywgbmV4dCkgPT4gKHsgLi4uYWNjLCBbbmV4dFswXV06IHYubnVsbGlzaChuZXh0WzFdKSB9KSxcbiAgICAgIHt9LFxuICAgICksXG4gICk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bitcoinjs-lib@7.0.0-rc.0_typescript@5.9.2/node_modules/bitcoinjs-lib/src/esm/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var base_x__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base-x */ \"(app-pages-browser)/./node_modules/.pnpm/base-x@5.0.1/node_modules/base-x/src/esm/index.js\");\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,base_x__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ALPHABET));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iczU4QDYuMC4wL25vZGVfbW9kdWxlcy9iczU4L3NyYy9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkI7QUFDM0I7QUFDQSxpRUFBZSxrREFBSyxVQUFVLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iczU4QDYuMC4wL25vZGVfbW9kdWxlcy9iczU4L3NyYy9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2V4IGZyb20gJ2Jhc2UteCc7XG52YXIgQUxQSEFCRVQgPSAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eic7XG5leHBvcnQgZGVmYXVsdCBiYXNleChBTFBIQUJFVCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/base.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/base.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/.pnpm/bs58@6.0.0/node_modules/bs58/src/esm/index.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(checksumFn) {\n    // Encode a buffer as a base58-check encoded string\n    function encode(payload) {\n        var payloadU8 = Uint8Array.from(payload);\n        var checksum = checksumFn(payloadU8);\n        var length = payloadU8.length + 4;\n        var both = new Uint8Array(length);\n        both.set(payloadU8, 0);\n        both.set(checksum.subarray(0, 4), payloadU8.length);\n        return bs58__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(both);\n    }\n    function decodeRaw(buffer) {\n        var payload = buffer.slice(0, -4);\n        var checksum = buffer.slice(-4);\n        var newChecksum = checksumFn(payload);\n        // eslint-disable-next-line\n        if (checksum[0] ^ newChecksum[0] |\n            checksum[1] ^ newChecksum[1] |\n            checksum[2] ^ newChecksum[2] |\n            checksum[3] ^ newChecksum[3])\n            return;\n        return payload;\n    }\n    // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n    function decodeUnsafe(str) {\n        var buffer = bs58__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decodeUnsafe(str);\n        if (buffer == null)\n            return;\n        return decodeRaw(buffer);\n    }\n    function decode(str) {\n        var buffer = bs58__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(str);\n        var payload = decodeRaw(buffer);\n        if (payload == null)\n            throw new Error('Invalid checksum');\n        return payload;\n    }\n    return {\n        encode: encode,\n        decode: decode,\n        decodeUnsafe: decodeUnsafe\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iczU4Y2hlY2tANC4wLjAvbm9kZV9tb2R1bGVzL2JzNThjaGVjay9zcmMvZXNtL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNhO0FBQzFCLDZCQUFlLG9DQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRDQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0Q0FBTTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDRDQUFNO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9iczU4Y2hlY2tANC4wLjAvbm9kZV9tb2R1bGVzL2JzNThjaGVjay9zcmMvZXNtL2Jhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IGJhc2U1OCBmcm9tICdiczU4JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChjaGVja3N1bUZuKSB7XG4gICAgLy8gRW5jb2RlIGEgYnVmZmVyIGFzIGEgYmFzZTU4LWNoZWNrIGVuY29kZWQgc3RyaW5nXG4gICAgZnVuY3Rpb24gZW5jb2RlKHBheWxvYWQpIHtcbiAgICAgICAgdmFyIHBheWxvYWRVOCA9IFVpbnQ4QXJyYXkuZnJvbShwYXlsb2FkKTtcbiAgICAgICAgdmFyIGNoZWNrc3VtID0gY2hlY2tzdW1GbihwYXlsb2FkVTgpO1xuICAgICAgICB2YXIgbGVuZ3RoID0gcGF5bG9hZFU4Lmxlbmd0aCArIDQ7XG4gICAgICAgIHZhciBib3RoID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICAgICAgYm90aC5zZXQocGF5bG9hZFU4LCAwKTtcbiAgICAgICAgYm90aC5zZXQoY2hlY2tzdW0uc3ViYXJyYXkoMCwgNCksIHBheWxvYWRVOC5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gYmFzZTU4LmVuY29kZShib3RoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGVjb2RlUmF3KGJ1ZmZlcikge1xuICAgICAgICB2YXIgcGF5bG9hZCA9IGJ1ZmZlci5zbGljZSgwLCAtNCk7XG4gICAgICAgIHZhciBjaGVja3N1bSA9IGJ1ZmZlci5zbGljZSgtNCk7XG4gICAgICAgIHZhciBuZXdDaGVja3N1bSA9IGNoZWNrc3VtRm4ocGF5bG9hZCk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICBpZiAoY2hlY2tzdW1bMF0gXiBuZXdDaGVja3N1bVswXSB8XG4gICAgICAgICAgICBjaGVja3N1bVsxXSBeIG5ld0NoZWNrc3VtWzFdIHxcbiAgICAgICAgICAgIGNoZWNrc3VtWzJdIF4gbmV3Q2hlY2tzdW1bMl0gfFxuICAgICAgICAgICAgY2hlY2tzdW1bM10gXiBuZXdDaGVja3N1bVszXSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgcmV0dXJuIHBheWxvYWQ7XG4gICAgfVxuICAgIC8vIERlY29kZSBhIGJhc2U1OC1jaGVjayBlbmNvZGVkIHN0cmluZyB0byBhIGJ1ZmZlciwgbm8gcmVzdWx0IGlmIGNoZWNrc3VtIGlzIHdyb25nXG4gICAgZnVuY3Rpb24gZGVjb2RlVW5zYWZlKHN0cikge1xuICAgICAgICB2YXIgYnVmZmVyID0gYmFzZTU4LmRlY29kZVVuc2FmZShzdHIpO1xuICAgICAgICBpZiAoYnVmZmVyID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHJldHVybiBkZWNvZGVSYXcoYnVmZmVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGVjb2RlKHN0cikge1xuICAgICAgICB2YXIgYnVmZmVyID0gYmFzZTU4LmRlY29kZShzdHIpO1xuICAgICAgICB2YXIgcGF5bG9hZCA9IGRlY29kZVJhdyhidWZmZXIpO1xuICAgICAgICBpZiAocGF5bG9hZCA9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNoZWNrc3VtJyk7XG4gICAgICAgIHJldHVybiBwYXlsb2FkO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBlbmNvZGU6IGVuY29kZSxcbiAgICAgICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgICAgIGRlY29kZVVuc2FmZTogZGVjb2RlVW5zYWZlXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/base.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(app-pages-browser)/./node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/base.js\");\n\n\n\n// SHA256(SHA256(buffer))\nfunction sha256x2(buffer) {\n    return (0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)((0,_noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(buffer));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_base_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(sha256x2));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9iczU4Y2hlY2tANC4wLjAvbm9kZV9tb2R1bGVzL2JzNThjaGVjay9zcmMvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ2lDO0FBQ1I7QUFDdEM7QUFDQTtBQUNBLFdBQVcsNERBQU0sQ0FBQyw0REFBTTtBQUN4QjtBQUNBLGlFQUFlLG9EQUFhLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2JzNThjaGVja0A0LjAuMC9ub2RlX21vZHVsZXMvYnM1OGNoZWNrL3NyYy9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9zaGEyNTYnO1xuaW1wb3J0IGJzNThjaGVja0Jhc2UgZnJvbSAnLi9iYXNlLmpzJztcbi8vIFNIQTI1NihTSEEyNTYoYnVmZmVyKSlcbmZ1bmN0aW9uIHNoYTI1NngyKGJ1ZmZlcikge1xuICAgIHJldHVybiBzaGEyNTYoc2hhMjU2KGJ1ZmZlcikpO1xufVxuZXhwb3J0IGRlZmF1bHQgYnM1OGNoZWNrQmFzZShzaGEyNTZ4Mik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/bs58check@4.0.0/node_modules/bs58check/src/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"(app-pages-browser)/./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9pZWVlNzU0QDEuMi4xL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBLFNBQVMsVUFBVTs7QUFFbkI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2J0Yy9taWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUvdXR4by1wc2J0LWRlbW8vbm9kZV9tb2R1bGVzLy5wbnBtL2llZWU3NTRAMS4yLjEvbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIGllZWU3NTQuIEJTRC0zLUNsYXVzZSBMaWNlbnNlLiBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmcvb3BlbnNvdXJjZT4gKi9cbmV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fbtc%2Fmidl-x-bitcoin-summit-hackathon-2025%2Futxo-psbt-demo%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fbtc%2Fmidl-x-bitcoin-summit-hackathon-2025%2Futxo-psbt-demo%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE1LjMuMV9yZWFjdC1kb21AMTkuMS4xX3JlYWN0QDE5LjEuMV9fcmVhY3RAMTkuMS4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZidGMlMkZtaWRsLXgtYml0Y29pbi1zdW1taXQtaGFja2F0aG9uLTIwMjUlMkZ1dHhvLXBzYnQtZGVtbyUyRmFwcCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsc0pBQWdIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9hcHAvcGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fbtc%2Fmidl-x-bitcoin-summit-hackathon-2025%2Futxo-psbt-demo%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \*********************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE1LjMuMV9yZWFjdC1kb21AMTkuMS4xX3JlYWN0QDE5LjEuMV9fcmVhY3RAMTkuMS4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx5UUFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9idGMvbWlkbC14LWJpdGNvaW4tc3VtbWl0LWhhY2thdGhvbi0yMDI1L3V0eG8tcHNidC1kZW1vL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE1LjMuMV9yZWFjdC1kb21AMTkuMS4xX3JlYWN0QDE5LjEuMV9fcmVhY3RAMTkuMS4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/browser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/browser.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   readUInt16: () => (/* binding */ readUInt16),\n/* harmony export */   readUInt32: () => (/* binding */ readUInt32),\n/* harmony export */   readUInt64: () => (/* binding */ readUInt64),\n/* harmony export */   readUInt8: () => (/* binding */ readUInt8),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   writeUInt16: () => (/* binding */ writeUInt16),\n/* harmony export */   writeUInt32: () => (/* binding */ writeUInt32),\n/* harmony export */   writeUInt64: () => (/* binding */ writeUInt64),\n/* harmony export */   writeUInt8: () => (/* binding */ writeUInt8)\n/* harmony export */ });\nconst HEX_STRINGS = \"0123456789abcdefABCDEF\";\nconst HEX_CODES = HEX_STRINGS.split(\"\").map((c) => c.codePointAt(0));\nconst HEX_CODEPOINTS = Array(256)\n    .fill(true)\n    .map((_, i) => {\n    const s = String.fromCodePoint(i);\n    const index = HEX_STRINGS.indexOf(s);\n    // ABCDEF will use 10 - 15\n    return index < 0 ? undefined : index < 16 ? index : index - 6;\n});\nconst ENCODER = new TextEncoder();\nconst DECODER = new TextDecoder();\nfunction toUtf8(bytes) {\n    return DECODER.decode(bytes);\n}\nfunction fromUtf8(s) {\n    return ENCODER.encode(s);\n}\nfunction concat(arrays) {\n    const totalLength = arrays.reduce((a, b) => a + b.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n// There are two implementations.\n// One optimizes for length of the bytes, and uses TextDecoder.\n// One optimizes for iteration count, and appends strings.\n// This removes the overhead of TextDecoder.\nfunction toHex(bytes) {\n    const b = bytes || new Uint8Array();\n    return b.length > 512 ? _toHexLengthPerf(b) : _toHexIterPerf(b);\n}\nfunction _toHexIterPerf(bytes) {\n    let s = \"\";\n    for (let i = 0; i < bytes.length; ++i) {\n        s += HEX_STRINGS[HEX_CODEPOINTS[HEX_CODES[bytes[i] >> 4]]];\n        s += HEX_STRINGS[HEX_CODEPOINTS[HEX_CODES[bytes[i] & 15]]];\n    }\n    return s;\n}\nfunction _toHexLengthPerf(bytes) {\n    const hexBytes = new Uint8Array(bytes.length * 2);\n    for (let i = 0; i < bytes.length; ++i) {\n        hexBytes[i * 2] = HEX_CODES[bytes[i] >> 4];\n        hexBytes[i * 2 + 1] = HEX_CODES[bytes[i] & 15];\n    }\n    return DECODER.decode(hexBytes);\n}\n// Mimics Buffer.from(x, 'hex') logic\n// Stops on first non-hex string and returns\n// https://github.com/nodejs/node/blob/v14.18.1/src/string_bytes.cc#L246-L261\nfunction fromHex(hexString) {\n    const hexBytes = ENCODER.encode(hexString || \"\");\n    const resultBytes = new Uint8Array(Math.floor(hexBytes.length / 2));\n    let i;\n    for (i = 0; i < resultBytes.length; i++) {\n        const a = HEX_CODEPOINTS[hexBytes[i * 2]];\n        const b = HEX_CODEPOINTS[hexBytes[i * 2 + 1]];\n        if (a === undefined || b === undefined) {\n            break;\n        }\n        resultBytes[i] = (a << 4) | b;\n    }\n    return i === resultBytes.length ? resultBytes : resultBytes.slice(0, i);\n}\nfunction toBase64(bytes) {\n    return btoa(String.fromCharCode(...bytes));\n}\nfunction fromBase64(base64) {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\n// Same behavior as Buffer.compare()\nfunction compare(v1, v2) {\n    const minLength = Math.min(v1.length, v2.length);\n    for (let i = 0; i < minLength; ++i) {\n        if (v1[i] !== v2[i]) {\n            return v1[i] < v2[i] ? -1 : 1;\n        }\n    }\n    return v1.length === v2.length ? 0 : v1.length > v2.length ? 1 : -1;\n}\nfunction writeUInt8(buffer, offset, value) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0xff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xff}. Received ${value}`);\n    }\n    buffer[offset] = value;\n}\nfunction writeUInt16(buffer, offset, value, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffff}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 8) & 0xff;\n        buffer[offset + 1] = value & 0xff;\n    }\n}\nfunction writeUInt32(buffer, offset, value, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffffffff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffffffff}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n        buffer[offset + 2] = (value >> 16) & 0xff;\n        buffer[offset + 3] = (value >> 24) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 24) & 0xff;\n        buffer[offset + 1] = (value >> 16) & 0xff;\n        buffer[offset + 2] = (value >> 8) & 0xff;\n        buffer[offset + 3] = value & 0xff;\n    }\n}\nfunction writeUInt64(buffer, offset, value, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffffffffffffffffn) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffffffffffffffffn}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = Number(value & 0xffn);\n        buffer[offset + 1] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 7] = Number((value >> 56n) & 0xffn);\n    }\n    else {\n        buffer[offset] = Number((value >> 56n) & 0xffn);\n        buffer[offset + 1] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 7] = Number(value & 0xffn);\n    }\n}\nfunction readUInt8(buffer, offset) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    return buffer[offset];\n}\nfunction readUInt16(buffer, offset, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0;\n        num = (num << 8) + buffer[offset + 1];\n        num = (num << 8) + buffer[offset];\n        return num;\n    }\n    else {\n        let num = 0;\n        num = (num << 8) + buffer[offset];\n        num = (num << 8) + buffer[offset + 1];\n        return num;\n    }\n}\nfunction readUInt32(buffer, offset, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0;\n        num = ((num << 8) + buffer[offset + 3]) >>> 0;\n        num = ((num << 8) + buffer[offset + 2]) >>> 0;\n        num = ((num << 8) + buffer[offset + 1]) >>> 0;\n        num = ((num << 8) + buffer[offset]) >>> 0;\n        return num;\n    }\n    else {\n        let num = 0;\n        num = ((num << 8) + buffer[offset]) >>> 0;\n        num = ((num << 8) + buffer[offset + 1]) >>> 0;\n        num = ((num << 8) + buffer[offset + 2]) >>> 0;\n        num = ((num << 8) + buffer[offset + 3]) >>> 0;\n        return num;\n    }\n}\nfunction readUInt64(buffer, offset, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0n;\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset]);\n        return num;\n    }\n    else {\n        let num = 0n;\n        num = (num << 8n) + BigInt(buffer[offset]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        return num;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   readInt16: () => (/* binding */ readInt16),\n/* harmony export */   readInt32: () => (/* binding */ readInt32),\n/* harmony export */   readInt64: () => (/* binding */ readInt64),\n/* harmony export */   readInt8: () => (/* binding */ readInt8),\n/* harmony export */   readUInt16: () => (/* binding */ readUInt16),\n/* harmony export */   readUInt32: () => (/* binding */ readUInt32),\n/* harmony export */   readUInt64: () => (/* binding */ readUInt64),\n/* harmony export */   readUInt8: () => (/* binding */ readUInt8),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   writeInt16: () => (/* binding */ writeInt16),\n/* harmony export */   writeInt32: () => (/* binding */ writeInt32),\n/* harmony export */   writeInt64: () => (/* binding */ writeInt64),\n/* harmony export */   writeInt8: () => (/* binding */ writeInt8),\n/* harmony export */   writeUInt16: () => (/* binding */ writeUInt16),\n/* harmony export */   writeUInt32: () => (/* binding */ writeUInt32),\n/* harmony export */   writeUInt64: () => (/* binding */ writeUInt64),\n/* harmony export */   writeUInt8: () => (/* binding */ writeUInt8)\n/* harmony export */ });\nconst HEX_STRINGS = \"0123456789abcdefABCDEF\";\nconst HEX_CODES = HEX_STRINGS.split(\"\").map((c) => c.codePointAt(0));\nconst HEX_CODEPOINTS = Array(256)\n    .fill(true)\n    .map((_, i) => {\n    const s = String.fromCodePoint(i);\n    const index = HEX_STRINGS.indexOf(s);\n    // ABCDEF will use 10 - 15\n    return index < 0 ? undefined : index < 16 ? index : index - 6;\n});\nconst ENCODER = new TextEncoder();\nconst DECODER = new TextDecoder();\nfunction toUtf8(bytes) {\n    return DECODER.decode(bytes);\n}\nfunction fromUtf8(s) {\n    return ENCODER.encode(s);\n}\nfunction concat(arrays) {\n    const totalLength = arrays.reduce((a, b) => a + b.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n// There are two implementations.\n// One optimizes for length of the bytes, and uses TextDecoder.\n// One optimizes for iteration count, and appends strings.\n// This removes the overhead of TextDecoder.\nfunction toHex(bytes) {\n    const b = bytes || new Uint8Array();\n    return b.length > 512 ? _toHexLengthPerf(b) : _toHexIterPerf(b);\n}\nfunction _toHexIterPerf(bytes) {\n    let s = \"\";\n    for (let i = 0; i < bytes.length; ++i) {\n        s += HEX_STRINGS[HEX_CODEPOINTS[HEX_CODES[bytes[i] >> 4]]];\n        s += HEX_STRINGS[HEX_CODEPOINTS[HEX_CODES[bytes[i] & 15]]];\n    }\n    return s;\n}\nfunction _toHexLengthPerf(bytes) {\n    const hexBytes = new Uint8Array(bytes.length * 2);\n    for (let i = 0; i < bytes.length; ++i) {\n        hexBytes[i * 2] = HEX_CODES[bytes[i] >> 4];\n        hexBytes[i * 2 + 1] = HEX_CODES[bytes[i] & 15];\n    }\n    return DECODER.decode(hexBytes);\n}\n// Mimics Buffer.from(x, 'hex') logic\n// Stops on first non-hex string and returns\n// https://github.com/nodejs/node/blob/v14.18.1/src/string_bytes.cc#L246-L261\nfunction fromHex(hexString) {\n    const hexBytes = ENCODER.encode(hexString || \"\");\n    const resultBytes = new Uint8Array(Math.floor(hexBytes.length / 2));\n    let i;\n    for (i = 0; i < resultBytes.length; i++) {\n        const a = HEX_CODEPOINTS[hexBytes[i * 2]];\n        const b = HEX_CODEPOINTS[hexBytes[i * 2 + 1]];\n        if (a === undefined || b === undefined) {\n            break;\n        }\n        resultBytes[i] = (a << 4) | b;\n    }\n    return i === resultBytes.length ? resultBytes : resultBytes.slice(0, i);\n}\nfunction toBase64(bytes) {\n    return btoa(String.fromCharCode(...bytes));\n}\nfunction fromBase64(base64) {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\n// Same behavior as Buffer.compare()\nfunction compare(v1, v2) {\n    const minLength = Math.min(v1.length, v2.length);\n    for (let i = 0; i < minLength; ++i) {\n        if (v1[i] !== v2[i]) {\n            return v1[i] < v2[i] ? -1 : 1;\n        }\n    }\n    return v1.length === v2.length ? 0 : v1.length > v2.length ? 1 : -1;\n}\nfunction writeUInt8(buffer, offset, value) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0xff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xff}. Received ${value}`);\n    }\n    buffer[offset] = value;\n    return offset + 1;\n}\nfunction writeUInt16(buffer, offset, value, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffff}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 8) & 0xff;\n        buffer[offset + 1] = value & 0xff;\n    }\n    return offset + 2;\n}\nfunction writeUInt32(buffer, offset, value, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffffffff) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffffffff}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n        buffer[offset + 2] = (value >> 16) & 0xff;\n        buffer[offset + 3] = (value >> 24) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 24) & 0xff;\n        buffer[offset + 1] = (value >> 16) & 0xff;\n        buffer[offset + 2] = (value >> 8) & 0xff;\n        buffer[offset + 3] = value & 0xff;\n    }\n    return offset + 4;\n}\nfunction writeUInt64(buffer, offset, value, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (value > 0xffffffffffffffffn) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= 0 and <= ${0xffffffffffffffffn}. Received ${value}`);\n    }\n    if (littleEndian === \"LE\") {\n        buffer[offset] = Number(value & 0xffn);\n        buffer[offset + 1] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 7] = Number((value >> 56n) & 0xffn);\n    }\n    else {\n        buffer[offset] = Number((value >> 56n) & 0xffn);\n        buffer[offset + 1] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 7] = Number(value & 0xffn);\n    }\n    return offset + 8;\n}\nfunction readUInt8(buffer, offset) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    return buffer[offset];\n}\nfunction readUInt16(buffer, offset, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0;\n        num = (num << 8) + buffer[offset + 1];\n        num = (num << 8) + buffer[offset];\n        return num;\n    }\n    else {\n        let num = 0;\n        num = (num << 8) + buffer[offset];\n        num = (num << 8) + buffer[offset + 1];\n        return num;\n    }\n}\nfunction readUInt32(buffer, offset, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0;\n        num = ((num << 8) + buffer[offset + 3]) >>> 0;\n        num = ((num << 8) + buffer[offset + 2]) >>> 0;\n        num = ((num << 8) + buffer[offset + 1]) >>> 0;\n        num = ((num << 8) + buffer[offset]) >>> 0;\n        return num;\n    }\n    else {\n        let num = 0;\n        num = ((num << 8) + buffer[offset]) >>> 0;\n        num = ((num << 8) + buffer[offset + 1]) >>> 0;\n        num = ((num << 8) + buffer[offset + 2]) >>> 0;\n        num = ((num << 8) + buffer[offset + 3]) >>> 0;\n        return num;\n    }\n}\nfunction readUInt64(buffer, offset, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        let num = 0n;\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset]);\n        return num;\n    }\n    else {\n        let num = 0n;\n        num = (num << 8n) + BigInt(buffer[offset]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        return num;\n    }\n}\nfunction writeInt8(buffer, offset, value) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0x7f || value < -0x80) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= ${-0x80} and <= ${0x7f}. Received ${value}`);\n    }\n    buffer[offset] = value;\n    return offset + 1;\n}\nfunction writeInt16(buffer, offset, value, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0x7fff || value < -0x8000) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= ${-0x8000} and <= ${0x7fff}. Received ${value}`);\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 8) & 0xff;\n        buffer[offset + 1] = value & 0xff;\n    }\n    return offset + 2;\n}\nfunction writeInt32(buffer, offset, value, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0x7fffffff || value < -0x80000000) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= ${-0x80000000} and <= ${0x7fffffff}. Received ${value}`);\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        buffer[offset] = value & 0xff;\n        buffer[offset + 1] = (value >> 8) & 0xff;\n        buffer[offset + 2] = (value >> 16) & 0xff;\n        buffer[offset + 3] = (value >> 24) & 0xff;\n    }\n    else {\n        buffer[offset] = (value >> 24) & 0xff;\n        buffer[offset + 1] = (value >> 16) & 0xff;\n        buffer[offset + 2] = (value >> 8) & 0xff;\n        buffer[offset + 3] = value & 0xff;\n    }\n    return offset + 4;\n}\nfunction writeInt64(buffer, offset, value, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    if (value > 0x7fffffffffffffffn || value < -0x8000000000000000n) {\n        throw new Error(`The value of \"value\" is out of range. It must be >= ${-0x8000000000000000n} and <= ${0x7fffffffffffffffn}. Received ${value}`);\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        buffer[offset] = Number(value & 0xffn);\n        buffer[offset + 1] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 7] = Number((value >> 56n) & 0xffn);\n    }\n    else {\n        buffer[offset] = Number((value >> 56n) & 0xffn);\n        buffer[offset + 1] = Number((value >> 48n) & 0xffn);\n        buffer[offset + 2] = Number((value >> 40n) & 0xffn);\n        buffer[offset + 3] = Number((value >> 32n) & 0xffn);\n        buffer[offset + 4] = Number((value >> 24n) & 0xffn);\n        buffer[offset + 5] = Number((value >> 16n) & 0xffn);\n        buffer[offset + 6] = Number((value >> 8n) & 0xffn);\n        buffer[offset + 7] = Number(value & 0xffn);\n    }\n    return offset + 8;\n}\nfunction readInt8(buffer, offset) {\n    if (offset + 1 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    const val = buffer[offset];\n    if (val <= 0x7f) {\n        return val;\n    }\n    else {\n        return val - 0x100;\n    }\n}\nfunction readInt16(buffer, offset, littleEndian) {\n    if (offset + 2 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        const val = buffer[offset] + (buffer[offset + 1] << 8);\n        return buffer[offset + 1] <= 0x7f ? val : val - 0x10000;\n    }\n    else {\n        const val = (buffer[offset] << 8) + buffer[offset + 1];\n        return buffer[offset] <= 0x7f ? val : val - 0x10000;\n    }\n}\nfunction readInt32(buffer, offset, littleEndian) {\n    if (offset + 4 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    if (littleEndian === \"LE\") {\n        const val = buffer[offset] +\n            (buffer[offset + 1] << 8) +\n            (buffer[offset + 2] << 16) +\n            ((buffer[offset + 3] << 24) >>> 0);\n        return buffer[offset + 3] <= 0x7f ? val : val - 0x100000000;\n    }\n    else {\n        const val = ((buffer[offset] << 24) >>> 0) +\n            (buffer[offset + 1] << 16) +\n            (buffer[offset + 2] << 8) +\n            buffer[offset + 3];\n        return buffer[offset] <= 0x7f ? val : val - 0x100000000;\n    }\n}\nfunction readInt64(buffer, offset, littleEndian) {\n    if (offset + 8 > buffer.length) {\n        throw new Error(\"Offset is outside the bounds of Uint8Array\");\n    }\n    littleEndian = littleEndian.toUpperCase();\n    let num = 0n;\n    if (littleEndian === \"LE\") {\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset]);\n        return buffer[offset + 7] <= 0x7f ? num : num - 0x10000000000000000n;\n    }\n    else {\n        let num = 0n;\n        num = (num << 8n) + BigInt(buffer[offset]);\n        num = (num << 8n) + BigInt(buffer[offset + 1]);\n        num = (num << 8n) + BigInt(buffer[offset + 2]);\n        num = (num << 8n) + BigInt(buffer[offset + 3]);\n        num = (num << 8n) + BigInt(buffer[offset + 4]);\n        num = (num << 8n) + BigInt(buffer[offset + 5]);\n        num = (num << 8n) + BigInt(buffer[offset + 6]);\n        num = (num << 8n) + BigInt(buffer[offset + 7]);\n        return buffer[offset] <= 0x7f ? num : num - 0x10000000000000000n;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.9/node_modules/uint8array-tools/src/mjs/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE64_REGEX: () => (/* binding */ BASE64_REGEX),\n/* harmony export */   BIC_REGEX: () => (/* binding */ BIC_REGEX),\n/* harmony export */   CUID2_REGEX: () => (/* binding */ CUID2_REGEX),\n/* harmony export */   DECIMAL_REGEX: () => (/* binding */ DECIMAL_REGEX),\n/* harmony export */   EMAIL_REGEX: () => (/* binding */ EMAIL_REGEX),\n/* harmony export */   EMOJI_REGEX: () => (/* binding */ EMOJI_REGEX),\n/* harmony export */   HEXADECIMAL_REGEX: () => (/* binding */ HEXADECIMAL_REGEX),\n/* harmony export */   HEX_COLOR_REGEX: () => (/* binding */ HEX_COLOR_REGEX),\n/* harmony export */   IMEI_REGEX: () => (/* binding */ IMEI_REGEX),\n/* harmony export */   IPV4_REGEX: () => (/* binding */ IPV4_REGEX),\n/* harmony export */   IPV6_REGEX: () => (/* binding */ IPV6_REGEX),\n/* harmony export */   IP_REGEX: () => (/* binding */ IP_REGEX),\n/* harmony export */   ISO_DATE_REGEX: () => (/* binding */ ISO_DATE_REGEX),\n/* harmony export */   ISO_DATE_TIME_REGEX: () => (/* binding */ ISO_DATE_TIME_REGEX),\n/* harmony export */   ISO_TIMESTAMP_REGEX: () => (/* binding */ ISO_TIMESTAMP_REGEX),\n/* harmony export */   ISO_TIME_REGEX: () => (/* binding */ ISO_TIME_REGEX),\n/* harmony export */   ISO_TIME_SECOND_REGEX: () => (/* binding */ ISO_TIME_SECOND_REGEX),\n/* harmony export */   ISO_WEEK_REGEX: () => (/* binding */ ISO_WEEK_REGEX),\n/* harmony export */   MAC48_REGEX: () => (/* binding */ MAC48_REGEX),\n/* harmony export */   MAC64_REGEX: () => (/* binding */ MAC64_REGEX),\n/* harmony export */   MAC_REGEX: () => (/* binding */ MAC_REGEX),\n/* harmony export */   OCTAL_REGEX: () => (/* binding */ OCTAL_REGEX),\n/* harmony export */   ULID_REGEX: () => (/* binding */ ULID_REGEX),\n/* harmony export */   UUID_REGEX: () => (/* binding */ UUID_REGEX),\n/* harmony export */   ValiError: () => (/* binding */ ValiError),\n/* harmony export */   _addIssue: () => (/* binding */ _addIssue),\n/* harmony export */   _isLuhnAlgo: () => (/* binding */ _isLuhnAlgo),\n/* harmony export */   _isValidObjectKey: () => (/* binding */ _isValidObjectKey),\n/* harmony export */   _joinExpects: () => (/* binding */ _joinExpects),\n/* harmony export */   _stringify: () => (/* binding */ _stringify),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   array: () => (/* binding */ array),\n/* harmony export */   arrayAsync: () => (/* binding */ arrayAsync),\n/* harmony export */   awaitAsync: () => (/* binding */ awaitAsync),\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   bic: () => (/* binding */ bic),\n/* harmony export */   bigint: () => (/* binding */ bigint),\n/* harmony export */   blob: () => (/* binding */ blob),\n/* harmony export */   boolean: () => (/* binding */ boolean),\n/* harmony export */   brand: () => (/* binding */ brand),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   checkAsync: () => (/* binding */ checkAsync),\n/* harmony export */   checkItems: () => (/* binding */ checkItems),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   creditCard: () => (/* binding */ creditCard),\n/* harmony export */   cuid2: () => (/* binding */ cuid2),\n/* harmony export */   custom: () => (/* binding */ custom),\n/* harmony export */   customAsync: () => (/* binding */ customAsync),\n/* harmony export */   date: () => (/* binding */ date),\n/* harmony export */   decimal: () => (/* binding */ decimal),\n/* harmony export */   deleteGlobalConfig: () => (/* binding */ deleteGlobalConfig),\n/* harmony export */   deleteGlobalMessage: () => (/* binding */ deleteGlobalMessage),\n/* harmony export */   deleteSchemaMessage: () => (/* binding */ deleteSchemaMessage),\n/* harmony export */   deleteSpecificMessage: () => (/* binding */ deleteSpecificMessage),\n/* harmony export */   description: () => (/* binding */ description),\n/* harmony export */   email: () => (/* binding */ email),\n/* harmony export */   emoji: () => (/* binding */ emoji),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   endsWith: () => (/* binding */ endsWith),\n/* harmony export */   entriesFromList: () => (/* binding */ entriesFromList),\n/* harmony export */   \"enum\": () => (/* binding */ enum_),\n/* harmony export */   enum_: () => (/* binding */ enum_),\n/* harmony export */   everyItem: () => (/* binding */ everyItem),\n/* harmony export */   excludes: () => (/* binding */ excludes),\n/* harmony export */   fallback: () => (/* binding */ fallback),\n/* harmony export */   fallbackAsync: () => (/* binding */ fallbackAsync),\n/* harmony export */   file: () => (/* binding */ file),\n/* harmony export */   filterItems: () => (/* binding */ filterItems),\n/* harmony export */   findItem: () => (/* binding */ findItem),\n/* harmony export */   finite: () => (/* binding */ finite),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   forward: () => (/* binding */ forward),\n/* harmony export */   forwardAsync: () => (/* binding */ forwardAsync),\n/* harmony export */   \"function\": () => (/* binding */ function_),\n/* harmony export */   function_: () => (/* binding */ function_),\n/* harmony export */   getDefault: () => (/* binding */ getDefault),\n/* harmony export */   getDefaults: () => (/* binding */ getDefaults),\n/* harmony export */   getDefaultsAsync: () => (/* binding */ getDefaultsAsync),\n/* harmony export */   getDotPath: () => (/* binding */ getDotPath),\n/* harmony export */   getFallback: () => (/* binding */ getFallback),\n/* harmony export */   getFallbacks: () => (/* binding */ getFallbacks),\n/* harmony export */   getFallbacksAsync: () => (/* binding */ getFallbacksAsync),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   getGlobalMessage: () => (/* binding */ getGlobalMessage),\n/* harmony export */   getSchemaMessage: () => (/* binding */ getSchemaMessage),\n/* harmony export */   getSpecificMessage: () => (/* binding */ getSpecificMessage),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   hexColor: () => (/* binding */ hexColor),\n/* harmony export */   hexadecimal: () => (/* binding */ hexadecimal),\n/* harmony export */   imei: () => (/* binding */ imei),\n/* harmony export */   includes: () => (/* binding */ includes),\n/* harmony export */   instance: () => (/* binding */ instance),\n/* harmony export */   integer: () => (/* binding */ integer),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   intersectAsync: () => (/* binding */ intersectAsync),\n/* harmony export */   ip: () => (/* binding */ ip),\n/* harmony export */   ipv4: () => (/* binding */ ipv4),\n/* harmony export */   ipv6: () => (/* binding */ ipv6),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isOfKind: () => (/* binding */ isOfKind),\n/* harmony export */   isOfType: () => (/* binding */ isOfType),\n/* harmony export */   isValiError: () => (/* binding */ isValiError),\n/* harmony export */   isoDate: () => (/* binding */ isoDate),\n/* harmony export */   isoDateTime: () => (/* binding */ isoDateTime),\n/* harmony export */   isoTime: () => (/* binding */ isoTime),\n/* harmony export */   isoTimeSecond: () => (/* binding */ isoTimeSecond),\n/* harmony export */   isoTimestamp: () => (/* binding */ isoTimestamp),\n/* harmony export */   isoWeek: () => (/* binding */ isoWeek),\n/* harmony export */   keyof: () => (/* binding */ keyof),\n/* harmony export */   lazy: () => (/* binding */ lazy),\n/* harmony export */   lazyAsync: () => (/* binding */ lazyAsync),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   literal: () => (/* binding */ literal),\n/* harmony export */   looseObject: () => (/* binding */ looseObject),\n/* harmony export */   looseObjectAsync: () => (/* binding */ looseObjectAsync),\n/* harmony export */   looseTuple: () => (/* binding */ looseTuple),\n/* harmony export */   looseTupleAsync: () => (/* binding */ looseTupleAsync),\n/* harmony export */   mac: () => (/* binding */ mac),\n/* harmony export */   mac48: () => (/* binding */ mac48),\n/* harmony export */   mac64: () => (/* binding */ mac64),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   mapAsync: () => (/* binding */ mapAsync),\n/* harmony export */   mapItems: () => (/* binding */ mapItems),\n/* harmony export */   maxBytes: () => (/* binding */ maxBytes),\n/* harmony export */   maxLength: () => (/* binding */ maxLength),\n/* harmony export */   maxSize: () => (/* binding */ maxSize),\n/* harmony export */   maxValue: () => (/* binding */ maxValue),\n/* harmony export */   mimeType: () => (/* binding */ mimeType),\n/* harmony export */   minBytes: () => (/* binding */ minBytes),\n/* harmony export */   minLength: () => (/* binding */ minLength),\n/* harmony export */   minSize: () => (/* binding */ minSize),\n/* harmony export */   minValue: () => (/* binding */ minValue),\n/* harmony export */   multipleOf: () => (/* binding */ multipleOf),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   never: () => (/* binding */ never),\n/* harmony export */   nonEmpty: () => (/* binding */ nonEmpty),\n/* harmony export */   nonNullable: () => (/* binding */ nonNullable),\n/* harmony export */   nonNullableAsync: () => (/* binding */ nonNullableAsync),\n/* harmony export */   nonNullish: () => (/* binding */ nonNullish),\n/* harmony export */   nonNullishAsync: () => (/* binding */ nonNullishAsync),\n/* harmony export */   nonOptional: () => (/* binding */ nonOptional),\n/* harmony export */   nonOptionalAsync: () => (/* binding */ nonOptionalAsync),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   notBytes: () => (/* binding */ notBytes),\n/* harmony export */   notLength: () => (/* binding */ notLength),\n/* harmony export */   notSize: () => (/* binding */ notSize),\n/* harmony export */   notValue: () => (/* binding */ notValue),\n/* harmony export */   \"null\": () => (/* binding */ null_),\n/* harmony export */   null_: () => (/* binding */ null_),\n/* harmony export */   nullable: () => (/* binding */ nullable),\n/* harmony export */   nullableAsync: () => (/* binding */ nullableAsync),\n/* harmony export */   nullish: () => (/* binding */ nullish),\n/* harmony export */   nullishAsync: () => (/* binding */ nullishAsync),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   object: () => (/* binding */ object),\n/* harmony export */   objectAsync: () => (/* binding */ objectAsync),\n/* harmony export */   objectWithRest: () => (/* binding */ objectWithRest),\n/* harmony export */   objectWithRestAsync: () => (/* binding */ objectWithRestAsync),\n/* harmony export */   octal: () => (/* binding */ octal),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   optional: () => (/* binding */ optional),\n/* harmony export */   optionalAsync: () => (/* binding */ optionalAsync),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseAsync: () => (/* binding */ parseAsync),\n/* harmony export */   parser: () => (/* binding */ parser),\n/* harmony export */   parserAsync: () => (/* binding */ parserAsync),\n/* harmony export */   partial: () => (/* binding */ partial),\n/* harmony export */   partialAsync: () => (/* binding */ partialAsync),\n/* harmony export */   partialCheck: () => (/* binding */ partialCheck),\n/* harmony export */   partialCheckAsync: () => (/* binding */ partialCheckAsync),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   picklist: () => (/* binding */ picklist),\n/* harmony export */   pipe: () => (/* binding */ pipe),\n/* harmony export */   pipeAsync: () => (/* binding */ pipeAsync),\n/* harmony export */   promise: () => (/* binding */ promise),\n/* harmony export */   rawCheck: () => (/* binding */ rawCheck),\n/* harmony export */   rawCheckAsync: () => (/* binding */ rawCheckAsync),\n/* harmony export */   rawTransform: () => (/* binding */ rawTransform),\n/* harmony export */   rawTransformAsync: () => (/* binding */ rawTransformAsync),\n/* harmony export */   readonly: () => (/* binding */ readonly),\n/* harmony export */   record: () => (/* binding */ record),\n/* harmony export */   recordAsync: () => (/* binding */ recordAsync),\n/* harmony export */   reduceItems: () => (/* binding */ reduceItems),\n/* harmony export */   regex: () => (/* binding */ regex),\n/* harmony export */   required: () => (/* binding */ required),\n/* harmony export */   requiredAsync: () => (/* binding */ requiredAsync),\n/* harmony export */   safeInteger: () => (/* binding */ safeInteger),\n/* harmony export */   safeParse: () => (/* binding */ safeParse),\n/* harmony export */   safeParseAsync: () => (/* binding */ safeParseAsync),\n/* harmony export */   safeParser: () => (/* binding */ safeParser),\n/* harmony export */   safeParserAsync: () => (/* binding */ safeParserAsync),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setAsync: () => (/* binding */ setAsync),\n/* harmony export */   setGlobalConfig: () => (/* binding */ setGlobalConfig),\n/* harmony export */   setGlobalMessage: () => (/* binding */ setGlobalMessage),\n/* harmony export */   setSchemaMessage: () => (/* binding */ setSchemaMessage),\n/* harmony export */   setSpecificMessage: () => (/* binding */ setSpecificMessage),\n/* harmony export */   size: () => (/* binding */ size),\n/* harmony export */   someItem: () => (/* binding */ someItem),\n/* harmony export */   sortItems: () => (/* binding */ sortItems),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   strictObject: () => (/* binding */ strictObject),\n/* harmony export */   strictObjectAsync: () => (/* binding */ strictObjectAsync),\n/* harmony export */   strictTuple: () => (/* binding */ strictTuple),\n/* harmony export */   strictTupleAsync: () => (/* binding */ strictTupleAsync),\n/* harmony export */   string: () => (/* binding */ string),\n/* harmony export */   symbol: () => (/* binding */ symbol),\n/* harmony export */   toLowerCase: () => (/* binding */ toLowerCase),\n/* harmony export */   toMaxValue: () => (/* binding */ toMaxValue),\n/* harmony export */   toMinValue: () => (/* binding */ toMinValue),\n/* harmony export */   toUpperCase: () => (/* binding */ toUpperCase),\n/* harmony export */   transform: () => (/* binding */ transform),\n/* harmony export */   transformAsync: () => (/* binding */ transformAsync),\n/* harmony export */   trim: () => (/* binding */ trim),\n/* harmony export */   trimEnd: () => (/* binding */ trimEnd),\n/* harmony export */   trimStart: () => (/* binding */ trimStart),\n/* harmony export */   tuple: () => (/* binding */ tuple),\n/* harmony export */   tupleAsync: () => (/* binding */ tupleAsync),\n/* harmony export */   tupleWithRest: () => (/* binding */ tupleWithRest),\n/* harmony export */   tupleWithRestAsync: () => (/* binding */ tupleWithRestAsync),\n/* harmony export */   ulid: () => (/* binding */ ulid),\n/* harmony export */   undefined: () => (/* binding */ undefined_),\n/* harmony export */   undefined_: () => (/* binding */ undefined_),\n/* harmony export */   union: () => (/* binding */ union),\n/* harmony export */   unionAsync: () => (/* binding */ unionAsync),\n/* harmony export */   unknown: () => (/* binding */ unknown),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   url: () => (/* binding */ url),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   value: () => (/* binding */ value),\n/* harmony export */   variant: () => (/* binding */ variant),\n/* harmony export */   variantAsync: () => (/* binding */ variantAsync),\n/* harmony export */   \"void\": () => (/* binding */ void_),\n/* harmony export */   void_: () => (/* binding */ void_)\n/* harmony export */ });\n// src/actions/await/awaitAsync.ts\nfunction awaitAsync() {\n  return {\n    kind: \"transformation\",\n    type: \"await\",\n    reference: awaitAsync,\n    async: true,\n    async _run(dataset) {\n      dataset.value = await dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/regex.ts\nvar BASE64_REGEX = /^(?:[\\da-z+/]{4})*(?:[\\da-z+/]{2}==|[\\da-z+/]{3}=)?$/iu;\nvar BIC_REGEX = /^[A-Z]{6}(?!00)[\\dA-Z]{2}(?:[\\dA-Z]{3})?$/u;\nvar CUID2_REGEX = /^[a-z][\\da-z]*$/u;\nvar DECIMAL_REGEX = /^\\d+$/u;\nvar EMAIL_REGEX = /^[\\w+-]+(?:\\.[\\w+-]+)*@[\\da-z]+(?:[.-][\\da-z]+)*\\.[a-z]{2,}$/iu;\nvar EMOJI_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex, regexp/no-dupe-disjunctions -- false positives\n  /^(?:[\\u{1F1E6}-\\u{1F1FF}]{2}|\\u{1F3F4}[\\u{E0061}-\\u{E007A}]{2}[\\u{E0030}-\\u{E0039}\\u{E0061}-\\u{E007A}]{1,3}\\u{E007F}|(?:\\p{Emoji}\\uFE0F\\u20E3?|\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?|\\p{Emoji_Presentation})(?:\\u200D(?:\\p{Emoji}\\uFE0F\\u20E3?|\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?|\\p{Emoji_Presentation}))*)+$/u\n);\nvar HEXADECIMAL_REGEX = /^(?:0[hx])?[\\da-f]+$/iu;\nvar HEX_COLOR_REGEX = /^#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/iu;\nvar IMEI_REGEX = /^\\d{15}$|^\\d{2}-\\d{6}-\\d{6}-\\d$/u;\nvar IPV4_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive\n  /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$/u\n);\nvar IPV6_REGEX = /^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar IP_REGEX = /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$|^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar ISO_DATE_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])$/u;\nvar ISO_DATE_TIME_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_REGEX = /^(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_SECOND_REGEX = /^(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}$/u;\nvar ISO_TIMESTAMP_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}(?:\\.\\d{1,9})?(?:Z|[+-](?:0\\d|1\\d|2[0-3])(?::?[0-5]\\d)?)$/u;\nvar ISO_WEEK_REGEX = /^\\d{4}-W(?:0[1-9]|[1-4]\\d|5[0-3])$/u;\nvar MAC48_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$/iu;\nvar MAC64_REGEX = /^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar MAC_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$|^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar OCTAL_REGEX = /^(?:0o)?[0-7]+$/iu;\nvar ULID_REGEX = /^[\\da-hjkmnp-tv-z]{26}$/iu;\nvar UUID_REGEX = /^[\\da-f]{8}(?:-[\\da-f]{4}){3}-[\\da-f]{12}$/iu;\n\n// src/storages/globalConfig/globalConfig.ts\nvar store;\nfunction setGlobalConfig(config2) {\n  store = { ...store, ...config2 };\n}\nfunction getGlobalConfig(config2) {\n  return {\n    lang: config2?.lang ?? store?.lang,\n    message: config2?.message,\n    abortEarly: config2?.abortEarly ?? store?.abortEarly,\n    abortPipeEarly: config2?.abortPipeEarly ?? store?.abortPipeEarly\n  };\n}\nfunction deleteGlobalConfig() {\n  store = void 0;\n}\n\n// src/storages/globalMessage/globalMessage.ts\nvar store2;\nfunction setGlobalMessage(message, lang) {\n  if (!store2) store2 = /* @__PURE__ */ new Map();\n  store2.set(lang, message);\n}\nfunction getGlobalMessage(lang) {\n  return store2?.get(lang);\n}\nfunction deleteGlobalMessage(lang) {\n  store2?.delete(lang);\n}\n\n// src/storages/schemaMessage/schemaMessage.ts\nvar store3;\nfunction setSchemaMessage(message, lang) {\n  if (!store3) store3 = /* @__PURE__ */ new Map();\n  store3.set(lang, message);\n}\nfunction getSchemaMessage(lang) {\n  return store3?.get(lang);\n}\nfunction deleteSchemaMessage(lang) {\n  store3?.delete(lang);\n}\n\n// src/storages/specificMessage/specificMessage.ts\nvar store4;\nfunction setSpecificMessage(reference, message, lang) {\n  if (!store4) store4 = /* @__PURE__ */ new Map();\n  if (!store4.get(reference)) store4.set(reference, /* @__PURE__ */ new Map());\n  store4.get(reference).set(lang, message);\n}\nfunction getSpecificMessage(reference, lang) {\n  return store4?.get(reference)?.get(lang);\n}\nfunction deleteSpecificMessage(reference, lang) {\n  store4?.get(reference)?.delete(lang);\n}\n\n// src/utils/_stringify/_stringify.ts\nfunction _stringify(input) {\n  const type = typeof input;\n  if (type === \"string\") {\n    return `\"${input}\"`;\n  }\n  if (type === \"number\" || type === \"bigint\" || type === \"boolean\") {\n    return `${input}`;\n  }\n  if (type === \"object\" || type === \"function\") {\n    return (input && Object.getPrototypeOf(input)?.constructor?.name) ?? \"null\";\n  }\n  return type;\n}\n\n// src/utils/_addIssue/_addIssue.ts\nfunction _addIssue(context, label, dataset, config2, other) {\n  const input = other && \"input\" in other ? other.input : dataset.value;\n  const expected = other?.expected ?? context.expects ?? null;\n  const received = other?.received ?? _stringify(input);\n  const issue = {\n    kind: context.kind,\n    type: context.type,\n    input,\n    expected,\n    received,\n    message: `Invalid ${label}: ${expected ? `Expected ${expected} but r` : \"R\"}eceived ${received}`,\n    // @ts-expect-error\n    requirement: context.requirement,\n    path: other?.path,\n    issues: other?.issues,\n    lang: config2.lang,\n    abortEarly: config2.abortEarly,\n    abortPipeEarly: config2.abortPipeEarly\n  };\n  const isSchema = context.kind === \"schema\";\n  const message = other?.message ?? // @ts-expect-error\n  context.message ?? getSpecificMessage(context.reference, issue.lang) ?? (isSchema ? getSchemaMessage(issue.lang) : null) ?? config2.message ?? getGlobalMessage(issue.lang);\n  if (message) {\n    issue.message = typeof message === \"function\" ? message(issue) : message;\n  }\n  if (isSchema) {\n    dataset.typed = false;\n  }\n  if (dataset.issues) {\n    dataset.issues.push(issue);\n  } else {\n    dataset.issues = [issue];\n  }\n}\n\n// src/utils/_isLuhnAlgo/_isLuhnAlgo.ts\nvar NON_DIGIT_REGEX = /\\D/gu;\nfunction _isLuhnAlgo(input) {\n  const number2 = input.replace(NON_DIGIT_REGEX, \"\");\n  let length2 = number2.length;\n  let bit = 1;\n  let sum = 0;\n  while (length2) {\n    const value2 = +number2[--length2];\n    bit ^= 1;\n    sum += bit ? [0, 2, 4, 6, 8, 1, 3, 5, 7, 9][value2] : value2;\n  }\n  return sum % 10 === 0;\n}\n\n// src/utils/_isValidObjectKey/_isValidObjectKey.ts\nfunction _isValidObjectKey(object2, key) {\n  return Object.hasOwn(object2, key) && key !== \"__proto__\" && key !== \"prototype\" && key !== \"constructor\";\n}\n\n// src/utils/_joinExpects/_joinExpects.ts\nfunction _joinExpects(values, separator) {\n  const list = [...new Set(values)];\n  if (list.length > 1) {\n    return `(${list.join(` ${separator} `)})`;\n  }\n  return list[0] ?? \"never\";\n}\n\n// src/utils/entriesFromList/entriesFromList.ts\nfunction entriesFromList(list, schema) {\n  const entries = {};\n  for (const key of list) {\n    entries[key] = schema;\n  }\n  return entries;\n}\n\n// src/utils/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  if (issue.path) {\n    let key = \"\";\n    for (const item of issue.path) {\n      if (typeof item.key === \"string\" || typeof item.key === \"number\") {\n        if (key) {\n          key += `.${item.key}`;\n        } else {\n          key += item.key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return key;\n  }\n  return null;\n}\n\n// src/utils/isOfKind/isOfKind.ts\nfunction isOfKind(kind, object2) {\n  return object2.kind === kind;\n}\n\n// src/utils/isOfType/isOfType.ts\nfunction isOfType(type, object2) {\n  return object2.type === type;\n}\n\n// src/utils/isValiError/isValiError.ts\nfunction isValiError(error) {\n  return error instanceof ValiError;\n}\n\n// src/utils/ValiError/ValiError.ts\nvar ValiError = class extends Error {\n  /**\n   * The error issues.\n   */\n  issues;\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"ValiError\";\n    this.issues = issues;\n  }\n};\n\n// src/actions/base64/base64.ts\nfunction base64(message) {\n  return {\n    kind: \"validation\",\n    type: \"base64\",\n    reference: base64,\n    async: false,\n    expects: null,\n    requirement: BASE64_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"Base64\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/bic/bic.ts\nfunction bic(message) {\n  return {\n    kind: \"validation\",\n    type: \"bic\",\n    reference: bic,\n    async: false,\n    expects: null,\n    requirement: BIC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"BIC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/brand/brand.ts\nfunction brand(name) {\n  return {\n    kind: \"transformation\",\n    type: \"brand\",\n    reference: brand,\n    async: false,\n    name,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/bytes/bytes.ts\nfunction bytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"bytes\",\n    reference: bytes,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 !== this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/check.ts\nfunction check(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: check,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/checkAsync.ts\nfunction checkAsync(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: checkAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.typed && !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/checkItems/checkItems.ts\nfunction checkItems(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check_items\",\n    reference: checkItems,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        for (let index = 0; index < dataset.value.length; index++) {\n          const item = dataset.value[index];\n          if (!this.requirement(item, index, dataset.value)) {\n            _addIssue(this, \"item\", dataset, config2, {\n              input: item,\n              path: [\n                {\n                  type: \"array\",\n                  origin: \"value\",\n                  input: dataset.value,\n                  key: index,\n                  value: item\n                }\n              ]\n            });\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/creditCard/creditCard.ts\nvar CREDIT_CARD_REGEX = /^(?:\\d{14,19}|\\d{4}(?: \\d{3,6}){2,4}|\\d{4}(?:-\\d{3,6}){2,4})$/u;\nvar SANITIZE_REGEX = /[- ]/gu;\nvar PROVIDER_REGEX_LIST = [\n  // American Express\n  /^3[47]\\d{13}$/u,\n  // Diners Club\n  /^3(?:0[0-5]|[68]\\d)\\d{11,13}$/u,\n  // Discover\n  /^6(?:011|5\\d{2})\\d{12,15}$/u,\n  // JCB\n  /^(?:2131|1800|35\\d{3})\\d{11}$/u,\n  // Mastercard\n  /^5[1-5]\\d{2}|(?:222\\d|22[3-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)\\d{12}$/u,\n  // UnionPay\n  /^(?:6[27]\\d{14,17}|81\\d{14,17})$/u,\n  // Visa\n  /^4\\d{12}(?:\\d{3,6})?$/u\n];\nfunction creditCard(message) {\n  return {\n    kind: \"validation\",\n    type: \"credit_card\",\n    reference: creditCard,\n    async: false,\n    expects: null,\n    requirement(input) {\n      let sanitized;\n      return CREDIT_CARD_REGEX.test(input) && // Remove any hyphens and blanks\n      (sanitized = input.replace(SANITIZE_REGEX, \"\")) && // Check if it matches a provider\n      PROVIDER_REGEX_LIST.some((regex2) => regex2.test(sanitized)) && // Check if passes luhn algorithm\n      _isLuhnAlgo(sanitized);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"credit card\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/cuid2/cuid2.ts\nfunction cuid2(message) {\n  return {\n    kind: \"validation\",\n    type: \"cuid2\",\n    reference: cuid2,\n    async: false,\n    expects: null,\n    requirement: CUID2_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"Cuid2\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/decimal/decimal.ts\nfunction decimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"decimal\",\n    reference: decimal,\n    async: false,\n    expects: null,\n    requirement: DECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"decimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/description/description.ts\nfunction description(description_) {\n  return {\n    kind: \"metadata\",\n    type: \"description\",\n    reference: description,\n    description: description_\n  };\n}\n\n// src/actions/email/email.ts\nfunction email(message) {\n  return {\n    kind: \"validation\",\n    type: \"email\",\n    reference: email,\n    expects: null,\n    async: false,\n    requirement: EMAIL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"email\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/emoji/emoji.ts\nfunction emoji(message) {\n  return {\n    kind: \"validation\",\n    type: \"emoji\",\n    reference: emoji,\n    async: false,\n    expects: null,\n    requirement: EMOJI_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"emoji\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/empty/empty.ts\nfunction empty(message) {\n  return {\n    kind: \"validation\",\n    type: \"empty\",\n    reference: empty,\n    async: false,\n    expects: \"0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/endsWith/endsWith.ts\nfunction endsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"ends_with\",\n    reference: endsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.endsWith(this.requirement)) {\n        _addIssue(this, \"end\", dataset, config2, {\n          received: `\"${dataset.value.slice(-this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/everyItem/everyItem.ts\nfunction everyItem(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"every_item\",\n    reference: everyItem,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.every(this.requirement)) {\n        _addIssue(this, \"item\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/excludes/excludes.ts\nfunction excludes(requirement, message) {\n  const received = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"excludes\",\n    reference: excludes,\n    async: false,\n    expects: `!${received}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, { received });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/filterItems/filterItems.ts\nfunction filterItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"filter_items\",\n    reference: filterItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.filter(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/findItem/findItem.ts\nfunction findItem(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"find_item\",\n    reference: findItem,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.find(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/finite/finite.ts\nfunction finite(message) {\n  return {\n    kind: \"validation\",\n    type: \"finite\",\n    reference: finite,\n    async: false,\n    expects: null,\n    requirement: Number.isFinite,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"finite\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hash/hash.ts\nvar HASH_LENGTHS = {\n  md4: 32,\n  md5: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n  adler32: 8\n};\nfunction hash(types, message) {\n  return {\n    kind: \"validation\",\n    type: \"hash\",\n    reference: hash,\n    expects: null,\n    async: false,\n    requirement: RegExp(\n      types.map((type) => `^[a-f0-9]{${HASH_LENGTHS[type]}}$`).join(\"|\"),\n      \"iu\"\n    ),\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hash\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexadecimal/hexadecimal.ts\nfunction hexadecimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"hexadecimal\",\n    reference: hexadecimal,\n    async: false,\n    expects: null,\n    requirement: HEXADECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hexadecimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexColor/hexColor.ts\nfunction hexColor(message) {\n  return {\n    kind: \"validation\",\n    type: \"hex_color\",\n    reference: hexColor,\n    async: false,\n    expects: null,\n    requirement: HEX_COLOR_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hex color\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/imei/imei.ts\nfunction imei(message) {\n  return {\n    kind: \"validation\",\n    type: \"imei\",\n    reference: imei,\n    async: false,\n    expects: null,\n    requirement(input) {\n      return IMEI_REGEX.test(input) && _isLuhnAlgo(input);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"IMEI\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/includes/includes.ts\nfunction includes(requirement, message) {\n  const expects = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"includes\",\n    reference: includes,\n    async: false,\n    expects,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, {\n          received: `!${expects}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/integer/integer.ts\nfunction integer(message) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: integer,\n    async: false,\n    expects: null,\n    requirement: Number.isInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ip/ip.ts\nfunction ip(message) {\n  return {\n    kind: \"validation\",\n    type: \"ip\",\n    reference: ip,\n    async: false,\n    expects: null,\n    requirement: IP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IP\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv4/ipv4.ts\nfunction ipv4(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv4\",\n    reference: ipv4,\n    async: false,\n    expects: null,\n    requirement: IPV4_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv4\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv6/ipv6.ts\nfunction ipv6(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv6\",\n    reference: ipv6,\n    async: false,\n    expects: null,\n    requirement: IPV6_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv6\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDate/isoDate.ts\nfunction isoDate(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date\",\n    reference: isoDate,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDateTime/isoDateTime.ts\nfunction isoDateTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date_time\",\n    reference: isoDateTime,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date-time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTime/isoTime.ts\nfunction isoTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time\",\n    reference: isoTime,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimeSecond/isoTimeSecond.ts\nfunction isoTimeSecond(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time_second\",\n    reference: isoTimeSecond,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_SECOND_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time-second\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimestamp/isoTimestamp.ts\nfunction isoTimestamp(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_timestamp\",\n    reference: isoTimestamp,\n    async: false,\n    expects: null,\n    requirement: ISO_TIMESTAMP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"timestamp\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoWeek/isoWeek.ts\nfunction isoWeek(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_week\",\n    reference: isoWeek,\n    async: false,\n    expects: null,\n    requirement: ISO_WEEK_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"week\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/length/length.ts\nfunction length(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"length\",\n    reference: length,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length !== this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac/mac.ts\nfunction mac(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac\",\n    reference: mac,\n    async: false,\n    expects: null,\n    requirement: MAC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac48/mac48.ts\nfunction mac48(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac48\",\n    reference: mac48,\n    async: false,\n    expects: null,\n    requirement: MAC48_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"48-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac64/mac64.ts\nfunction mac64(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac64\",\n    reference: mac64,\n    async: false,\n    expects: null,\n    requirement: MAC64_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"64-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mapItems/mapItems.ts\nfunction mapItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"map_items\",\n    reference: mapItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.map(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxBytes/maxBytes.ts\nfunction maxBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_bytes\",\n    reference: maxBytes,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 > this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxLength/maxLength.ts\nfunction maxLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_length\",\n    reference: maxLength,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxSize/maxSize.ts\nfunction maxSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_size\",\n    reference: maxSize,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size > this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxValue/maxValue.ts\nfunction maxValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_value\",\n    reference: maxValue,\n    async: false,\n    expects: `<=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value > this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mimeType/mimeType.ts\nfunction mimeType(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"mime_type\",\n    reference: mimeType,\n    async: false,\n    expects: _joinExpects(\n      requirement.map((option) => `\"${option}\"`),\n      \"|\"\n    ),\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.includes(dataset.value.type)) {\n        _addIssue(this, \"MIME type\", dataset, config2, {\n          received: `\"${dataset.value.type}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minBytes/minBytes.ts\nfunction minBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_bytes\",\n    reference: minBytes,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 < this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minLength/minLength.ts\nfunction minLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_length\",\n    reference: minLength,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length < this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minSize/minSize.ts\nfunction minSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_size\",\n    reference: minSize,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size < this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minValue/minValue.ts\nfunction minValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_value\",\n    reference: minValue,\n    async: false,\n    expects: `>=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value < this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/multipleOf/multipleOf.ts\nfunction multipleOf(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"multiple_of\",\n    reference: multipleOf,\n    async: false,\n    expects: `%${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value % this.requirement !== 0) {\n        _addIssue(this, \"multiple\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/nonEmpty/nonEmpty.ts\nfunction nonEmpty(message) {\n  return {\n    kind: \"validation\",\n    type: \"non_empty\",\n    reference: nonEmpty,\n    async: false,\n    expects: \"!0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: \"0\"\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/normalize/normalize.ts\nfunction normalize(form) {\n  return {\n    kind: \"transformation\",\n    type: \"normalize\",\n    reference: normalize,\n    async: false,\n    form,\n    _run(dataset) {\n      dataset.value = dataset.value.normalize(this.form);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notBytes/notBytes.ts\nfunction notBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_bytes\",\n    reference: notBytes,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 === this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notLength/notLength.ts\nfunction notLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_length\",\n    reference: notLength,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notSize/notSize.ts\nfunction notSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_size\",\n    reference: notSize,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size === this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notValue/notValue.ts\nfunction notValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_value\",\n    reference: notValue,\n    async: false,\n    expects: requirement instanceof Date ? `!${requirement.toJSON()}` : `!${_stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && this.requirement <= dataset.value && this.requirement >= dataset.value) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/octal/octal.ts\nfunction octal(message) {\n  return {\n    kind: \"validation\",\n    type: \"octal\",\n    reference: octal,\n    async: false,\n    expects: null,\n    requirement: OCTAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"octal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/partialCheck/utils/_isPartiallyTyped/_isPartiallyTyped.ts\nfunction _isPartiallyTyped(dataset, pathList) {\n  if (dataset.issues) {\n    for (const path of pathList) {\n      for (const issue of dataset.issues) {\n        let typed = false;\n        const bound = Math.min(path.length, issue.path?.length ?? 0);\n        for (let index = 0; index < bound; index++) {\n          if (path[index] !== issue.path[index].key) {\n            typed = true;\n            break;\n          }\n        }\n        if (!typed) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n// src/actions/partialCheck/partialCheck.ts\nfunction partialCheck(pathList, requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"partial_check\",\n    reference: partialCheck,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (_isPartiallyTyped(dataset, pathList) && // @ts-expect-error\n      !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/partialCheck/partialCheckAsync.ts\nfunction partialCheckAsync(pathList, requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"partial_check\",\n    reference: partialCheckAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (_isPartiallyTyped(dataset, pathList) && // @ts-expect-error\n      !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawCheck/rawCheck.ts\nfunction rawCheck(action) {\n  return {\n    kind: \"validation\",\n    type: \"raw_check\",\n    reference: rawCheck,\n    async: false,\n    expects: null,\n    _run(dataset, config2) {\n      action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info)\n      });\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawCheck/rawCheckAsync.ts\nfunction rawCheckAsync(action) {\n  return {\n    kind: \"validation\",\n    type: \"raw_check\",\n    reference: rawCheckAsync,\n    async: true,\n    expects: null,\n    async _run(dataset, config2) {\n      await action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info)\n      });\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawTransform/rawTransform.ts\nfunction rawTransform(action) {\n  return {\n    kind: \"transformation\",\n    type: \"raw_transform\",\n    reference: rawTransform,\n    async: false,\n    _run(dataset, config2) {\n      const output = action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info),\n        NEVER: null\n      });\n      if (dataset.issues) {\n        dataset.typed = false;\n      } else {\n        dataset.value = output;\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/rawTransform/rawTransformAsync.ts\nfunction rawTransformAsync(action) {\n  return {\n    kind: \"transformation\",\n    type: \"raw_transform\",\n    reference: rawTransformAsync,\n    async: true,\n    async _run(dataset, config2) {\n      const output = await action({\n        dataset,\n        config: config2,\n        addIssue: (info) => _addIssue(this, info?.label ?? \"input\", dataset, config2, info),\n        NEVER: null\n      });\n      if (dataset.issues) {\n        dataset.typed = false;\n      } else {\n        dataset.value = output;\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/readonly/readonly.ts\nfunction readonly() {\n  return {\n    kind: \"transformation\",\n    type: \"readonly\",\n    reference: readonly,\n    async: false,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/reduceItems/reduceItems.ts\nfunction reduceItems(operation, initial) {\n  return {\n    kind: \"transformation\",\n    type: \"reduce_items\",\n    reference: reduceItems,\n    async: false,\n    operation,\n    initial,\n    _run(dataset) {\n      dataset.value = dataset.value.reduce(this.operation, this.initial);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/regex/regex.ts\nfunction regex(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"regex\",\n    reference: regex,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"format\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/safeInteger/safeInteger.ts\nfunction safeInteger(message) {\n  return {\n    kind: \"validation\",\n    type: \"safe_integer\",\n    reference: safeInteger,\n    async: false,\n    expects: null,\n    requirement: Number.isSafeInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"safe integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/size/size.ts\nfunction size(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"size\",\n    reference: size,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size !== this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/someItem/someItem.ts\nfunction someItem(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"some_item\",\n    reference: someItem,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.some(this.requirement)) {\n        _addIssue(this, \"item\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/sortItems/sortItems.ts\nfunction sortItems(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"sort_items\",\n    reference: sortItems,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = dataset.value.sort(this.operation);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/startsWith/startsWith.ts\nfunction startsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"starts_with\",\n    reference: startsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.startsWith(this.requirement)) {\n        _addIssue(this, \"start\", dataset, config2, {\n          received: `\"${dataset.value.slice(0, this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toLowerCase/toLowerCase.ts\nfunction toLowerCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_lower_case\",\n    reference: toLowerCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toLowerCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMaxValue/toMaxValue.ts\nfunction toMaxValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_max_value\",\n    reference: toMaxValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value > this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMinValue/toMinValue.ts\nfunction toMinValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_min_value\",\n    reference: toMinValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value < this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toUpperCase/toUpperCase.ts\nfunction toUpperCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_upper_case\",\n    reference: toUpperCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toUpperCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transform.ts\nfunction transform(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transform,\n    async: false,\n    operation,\n    _run(dataset) {\n      dataset.value = this.operation(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transformAsync.ts\nfunction transformAsync(operation) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transformAsync,\n    async: true,\n    operation,\n    async _run(dataset) {\n      dataset.value = await this.operation(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trim/trim.ts\nfunction trim() {\n  return {\n    kind: \"transformation\",\n    type: \"trim\",\n    reference: trim,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trim();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimEnd/trimEnd.ts\nfunction trimEnd() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_end\",\n    reference: trimEnd,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimEnd();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimStart/trimStart.ts\nfunction trimStart() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_start\",\n    reference: trimStart,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimStart();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ulid/ulid.ts\nfunction ulid(message) {\n  return {\n    kind: \"validation\",\n    type: \"ulid\",\n    reference: ulid,\n    async: false,\n    expects: null,\n    requirement: ULID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"ULID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/url/url.ts\nfunction url(message) {\n  return {\n    kind: \"validation\",\n    type: \"url\",\n    reference: url,\n    async: false,\n    expects: null,\n    requirement(input) {\n      try {\n        new URL(input);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"URL\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/uuid/uuid.ts\nfunction uuid(message) {\n  return {\n    kind: \"validation\",\n    type: \"uuid\",\n    reference: uuid,\n    async: false,\n    expects: null,\n    requirement: UUID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"UUID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/value/value.ts\nfunction value(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"value\",\n    reference: value,\n    async: false,\n    expects: requirement instanceof Date ? requirement.toJSON() : _stringify(requirement),\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !(this.requirement <= dataset.value && this.requirement >= dataset.value)) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/config/config.ts\nfunction config(schema, config2) {\n  return {\n    ...schema,\n    _run(dataset, config_) {\n      return schema._run(dataset, { ...config_, ...config2 });\n    }\n  };\n}\n\n// src/methods/getFallback/getFallback.ts\nfunction getFallback(schema, dataset, config2) {\n  return typeof schema.fallback === \"function\" ? (\n    // @ts-expect-error\n    schema.fallback(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.fallback\n  );\n}\n\n// src/methods/fallback/fallback.ts\nfunction fallback(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    _run(dataset, config2) {\n      const outputDataset = schema._run(dataset, config2);\n      return outputDataset.issues ? { typed: true, value: getFallback(this, outputDataset, config2) } : outputDataset;\n    }\n  };\n}\n\n// src/methods/fallback/fallbackAsync.ts\nfunction fallbackAsync(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    async: true,\n    async _run(dataset, config2) {\n      const outputDataset = await schema._run(dataset, config2);\n      return outputDataset.issues ? (\n        // @ts-expect-error\n        { typed: true, value: await getFallback(this, outputDataset, config2) }\n      ) : outputDataset;\n    }\n  };\n}\n\n// src/methods/flatten/flatten.ts\nfunction flatten(issues) {\n  const flatErrors = {};\n  for (const issue of issues) {\n    if (issue.path) {\n      const dotPath = getDotPath(issue);\n      if (dotPath) {\n        if (!flatErrors.nested) {\n          flatErrors.nested = {};\n        }\n        if (flatErrors.nested[dotPath]) {\n          flatErrors.nested[dotPath].push(issue.message);\n        } else {\n          flatErrors.nested[dotPath] = [issue.message];\n        }\n      } else {\n        if (flatErrors.other) {\n          flatErrors.other.push(issue.message);\n        } else {\n          flatErrors.other = [issue.message];\n        }\n      }\n    } else {\n      if (flatErrors.root) {\n        flatErrors.root.push(issue.message);\n      } else {\n        flatErrors.root = [issue.message];\n      }\n    }\n  }\n  return flatErrors;\n}\n\n// src/methods/forward/forward.ts\nfunction forward(action, pathKeys) {\n  return {\n    ...action,\n    _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/forward/forwardAsync.ts\nfunction forwardAsync(action, pathKeys) {\n  return {\n    ...action,\n    async: true,\n    async _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      await action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/getDefault/getDefault.ts\nfunction getDefault(schema, dataset, config2) {\n  return typeof schema.default === \"function\" ? (\n    // @ts-expect-error\n    schema.default(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.default\n  );\n}\n\n// src/methods/getDefaults/getDefaults.ts\nfunction getDefaults(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getDefaults(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getDefaults);\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getDefaults/getDefaultsAsync.ts\nasync function getDefaultsAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getDefaultsAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getDefaultsAsync));\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getFallbacks/getFallbacks.ts\nfunction getFallbacks(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getFallbacks(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getFallbacks);\n  }\n  return getFallback(schema);\n}\n\n// src/methods/getFallbacks/getFallbacksAsync.ts\nasync function getFallbacksAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getFallbacksAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getFallbacksAsync));\n  }\n  return getFallback(schema);\n}\n\n// src/methods/is/is.ts\nfunction is(schema, input) {\n  return !schema._run({ typed: false, value: input }, { abortEarly: true }).issues;\n}\n\n// src/schemas/any/any.ts\nfunction any() {\n  return {\n    kind: \"schema\",\n    type: \"any\",\n    reference: any,\n    expects: \"any\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/array.ts\nfunction array(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: array,\n    expects: \"Array\",\n    async: false,\n    item,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < input.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.item._run({ typed: false, value: value2 }, config2);\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/arrayAsync.ts\nfunction arrayAsync(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: arrayAsync,\n    expects: \"Array\",\n    async: true,\n    item,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          input.map((value2) => this.item._run({ typed: false, value: value2 }, config2))\n        );\n        for (let key = 0; key < itemDatasets.length; key++) {\n          const itemDataset = itemDatasets[key];\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: input[key]\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/bigint/bigint.ts\nfunction bigint(message) {\n  return {\n    kind: \"schema\",\n    type: \"bigint\",\n    reference: bigint,\n    expects: \"bigint\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"bigint\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/blob/blob.ts\nfunction blob(message) {\n  return {\n    kind: \"schema\",\n    type: \"blob\",\n    reference: blob,\n    expects: \"Blob\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Blob) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/boolean/boolean.ts\nfunction boolean(message) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: boolean,\n    expects: \"boolean\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"boolean\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/custom.ts\nfunction custom(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: custom,\n    expects: \"unknown\",\n    async: false,\n    check: check2,\n    message,\n    _run(dataset, config2) {\n      if (this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/customAsync.ts\nfunction customAsync(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: customAsync,\n    expects: \"unknown\",\n    async: true,\n    check: check2,\n    message,\n    async _run(dataset, config2) {\n      if (await this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/date/date.ts\nfunction date(message) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: date,\n    expects: \"Date\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Date) {\n        if (!isNaN(dataset.value)) {\n          dataset.typed = true;\n        } else {\n          _addIssue(this, \"type\", dataset, config2, {\n            received: '\"Invalid Date\"'\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/enum/enum.ts\nfunction enum_(enum__, message) {\n  const options = Object.entries(enum__).filter(([key]) => isNaN(+key)).map(([, value2]) => value2);\n  return {\n    kind: \"schema\",\n    type: \"enum\",\n    reference: enum_,\n    expects: _joinExpects(options.map(_stringify), \"|\"),\n    async: false,\n    enum: enum__,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/file/file.ts\nfunction file(message) {\n  return {\n    kind: \"schema\",\n    type: \"file\",\n    reference: file,\n    expects: \"File\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof File) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/function/function.ts\nfunction function_(message) {\n  return {\n    kind: \"schema\",\n    type: \"function\",\n    reference: function_,\n    expects: \"Function\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"function\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/instance/instance.ts\nfunction instance(class_, message) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: instance,\n    expects: class_.name,\n    async: false,\n    class: class_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof this.class) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/utils/_merge/_merge.ts\nfunction _merge(value1, value2) {\n  if (typeof value1 === typeof value2) {\n    if (value1 === value2 || value1 instanceof Date && value2 instanceof Date && +value1 === +value2) {\n      return { value: value1 };\n    }\n    if (value1 && value2 && value1.constructor === Object && value2.constructor === Object) {\n      for (const key in value2) {\n        if (key in value1) {\n          const dataset = _merge(value1[key], value2[key]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[key] = dataset.value;\n        } else {\n          value1[key] = value2[key];\n        }\n      }\n      return { value: value1 };\n    }\n    if (Array.isArray(value1) && Array.isArray(value2)) {\n      if (value1.length === value2.length) {\n        for (let index = 0; index < value1.length; index++) {\n          const dataset = _merge(value1[index], value2[index]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[index] = dataset.value;\n        }\n        return { value: value1 };\n      }\n    }\n  }\n  return { issue: true };\n}\n\n// src/schemas/intersect/intersect.ts\nfunction intersect(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersect,\n    expects: _joinExpects(\n      options.map((option) => option.expects),\n      \"&\"\n    ),\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        for (const schema of this.options) {\n          const optionDataset = schema._run(\n            { typed: false, value: input },\n            config2\n          );\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/intersectAsync.ts\nfunction intersectAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersectAsync,\n    expects: _joinExpects(\n      options.map((option) => option.expects),\n      \"&\"\n    ),\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        const optionDatasets = await Promise.all(\n          this.options.map(\n            (schema) => schema._run({ typed: false, value: input }, config2)\n          )\n        );\n        for (const optionDataset of optionDatasets) {\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/lazy/lazy.ts\nfunction lazy(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazy,\n    expects: \"unknown\",\n    async: false,\n    getter,\n    _run(dataset, config2) {\n      return this.getter(dataset.value)._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/lazy/lazyAsync.ts\nfunction lazyAsync(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazyAsync,\n    expects: \"unknown\",\n    async: true,\n    getter,\n    async _run(dataset, config2) {\n      return (await this.getter(dataset.value))._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/literal/literal.ts\nfunction literal(literal_, message) {\n  return {\n    kind: \"schema\",\n    type: \"literal\",\n    reference: literal,\n    expects: _stringify(literal_),\n    async: false,\n    literal: literal_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === this.literal) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObject.ts\nfunction looseObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObjectAsync.ts\nfunction looseObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTuple.ts\nfunction looseTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTupleAsync.ts\nfunction looseTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/map.ts\nfunction map(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: map,\n    expects: \"Map\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        for (const [inputKey, inputValue] of input) {\n          const keyDataset = this.key._run(\n            { typed: false, value: inputKey },\n            config2\n          );\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/mapAsync.ts\nfunction mapAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: mapAsync,\n    expects: \"Map\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        const datasets = await Promise.all(\n          [...input].map(\n            ([inputKey, inputValue]) => Promise.all([\n              inputKey,\n              inputValue,\n              this.key._run({ typed: false, value: inputKey }, config2),\n              this.value._run({ typed: false, value: inputValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          inputKey,\n          inputValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nan/nan.ts\nfunction nan(message) {\n  return {\n    kind: \"schema\",\n    type: \"nan\",\n    reference: nan,\n    expects: \"NaN\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (Number.isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/never/never.ts\nfunction never(message) {\n  return {\n    kind: \"schema\",\n    type: \"never\",\n    reference: never,\n    expects: \"never\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      _addIssue(this, \"type\", dataset, config2);\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullable.ts\nfunction nonNullable(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullable,\n    expects: \"!null\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullableAsync.ts\nfunction nonNullableAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullableAsync,\n    expects: \"!null\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullish.ts\nfunction nonNullish(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullish,\n    expects: \"(!null & !undefined)\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullishAsync.ts\nfunction nonNullishAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullishAsync,\n    expects: \"(!null & !undefined)\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptional.ts\nfunction nonOptional(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptional,\n    expects: \"!undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptionalAsync.ts\nfunction nonOptionalAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptionalAsync,\n    expects: \"!undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/null/null.ts\nfunction null_(message) {\n  return {\n    kind: \"schema\",\n    type: \"null\",\n    reference: null_,\n    expects: \"null\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nullable/nullable.ts\nfunction nullable(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullable,\n    expects: `(${wrapped.expects} | null)`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullable/nullableAsync.ts\nfunction nullableAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullableAsync,\n    expects: `(${wrapped.expects} | null)`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullish.ts\nfunction nullish(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullish,\n    expects: `(${wrapped.expects} | null | undefined)`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullishAsync.ts\nfunction nullishAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullishAsync,\n    expects: `(${wrapped.expects} | null | undefined)`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/number/number.ts\nfunction number(message) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: number,\n    expects: \"number\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"number\" && !isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/object.ts\nfunction object(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: object,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/objectAsync.ts\nfunction objectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: objectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRest.ts\nfunction objectWithRest(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRest,\n    expects: \"Object\",\n    async: false,\n    entries,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isValidObjectKey(input, key) && !(key in this.entries)) {\n              const value2 = input[key];\n              const valueDataset = this.rest._run(\n                { typed: false, value: value2 },\n                config2\n              );\n              if (valueDataset.issues) {\n                const pathItem = {\n                  type: \"object\",\n                  origin: \"value\",\n                  input,\n                  key,\n                  value: value2\n                };\n                for (const issue of valueDataset.issues) {\n                  if (issue.path) {\n                    issue.path.unshift(pathItem);\n                  } else {\n                    issue.path = [pathItem];\n                  }\n                  dataset.issues?.push(issue);\n                }\n                if (!dataset.issues) {\n                  dataset.issues = valueDataset.issues;\n                }\n                if (config2.abortEarly) {\n                  dataset.typed = false;\n                  break;\n                }\n              }\n              if (!valueDataset.typed) {\n                dataset.typed = false;\n              }\n              dataset.value[key] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRestAsync.ts\nfunction objectWithRestAsync(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRestAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal entry\n          // Hint: We do not distinguish between missing and `undefined` entries.\n          // The reason for this decision is that it reduces the bundle size, and\n          // we also expect that most users will expect this behavior.\n          Promise.all(\n            Object.entries(this.entries).map(async ([key, schema]) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await schema._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other entries with rest schema\n          // Hint: We exclude specific keys for security reasons\n          Promise.all(\n            Object.entries(input).filter(\n              ([key]) => _isValidObjectKey(input, key) && !(key in this.entries)\n            ).map(\n              async ([key, value2]) => [\n                key,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ]\n            )\n          )\n        ]);\n        for (const [key, value2, valueDataset] of normalDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, valueDataset] of restDatasets) {\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!valueDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/optional/optional.ts\nfunction optional(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optional,\n    expects: `(${wrapped.expects} | undefined)`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/optional/optionalAsync.ts\nfunction optionalAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optionalAsync,\n    expects: `(${wrapped.expects} | undefined)`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/picklist/picklist.ts\nfunction picklist(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"picklist\",\n    reference: picklist,\n    expects: _joinExpects(options.map(_stringify), \"|\"),\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/promise/promise.ts\nfunction promise(message) {\n  return {\n    kind: \"schema\",\n    type: \"promise\",\n    reference: promise,\n    expects: \"Promise\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Promise) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/record.ts\nfunction record(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: record,\n    expects: \"Object\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const entryKey in input) {\n          if (_isValidObjectKey(input, entryKey)) {\n            const entryValue = input[entryKey];\n            const keyDataset = this.key._run(\n              { typed: false, value: entryKey },\n              config2\n            );\n            if (keyDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"key\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of keyDataset.issues) {\n                issue.path = [pathItem];\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = keyDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            const valueDataset = this.value._run(\n              { typed: false, value: entryValue },\n              config2\n            );\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!keyDataset.typed || !valueDataset.typed) {\n              dataset.typed = false;\n            }\n            if (keyDataset.typed) {\n              dataset.value[keyDataset.value] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/recordAsync.ts\nfunction recordAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: recordAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const datasets = await Promise.all(\n          Object.entries(input).filter(([key2]) => _isValidObjectKey(input, key2)).map(\n            ([entryKey, entryValue]) => Promise.all([\n              entryKey,\n              entryValue,\n              this.key._run({ typed: false, value: entryKey }, config2),\n              this.value._run({ typed: false, value: entryValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          entryKey,\n          entryValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"key\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of keyDataset.issues) {\n              issue.path = [pathItem];\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (keyDataset.typed) {\n            dataset.value[keyDataset.value] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/set.ts\nfunction set(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: set,\n    expects: \"Set\",\n    async: false,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        for (const inputValue of input) {\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              key: null,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/setAsync.ts\nfunction setAsync(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: setAsync,\n    expects: \"Set\",\n    async: true,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        const valueDatasets = await Promise.all(\n          [...input].map(\n            async (inputValue) => [\n              inputValue,\n              await this.value._run(\n                { typed: false, value: inputValue },\n                config2\n              )\n            ]\n          )\n        );\n        for (const [inputValue, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              key: null,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObject.ts\nfunction strictObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObjectAsync.ts\nfunction strictObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTuple.ts\nfunction strictTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && this.items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key: this.items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTupleAsync.ts\nfunction strictTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && this.items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key: this.items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/string/string.ts\nfunction string(message) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: string,\n    expects: \"string\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"string\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/symbol/symbol.ts\nfunction symbol(message) {\n  return {\n    kind: \"schema\",\n    type: \"symbol\",\n    reference: symbol,\n    expects: \"symbol\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"symbol\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tuple.ts\nfunction tuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tupleAsync.ts\nfunction tupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          this.items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRest.ts\nfunction tupleWithRest(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRest,\n    expects: \"Array\",\n    async: false,\n    items,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = this.items.length; key < input.length; key++) {\n            const value2 = input[key];\n            const itemDataset = this.rest._run({ typed: false, value: value2 }, config2);\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRestAsync.ts\nfunction tupleWithRestAsync(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRestAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal item\n          Promise.all(\n            this.items.map(async (item, key) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await item._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other items with rest schema\n          Promise.all(\n            input.slice(this.items.length).map(async (value2, key) => {\n              return [\n                key + this.items.length,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          )\n        ]);\n        for (const [key, value2, itemDataset] of normalDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, itemDataset] of restDatasets) {\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"array\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/undefined/undefined.ts\nfunction undefined_(message) {\n  return {\n    kind: \"schema\",\n    type: \"undefined\",\n    reference: undefined_,\n    expects: \"undefined\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/utils/_subIssues/_subIssues.ts\nfunction _subIssues(datasets) {\n  let issues;\n  if (datasets) {\n    for (const dataset of datasets) {\n      if (issues) {\n        issues.push(...dataset.issues);\n      } else {\n        issues = dataset.issues;\n      }\n    }\n  }\n  return issues;\n}\n\n// src/schemas/union/union.ts\nfunction union(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: union,\n    expects: _joinExpects(\n      options.map((option) => option.expects),\n      \"|\"\n    ),\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/unionAsync.ts\nfunction unionAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: unionAsync,\n    expects: _joinExpects(\n      options.map((option) => option.expects),\n      \"|\"\n    ),\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = await schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/unknown/unknown.ts\nfunction unknown() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: unknown,\n    expects: \"unknown\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/utils/_discriminators/_discriminators.ts\nfunction _discriminators(key, options, list = []) {\n  for (const schema of options) {\n    if (schema.type === \"variant\") {\n      _discriminators(key, schema.options, list);\n    } else {\n      list.push(schema.entries[key].expects);\n    }\n  }\n  return list;\n}\n\n// src/schemas/variant/variant.ts\nfunction variant(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variant,\n    expects: \"Object\",\n    async: false,\n    key,\n    options,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            ).issues) {\n              const optionDataset = schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = _joinExpects(\n            _discriminators(this.key, this.options),\n            \"|\"\n          );\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/variantAsync.ts\nfunction variantAsync(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variantAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    options,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !(await schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            )).issues) {\n              const optionDataset = await schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = _joinExpects(\n            _discriminators(this.key, this.options),\n            \"|\"\n          );\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/void/void.ts\nfunction void_(message) {\n  return {\n    kind: \"schema\",\n    type: \"void\",\n    reference: void_,\n    expects: \"void\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/keyof/keyof.ts\nfunction keyof(schema, message) {\n  return picklist(Object.keys(schema.entries), message);\n}\n\n// src/methods/omit/omit.ts\nfunction omit(schema, keys) {\n  const entries = {\n    ...schema.entries\n  };\n  for (const key of keys) {\n    delete entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/parse/parse.ts\nfunction parse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parse/parseAsync.ts\nasync function parseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parser/parser.ts\nfunction parser(schema, config2) {\n  const func = (input) => parse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/parser/parserAsync.ts\nfunction parserAsync(schema, config2) {\n  const func = (input) => parseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/partial/partial.ts\nfunction partial(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optional(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/partial/partialAsync.ts\nfunction partialAsync(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optionalAsync(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pick/pick.ts\nfunction pick(schema, keys) {\n  const entries = {};\n  for (const key of keys) {\n    entries[key] = schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pipe/pipe.ts\nfunction pipe(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    _run(dataset, config2) {\n      for (const item of pipe2) {\n        if (item.kind !== \"metadata\") {\n          if (dataset.issues && (item.kind === \"schema\" || item.kind === \"transformation\")) {\n            dataset.typed = false;\n            break;\n          }\n          if (!dataset.issues || !config2.abortEarly && !config2.abortPipeEarly) {\n            dataset = item._run(dataset, config2);\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/pipe/pipeAsync.ts\nfunction pipeAsync(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    async: true,\n    async _run(dataset, config2) {\n      for (const item of pipe2) {\n        if (item.kind !== \"metadata\") {\n          if (dataset.issues && (item.kind === \"schema\" || item.kind === \"transformation\")) {\n            dataset.typed = false;\n            break;\n          }\n          if (!dataset.issues || !config2.abortEarly && !config2.abortPipeEarly) {\n            dataset = await item._run(dataset, config2);\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/required/required.ts\nfunction required(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptional(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/required/requiredAsync.ts\nfunction requiredAsync(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptionalAsync(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/safeParse/safeParse.ts\nfunction safeParse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParse/safeParseAsync.ts\nasync function safeParseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParser/safeParser.ts\nfunction safeParser(schema, config2) {\n  const func = (input) => safeParse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/safeParser/safeParserAsync.ts\nfunction safeParserAsync(schema, config2) {\n  const func = (input) => safeParseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/unwrap/unwrap.ts\nfunction unwrap(schema) {\n  return schema.wrapped;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/valibot@0.38.0_typescript@5.9.2/node_modules/valibot/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var uint8array_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8array-tools */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-tools@0.0.8/node_modules/uint8array-tools/src/mjs/browser.js\");\n\n\nconst checkUInt64 = (n) => {\n    if (n < 0 || n > 0xffffffffffffffffn) {\n        throw new RangeError('value out of range');\n    }\n};\nfunction checkUInt53(n) {\n    if (n < 0 || n > Number.MAX_SAFE_INTEGER || n % 1 !== 0)\n        throw new RangeError('value out of range');\n}\nfunction checkUint53OrUint64(n) {\n    if (typeof n === 'number')\n        checkUInt53(n);\n    else\n        checkUInt64(n);\n}\nfunction encode(n, buffer, offset) {\n    checkUint53OrUint64(n);\n    if (offset === undefined)\n        offset = 0;\n    if (buffer === undefined) {\n        buffer = new Uint8Array(encodingLength(n));\n    }\n    let bytes = 0;\n    // 8 bit\n    if (n < 0xfd) {\n        buffer.set([Number(n)], offset);\n        bytes = 1;\n        // 16 bit\n    }\n    else if (n <= 0xffff) {\n        buffer.set([0xfd], offset);\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt16(buffer, offset + 1, Number(n), 'LE');\n        bytes = 3;\n        // 32 bit\n    }\n    else if (n <= 0xffffffff) {\n        buffer.set([0xfe], offset);\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt32(buffer, offset + 1, Number(n), 'LE');\n        bytes = 5;\n        // 64 bit\n    }\n    else {\n        buffer.set([0xff], offset);\n        uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.writeUInt64(buffer, offset + 1, BigInt(n), 'LE');\n        bytes = 9;\n    }\n    return { buffer, bytes };\n}\nfunction decode(buffer, offset) {\n    if (offset === undefined)\n        offset = 0;\n    const first = buffer.at(offset);\n    if (first === undefined)\n        throw new Error('buffer too small');\n    // 8 bit\n    if (first < 0xfd) {\n        return { numberValue: first, bigintValue: BigInt(first), bytes: 1 };\n        // 16 bit\n    }\n    else if (first === 0xfd) {\n        const val = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt16(buffer, offset + 1, 'LE');\n        return {\n            numberValue: val,\n            bigintValue: BigInt(val),\n            bytes: 3\n        };\n        // 32 bit\n    }\n    else if (first === 0xfe) {\n        const val = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt32(buffer, offset + 1, 'LE');\n        return {\n            numberValue: val,\n            bigintValue: BigInt(val),\n            bytes: 5\n        };\n        // 64 bit\n    }\n    else {\n        const number = uint8array_tools__WEBPACK_IMPORTED_MODULE_0__.readUInt64(buffer, offset + 1, 'LE');\n        return { numberValue: number <= Number.MAX_SAFE_INTEGER ? Number(number) : null, bigintValue: number, bytes: 9 };\n    }\n}\nfunction encodingLength(n) {\n    checkUint53OrUint64(n);\n    return n < 0xfd ? 1 : n <= 0xffff ? 3 : n <= 0xffffffff ? 5 : 9;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS92YXJ1aW50LWJpdGNvaW5AMi4wLjAvbm9kZV9tb2R1bGVzL3ZhcnVpbnQtYml0Y29pbi9zcmMvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUM2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFpQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBaUI7QUFDekI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdEQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdEQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFnQjtBQUN2QyxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYnRjL21pZGwteC1iaXRjb2luLXN1bW1pdC1oYWNrYXRob24tMjAyNS91dHhvLXBzYnQtZGVtby9ub2RlX21vZHVsZXMvLnBucG0vdmFydWludC1iaXRjb2luQDIuMC4wL25vZGVfbW9kdWxlcy92YXJ1aW50LWJpdGNvaW4vc3JjL2VzbS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgKiBhcyB0b29scyBmcm9tICd1aW50OGFycmF5LXRvb2xzJztcbmNvbnN0IGNoZWNrVUludDY0ID0gKG4pID0+IHtcbiAgICBpZiAobiA8IDAgfHwgbiA+IDB4ZmZmZmZmZmZmZmZmZmZmZm4pIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3ZhbHVlIG91dCBvZiByYW5nZScpO1xuICAgIH1cbn07XG5mdW5jdGlvbiBjaGVja1VJbnQ1MyhuKSB7XG4gICAgaWYgKG4gPCAwIHx8IG4gPiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB8fCBuICUgMSAhPT0gMClcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3ZhbHVlIG91dCBvZiByYW5nZScpO1xufVxuZnVuY3Rpb24gY2hlY2tVaW50NTNPclVpbnQ2NChuKSB7XG4gICAgaWYgKHR5cGVvZiBuID09PSAnbnVtYmVyJylcbiAgICAgICAgY2hlY2tVSW50NTMobik7XG4gICAgZWxzZVxuICAgICAgICBjaGVja1VJbnQ2NChuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobiwgYnVmZmVyLCBvZmZzZXQpIHtcbiAgICBjaGVja1VpbnQ1M09yVWludDY0KG4pO1xuICAgIGlmIChvZmZzZXQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgb2Zmc2V0ID0gMDtcbiAgICBpZiAoYnVmZmVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoZW5jb2RpbmdMZW5ndGgobikpO1xuICAgIH1cbiAgICBsZXQgYnl0ZXMgPSAwO1xuICAgIC8vIDggYml0XG4gICAgaWYgKG4gPCAweGZkKSB7XG4gICAgICAgIGJ1ZmZlci5zZXQoW051bWJlcihuKV0sIG9mZnNldCk7XG4gICAgICAgIGJ5dGVzID0gMTtcbiAgICAgICAgLy8gMTYgYml0XG4gICAgfVxuICAgIGVsc2UgaWYgKG4gPD0gMHhmZmZmKSB7XG4gICAgICAgIGJ1ZmZlci5zZXQoWzB4ZmRdLCBvZmZzZXQpO1xuICAgICAgICB0b29scy53cml0ZVVJbnQxNihidWZmZXIsIG9mZnNldCArIDEsIE51bWJlcihuKSwgJ0xFJyk7XG4gICAgICAgIGJ5dGVzID0gMztcbiAgICAgICAgLy8gMzIgYml0XG4gICAgfVxuICAgIGVsc2UgaWYgKG4gPD0gMHhmZmZmZmZmZikge1xuICAgICAgICBidWZmZXIuc2V0KFsweGZlXSwgb2Zmc2V0KTtcbiAgICAgICAgdG9vbHMud3JpdGVVSW50MzIoYnVmZmVyLCBvZmZzZXQgKyAxLCBOdW1iZXIobiksICdMRScpO1xuICAgICAgICBieXRlcyA9IDU7XG4gICAgICAgIC8vIDY0IGJpdFxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYnVmZmVyLnNldChbMHhmZl0sIG9mZnNldCk7XG4gICAgICAgIHRvb2xzLndyaXRlVUludDY0KGJ1ZmZlciwgb2Zmc2V0ICsgMSwgQmlnSW50KG4pLCAnTEUnKTtcbiAgICAgICAgYnl0ZXMgPSA5O1xuICAgIH1cbiAgICByZXR1cm4geyBidWZmZXIsIGJ5dGVzIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKGJ1ZmZlciwgb2Zmc2V0KSB7XG4gICAgaWYgKG9mZnNldCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICBvZmZzZXQgPSAwO1xuICAgIGNvbnN0IGZpcnN0ID0gYnVmZmVyLmF0KG9mZnNldCk7XG4gICAgaWYgKGZpcnN0ID09PSB1bmRlZmluZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYnVmZmVyIHRvbyBzbWFsbCcpO1xuICAgIC8vIDggYml0XG4gICAgaWYgKGZpcnN0IDwgMHhmZCkge1xuICAgICAgICByZXR1cm4geyBudW1iZXJWYWx1ZTogZmlyc3QsIGJpZ2ludFZhbHVlOiBCaWdJbnQoZmlyc3QpLCBieXRlczogMSB9O1xuICAgICAgICAvLyAxNiBiaXRcbiAgICB9XG4gICAgZWxzZSBpZiAoZmlyc3QgPT09IDB4ZmQpIHtcbiAgICAgICAgY29uc3QgdmFsID0gdG9vbHMucmVhZFVJbnQxNihidWZmZXIsIG9mZnNldCArIDEsICdMRScpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbnVtYmVyVmFsdWU6IHZhbCxcbiAgICAgICAgICAgIGJpZ2ludFZhbHVlOiBCaWdJbnQodmFsKSxcbiAgICAgICAgICAgIGJ5dGVzOiAzXG4gICAgICAgIH07XG4gICAgICAgIC8vIDMyIGJpdFxuICAgIH1cbiAgICBlbHNlIGlmIChmaXJzdCA9PT0gMHhmZSkge1xuICAgICAgICBjb25zdCB2YWwgPSB0b29scy5yZWFkVUludDMyKGJ1ZmZlciwgb2Zmc2V0ICsgMSwgJ0xFJyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBudW1iZXJWYWx1ZTogdmFsLFxuICAgICAgICAgICAgYmlnaW50VmFsdWU6IEJpZ0ludCh2YWwpLFxuICAgICAgICAgICAgYnl0ZXM6IDVcbiAgICAgICAgfTtcbiAgICAgICAgLy8gNjQgYml0XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBudW1iZXIgPSB0b29scy5yZWFkVUludDY0KGJ1ZmZlciwgb2Zmc2V0ICsgMSwgJ0xFJyk7XG4gICAgICAgIHJldHVybiB7IG51bWJlclZhbHVlOiBudW1iZXIgPD0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgPyBOdW1iZXIobnVtYmVyKSA6IG51bGwsIGJpZ2ludFZhbHVlOiBudW1iZXIsIGJ5dGVzOiA5IH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kaW5nTGVuZ3RoKG4pIHtcbiAgICBjaGVja1VpbnQ1M09yVWludDY0KG4pO1xuICAgIHJldHVybiBuIDwgMHhmZCA/IDEgOiBuIDw9IDB4ZmZmZiA/IDMgOiBuIDw9IDB4ZmZmZmZmZmYgPyA1IDogOTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/varuint-bitcoin@2.0.0/node_modules/varuint-bitcoin/src/esm/index.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/.pnpm/next@15.3.1_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fbtc%2Fmidl-x-bitcoin-summit-hackathon-2025%2Futxo-psbt-demo%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);